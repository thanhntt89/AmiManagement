//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OperationDTO.AmiSystemDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Operation3PDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Operation3PDataSet : global::System.Data.DataSet {
        
        private Operation3PDataTable tableOperation3P;
        
        private UpdateMeasurementPointMeterForOperation3PDataTable tableUpdateMeasurementPointMeterForOperation3P;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Operation3PDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Operation3PDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Operation3P"] != null)) {
                    base.Tables.Add(new Operation3PDataTable(ds.Tables["Operation3P"]));
                }
                if ((ds.Tables["UpdateMeasurementPointMeterForOperation3P"] != null)) {
                    base.Tables.Add(new UpdateMeasurementPointMeterForOperation3PDataTable(ds.Tables["UpdateMeasurementPointMeterForOperation3P"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Operation3PDataTable Operation3P {
            get {
                return this.tableOperation3P;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdateMeasurementPointMeterForOperation3PDataTable UpdateMeasurementPointMeterForOperation3P {
            get {
                return this.tableUpdateMeasurementPointMeterForOperation3P;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Operation3PDataSet cln = ((Operation3PDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Operation3P"] != null)) {
                    base.Tables.Add(new Operation3PDataTable(ds.Tables["Operation3P"]));
                }
                if ((ds.Tables["UpdateMeasurementPointMeterForOperation3P"] != null)) {
                    base.Tables.Add(new UpdateMeasurementPointMeterForOperation3PDataTable(ds.Tables["UpdateMeasurementPointMeterForOperation3P"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOperation3P = ((Operation3PDataTable)(base.Tables["Operation3P"]));
            if ((initTable == true)) {
                if ((this.tableOperation3P != null)) {
                    this.tableOperation3P.InitVars();
                }
            }
            this.tableUpdateMeasurementPointMeterForOperation3P = ((UpdateMeasurementPointMeterForOperation3PDataTable)(base.Tables["UpdateMeasurementPointMeterForOperation3P"]));
            if ((initTable == true)) {
                if ((this.tableUpdateMeasurementPointMeterForOperation3P != null)) {
                    this.tableUpdateMeasurementPointMeterForOperation3P.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Operation3PDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Operation3PDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOperation3P = new Operation3PDataTable();
            base.Tables.Add(this.tableOperation3P);
            this.tableUpdateMeasurementPointMeterForOperation3P = new UpdateMeasurementPointMeterForOperation3PDataTable();
            base.Tables.Add(this.tableUpdateMeasurementPointMeterForOperation3P);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOperation3P() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUpdateMeasurementPointMeterForOperation3P() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Operation3PDataSet ds = new Operation3PDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Operation3PRowChangeEventHandler(object sender, Operation3PRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UpdateMeasurementPointMeterForOperation3PRowChangeEventHandler(object sender, UpdateMeasurementPointMeterForOperation3PRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Operation3PDataTable : global::System.Data.TypedTableBase<Operation3PRow> {
            
            private global::System.Data.DataColumn columnOperationId;
            
            private global::System.Data.DataColumn columnMeasurementPointMeterId;
            
            private global::System.Data.DataColumn columnMeterId;
            
            private global::System.Data.DataColumn columnServerTime;
            
            private global::System.Data.DataColumn columnMeterTime;
            
            private global::System.Data.DataColumn columnVoltagePhaseA;
            
            private global::System.Data.DataColumn columnVoltagePhaseB;
            
            private global::System.Data.DataColumn columnVoltagePhaseC;
            
            private global::System.Data.DataColumn columnCurrentPhaseA;
            
            private global::System.Data.DataColumn columnCurrentPhaseB;
            
            private global::System.Data.DataColumn columnCurrentPhaseC;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseA;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseB;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseC;
            
            private global::System.Data.DataColumn columnAngleofUL2SubUL1;
            
            private global::System.Data.DataColumn columnAngleofUL1SubUL3;
            
            private global::System.Data.DataColumn columnFrequency;
            
            private global::System.Data.DataColumn columnNeutralCurrent;
            
            private global::System.Data.DataColumn columnActivePowerPhaseA;
            
            private global::System.Data.DataColumn columnActivePowerPhaseB;
            
            private global::System.Data.DataColumn columnActivePowerPhaseC;
            
            private global::System.Data.DataColumn columnActivePowerPhaseTotal;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseA;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseB;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseC;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseTotal;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseA;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseB;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseC;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseTotal;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseA;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseB;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseC;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseTotal;
            
            private global::System.Data.DataColumn columnEnergyPlusARate1;
            
            private global::System.Data.DataColumn columnEnergyPlusARate2;
            
            private global::System.Data.DataColumn columnEnergyPlusARate3;
            
            private global::System.Data.DataColumn columnEnergyPlusARate4;
            
            private global::System.Data.DataColumn columnEnergySubARate1;
            
            private global::System.Data.DataColumn columnEnergySubARate2;
            
            private global::System.Data.DataColumn columnEnergySubARate3;
            
            private global::System.Data.DataColumn columnEnergySubARate4;
            
            private global::System.Data.DataColumn columnQ1;
            
            private global::System.Data.DataColumn columnQ2;
            
            private global::System.Data.DataColumn columnQ3;
            
            private global::System.Data.DataColumn columnQ4;
            
            private global::System.Data.DataColumn columnImportWh;
            
            private global::System.Data.DataColumn columnExportWh;
            
            private global::System.Data.DataColumn columnEnergyPlusVA;
            
            private global::System.Data.DataColumn columnMaxDemandPlusA;
            
            private global::System.Data.DataColumn columnMaxDemandSubA;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate1;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate1Time;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate1;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate1Time;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate2;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate2Time;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate2;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate2Time;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate3;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate3Time;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate3;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate3Time;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate4;
            
            private global::System.Data.DataColumn columnMaxDemandPlusARate4Time;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate4;
            
            private global::System.Data.DataColumn columnMaxDemandSubARate4Time;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate1;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate2;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate3;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate1;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate2;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate3;
            
            private global::System.Data.DataColumn columnPhaseRotation;
            
            private global::System.Data.DataColumn columnTu;
            
            private global::System.Data.DataColumn columnTi;
            
            private global::System.Data.DataColumn columnTuT;
            
            private global::System.Data.DataColumn columnTiT;
            
            private global::System.Data.DataColumn columnTuM;
            
            private global::System.Data.DataColumn columnTiM;
            
            private global::System.Data.DataColumn columnSignal;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PDataTable() {
                this.TableName = "Operation3P";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Operation3PDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Operation3PDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationIdColumn {
                get {
                    return this.columnOperationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeasurementPointMeterIdColumn {
                get {
                    return this.columnMeasurementPointMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterIdColumn {
                get {
                    return this.columnMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerTimeColumn {
                get {
                    return this.columnServerTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterTimeColumn {
                get {
                    return this.columnMeterTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseAColumn {
                get {
                    return this.columnVoltagePhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseBColumn {
                get {
                    return this.columnVoltagePhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseCColumn {
                get {
                    return this.columnVoltagePhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseAColumn {
                get {
                    return this.columnCurrentPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseBColumn {
                get {
                    return this.columnCurrentPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseCColumn {
                get {
                    return this.columnCurrentPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseAColumn {
                get {
                    return this.columnPhaseAnglePhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseBColumn {
                get {
                    return this.columnPhaseAnglePhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseCColumn {
                get {
                    return this.columnPhaseAnglePhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AngleofUL2SubUL1Column {
                get {
                    return this.columnAngleofUL2SubUL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AngleofUL1SubUL3Column {
                get {
                    return this.columnAngleofUL1SubUL3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrequencyColumn {
                get {
                    return this.columnFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeutralCurrentColumn {
                get {
                    return this.columnNeutralCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseAColumn {
                get {
                    return this.columnActivePowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseBColumn {
                get {
                    return this.columnActivePowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseCColumn {
                get {
                    return this.columnActivePowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseTotalColumn {
                get {
                    return this.columnActivePowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseAColumn {
                get {
                    return this.columnReactivePowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseBColumn {
                get {
                    return this.columnReactivePowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseCColumn {
                get {
                    return this.columnReactivePowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseTotalColumn {
                get {
                    return this.columnReactivePowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseAColumn {
                get {
                    return this.columnApparentPowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseBColumn {
                get {
                    return this.columnApparentPowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseCColumn {
                get {
                    return this.columnApparentPowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseTotalColumn {
                get {
                    return this.columnApparentPowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseAColumn {
                get {
                    return this.columnPowerFactorPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseBColumn {
                get {
                    return this.columnPowerFactorPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseCColumn {
                get {
                    return this.columnPowerFactorPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseTotalColumn {
                get {
                    return this.columnPowerFactorPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate1Column {
                get {
                    return this.columnEnergyPlusARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate2Column {
                get {
                    return this.columnEnergyPlusARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate3Column {
                get {
                    return this.columnEnergyPlusARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate4Column {
                get {
                    return this.columnEnergyPlusARate4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate1Column {
                get {
                    return this.columnEnergySubARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate2Column {
                get {
                    return this.columnEnergySubARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate3Column {
                get {
                    return this.columnEnergySubARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate4Column {
                get {
                    return this.columnEnergySubARate4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q1Column {
                get {
                    return this.columnQ1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q2Column {
                get {
                    return this.columnQ2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q3Column {
                get {
                    return this.columnQ3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q4Column {
                get {
                    return this.columnQ4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportWhColumn {
                get {
                    return this.columnImportWh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportWhColumn {
                get {
                    return this.columnExportWh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusVAColumn {
                get {
                    return this.columnEnergyPlusVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusAColumn {
                get {
                    return this.columnMaxDemandPlusA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubAColumn {
                get {
                    return this.columnMaxDemandSubA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate1Column {
                get {
                    return this.columnMaxDemandPlusARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate1TimeColumn {
                get {
                    return this.columnMaxDemandPlusARate1Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate1Column {
                get {
                    return this.columnMaxDemandSubARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate1TimeColumn {
                get {
                    return this.columnMaxDemandSubARate1Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate2Column {
                get {
                    return this.columnMaxDemandPlusARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate2TimeColumn {
                get {
                    return this.columnMaxDemandPlusARate2Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate2Column {
                get {
                    return this.columnMaxDemandSubARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate2TimeColumn {
                get {
                    return this.columnMaxDemandSubARate2Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate3Column {
                get {
                    return this.columnMaxDemandPlusARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate3TimeColumn {
                get {
                    return this.columnMaxDemandPlusARate3Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate3Column {
                get {
                    return this.columnMaxDemandSubARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate3TimeColumn {
                get {
                    return this.columnMaxDemandSubARate3Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate4Column {
                get {
                    return this.columnMaxDemandPlusARate4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandPlusARate4TimeColumn {
                get {
                    return this.columnMaxDemandPlusARate4Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate4Column {
                get {
                    return this.columnMaxDemandSubARate4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDemandSubARate4TimeColumn {
                get {
                    return this.columnMaxDemandSubARate4Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate1Column {
                get {
                    return this.columnReactiveEnergyPlusARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate2Column {
                get {
                    return this.columnReactiveEnergyPlusARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate3Column {
                get {
                    return this.columnReactiveEnergyPlusARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate1Column {
                get {
                    return this.columnReactiveEnergySubARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate2Column {
                get {
                    return this.columnReactiveEnergySubARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate3Column {
                get {
                    return this.columnReactiveEnergySubARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseRotationColumn {
                get {
                    return this.columnPhaseRotation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TuColumn {
                get {
                    return this.columnTu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TiColumn {
                get {
                    return this.columnTi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TuTColumn {
                get {
                    return this.columnTuT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TiTColumn {
                get {
                    return this.columnTiT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TuMColumn {
                get {
                    return this.columnTuM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TiMColumn {
                get {
                    return this.columnTiM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignalColumn {
                get {
                    return this.columnSignal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRow this[int index] {
                get {
                    return ((Operation3PRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Operation3PRowChangeEventHandler Operation3PRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Operation3PRowChangeEventHandler Operation3PRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Operation3PRowChangeEventHandler Operation3PRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Operation3PRowChangeEventHandler Operation3PRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOperation3PRow(Operation3PRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRow AddOperation3PRow(
                        string OperationId, 
                        long MeasurementPointMeterId, 
                        long MeterId, 
                        System.DateTime ServerTime, 
                        System.DateTime MeterTime, 
                        decimal VoltagePhaseA, 
                        decimal VoltagePhaseB, 
                        decimal VoltagePhaseC, 
                        decimal CurrentPhaseA, 
                        decimal CurrentPhaseB, 
                        decimal CurrentPhaseC, 
                        decimal PhaseAnglePhaseA, 
                        decimal PhaseAnglePhaseB, 
                        decimal PhaseAnglePhaseC, 
                        decimal AngleofUL2SubUL1, 
                        decimal AngleofUL1SubUL3, 
                        decimal Frequency, 
                        decimal NeutralCurrent, 
                        decimal ActivePowerPhaseA, 
                        decimal ActivePowerPhaseB, 
                        decimal ActivePowerPhaseC, 
                        decimal ActivePowerPhaseTotal, 
                        decimal ReactivePowerPhaseA, 
                        decimal ReactivePowerPhaseB, 
                        decimal ReactivePowerPhaseC, 
                        decimal ReactivePowerPhaseTotal, 
                        decimal ApparentPowerPhaseA, 
                        decimal ApparentPowerPhaseB, 
                        decimal ApparentPowerPhaseC, 
                        decimal ApparentPowerPhaseTotal, 
                        decimal PowerFactorPhaseA, 
                        decimal PowerFactorPhaseB, 
                        decimal PowerFactorPhaseC, 
                        decimal PowerFactorPhaseTotal, 
                        decimal EnergyPlusARate1, 
                        decimal EnergyPlusARate2, 
                        decimal EnergyPlusARate3, 
                        decimal EnergyPlusARate4, 
                        decimal EnergySubARate1, 
                        decimal EnergySubARate2, 
                        decimal EnergySubARate3, 
                        decimal EnergySubARate4, 
                        decimal Q1, 
                        decimal Q2, 
                        decimal Q3, 
                        decimal Q4, 
                        decimal ImportWh, 
                        decimal ExportWh, 
                        decimal EnergyPlusVA, 
                        decimal MaxDemandPlusA, 
                        decimal MaxDemandSubA, 
                        decimal MaxDemandPlusARate1, 
                        System.DateTime MaxDemandPlusARate1Time, 
                        decimal MaxDemandSubARate1, 
                        System.DateTime MaxDemandSubARate1Time, 
                        decimal MaxDemandPlusARate2, 
                        System.DateTime MaxDemandPlusARate2Time, 
                        decimal MaxDemandSubARate2, 
                        System.DateTime MaxDemandSubARate2Time, 
                        decimal MaxDemandPlusARate3, 
                        System.DateTime MaxDemandPlusARate3Time, 
                        decimal MaxDemandSubARate3, 
                        System.DateTime MaxDemandSubARate3Time, 
                        decimal MaxDemandPlusARate4, 
                        System.DateTime MaxDemandPlusARate4Time, 
                        decimal MaxDemandSubARate4, 
                        System.DateTime MaxDemandSubARate4Time, 
                        decimal ReactiveEnergyPlusARate1, 
                        decimal ReactiveEnergyPlusARate2, 
                        decimal ReactiveEnergyPlusARate3, 
                        decimal ReactiveEnergySubARate1, 
                        decimal ReactiveEnergySubARate2, 
                        decimal ReactiveEnergySubARate3, 
                        decimal PhaseRotation, 
                        decimal Tu, 
                        decimal Ti, 
                        decimal TuT, 
                        decimal TiT, 
                        decimal TuM, 
                        decimal TiM, 
                        decimal Signal, 
                        System.DateTime CreateDate) {
                Operation3PRow rowOperation3PRow = ((Operation3PRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OperationId,
                        MeasurementPointMeterId,
                        MeterId,
                        ServerTime,
                        MeterTime,
                        VoltagePhaseA,
                        VoltagePhaseB,
                        VoltagePhaseC,
                        CurrentPhaseA,
                        CurrentPhaseB,
                        CurrentPhaseC,
                        PhaseAnglePhaseA,
                        PhaseAnglePhaseB,
                        PhaseAnglePhaseC,
                        AngleofUL2SubUL1,
                        AngleofUL1SubUL3,
                        Frequency,
                        NeutralCurrent,
                        ActivePowerPhaseA,
                        ActivePowerPhaseB,
                        ActivePowerPhaseC,
                        ActivePowerPhaseTotal,
                        ReactivePowerPhaseA,
                        ReactivePowerPhaseB,
                        ReactivePowerPhaseC,
                        ReactivePowerPhaseTotal,
                        ApparentPowerPhaseA,
                        ApparentPowerPhaseB,
                        ApparentPowerPhaseC,
                        ApparentPowerPhaseTotal,
                        PowerFactorPhaseA,
                        PowerFactorPhaseB,
                        PowerFactorPhaseC,
                        PowerFactorPhaseTotal,
                        EnergyPlusARate1,
                        EnergyPlusARate2,
                        EnergyPlusARate3,
                        EnergyPlusARate4,
                        EnergySubARate1,
                        EnergySubARate2,
                        EnergySubARate3,
                        EnergySubARate4,
                        Q1,
                        Q2,
                        Q3,
                        Q4,
                        ImportWh,
                        ExportWh,
                        EnergyPlusVA,
                        MaxDemandPlusA,
                        MaxDemandSubA,
                        MaxDemandPlusARate1,
                        MaxDemandPlusARate1Time,
                        MaxDemandSubARate1,
                        MaxDemandSubARate1Time,
                        MaxDemandPlusARate2,
                        MaxDemandPlusARate2Time,
                        MaxDemandSubARate2,
                        MaxDemandSubARate2Time,
                        MaxDemandPlusARate3,
                        MaxDemandPlusARate3Time,
                        MaxDemandSubARate3,
                        MaxDemandSubARate3Time,
                        MaxDemandPlusARate4,
                        MaxDemandPlusARate4Time,
                        MaxDemandSubARate4,
                        MaxDemandSubARate4Time,
                        ReactiveEnergyPlusARate1,
                        ReactiveEnergyPlusARate2,
                        ReactiveEnergyPlusARate3,
                        ReactiveEnergySubARate1,
                        ReactiveEnergySubARate2,
                        ReactiveEnergySubARate3,
                        PhaseRotation,
                        Tu,
                        Ti,
                        TuT,
                        TiT,
                        TuM,
                        TiM,
                        Signal,
                        CreateDate};
                rowOperation3PRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOperation3PRow);
                return rowOperation3PRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRow FindByOperationIdServerTime(string OperationId, System.DateTime ServerTime) {
                return ((Operation3PRow)(this.Rows.Find(new object[] {
                            OperationId,
                            ServerTime})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Operation3PDataTable cln = ((Operation3PDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Operation3PDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOperationId = base.Columns["OperationId"];
                this.columnMeasurementPointMeterId = base.Columns["MeasurementPointMeterId"];
                this.columnMeterId = base.Columns["MeterId"];
                this.columnServerTime = base.Columns["ServerTime"];
                this.columnMeterTime = base.Columns["MeterTime"];
                this.columnVoltagePhaseA = base.Columns["VoltagePhaseA"];
                this.columnVoltagePhaseB = base.Columns["VoltagePhaseB"];
                this.columnVoltagePhaseC = base.Columns["VoltagePhaseC"];
                this.columnCurrentPhaseA = base.Columns["CurrentPhaseA"];
                this.columnCurrentPhaseB = base.Columns["CurrentPhaseB"];
                this.columnCurrentPhaseC = base.Columns["CurrentPhaseC"];
                this.columnPhaseAnglePhaseA = base.Columns["PhaseAnglePhaseA"];
                this.columnPhaseAnglePhaseB = base.Columns["PhaseAnglePhaseB"];
                this.columnPhaseAnglePhaseC = base.Columns["PhaseAnglePhaseC"];
                this.columnAngleofUL2SubUL1 = base.Columns["AngleofUL2SubUL1"];
                this.columnAngleofUL1SubUL3 = base.Columns["AngleofUL1SubUL3"];
                this.columnFrequency = base.Columns["Frequency"];
                this.columnNeutralCurrent = base.Columns["NeutralCurrent"];
                this.columnActivePowerPhaseA = base.Columns["ActivePowerPhaseA"];
                this.columnActivePowerPhaseB = base.Columns["ActivePowerPhaseB"];
                this.columnActivePowerPhaseC = base.Columns["ActivePowerPhaseC"];
                this.columnActivePowerPhaseTotal = base.Columns["ActivePowerPhaseTotal"];
                this.columnReactivePowerPhaseA = base.Columns["ReactivePowerPhaseA"];
                this.columnReactivePowerPhaseB = base.Columns["ReactivePowerPhaseB"];
                this.columnReactivePowerPhaseC = base.Columns["ReactivePowerPhaseC"];
                this.columnReactivePowerPhaseTotal = base.Columns["ReactivePowerPhaseTotal"];
                this.columnApparentPowerPhaseA = base.Columns["ApparentPowerPhaseA"];
                this.columnApparentPowerPhaseB = base.Columns["ApparentPowerPhaseB"];
                this.columnApparentPowerPhaseC = base.Columns["ApparentPowerPhaseC"];
                this.columnApparentPowerPhaseTotal = base.Columns["ApparentPowerPhaseTotal"];
                this.columnPowerFactorPhaseA = base.Columns["PowerFactorPhaseA"];
                this.columnPowerFactorPhaseB = base.Columns["PowerFactorPhaseB"];
                this.columnPowerFactorPhaseC = base.Columns["PowerFactorPhaseC"];
                this.columnPowerFactorPhaseTotal = base.Columns["PowerFactorPhaseTotal"];
                this.columnEnergyPlusARate1 = base.Columns["EnergyPlusARate1"];
                this.columnEnergyPlusARate2 = base.Columns["EnergyPlusARate2"];
                this.columnEnergyPlusARate3 = base.Columns["EnergyPlusARate3"];
                this.columnEnergyPlusARate4 = base.Columns["EnergyPlusARate4"];
                this.columnEnergySubARate1 = base.Columns["EnergySubARate1"];
                this.columnEnergySubARate2 = base.Columns["EnergySubARate2"];
                this.columnEnergySubARate3 = base.Columns["EnergySubARate3"];
                this.columnEnergySubARate4 = base.Columns["EnergySubARate4"];
                this.columnQ1 = base.Columns["Q1"];
                this.columnQ2 = base.Columns["Q2"];
                this.columnQ3 = base.Columns["Q3"];
                this.columnQ4 = base.Columns["Q4"];
                this.columnImportWh = base.Columns["ImportWh"];
                this.columnExportWh = base.Columns["ExportWh"];
                this.columnEnergyPlusVA = base.Columns["EnergyPlusVA"];
                this.columnMaxDemandPlusA = base.Columns["MaxDemandPlusA"];
                this.columnMaxDemandSubA = base.Columns["MaxDemandSubA"];
                this.columnMaxDemandPlusARate1 = base.Columns["MaxDemandPlusARate1"];
                this.columnMaxDemandPlusARate1Time = base.Columns["MaxDemandPlusARate1Time"];
                this.columnMaxDemandSubARate1 = base.Columns["MaxDemandSubARate1"];
                this.columnMaxDemandSubARate1Time = base.Columns["MaxDemandSubARate1Time"];
                this.columnMaxDemandPlusARate2 = base.Columns["MaxDemandPlusARate2"];
                this.columnMaxDemandPlusARate2Time = base.Columns["MaxDemandPlusARate2Time"];
                this.columnMaxDemandSubARate2 = base.Columns["MaxDemandSubARate2"];
                this.columnMaxDemandSubARate2Time = base.Columns["MaxDemandSubARate2Time"];
                this.columnMaxDemandPlusARate3 = base.Columns["MaxDemandPlusARate3"];
                this.columnMaxDemandPlusARate3Time = base.Columns["MaxDemandPlusARate3Time"];
                this.columnMaxDemandSubARate3 = base.Columns["MaxDemandSubARate3"];
                this.columnMaxDemandSubARate3Time = base.Columns["MaxDemandSubARate3Time"];
                this.columnMaxDemandPlusARate4 = base.Columns["MaxDemandPlusARate4"];
                this.columnMaxDemandPlusARate4Time = base.Columns["MaxDemandPlusARate4Time"];
                this.columnMaxDemandSubARate4 = base.Columns["MaxDemandSubARate4"];
                this.columnMaxDemandSubARate4Time = base.Columns["MaxDemandSubARate4Time"];
                this.columnReactiveEnergyPlusARate1 = base.Columns["ReactiveEnergyPlusARate1"];
                this.columnReactiveEnergyPlusARate2 = base.Columns["ReactiveEnergyPlusARate2"];
                this.columnReactiveEnergyPlusARate3 = base.Columns["ReactiveEnergyPlusARate3"];
                this.columnReactiveEnergySubARate1 = base.Columns["ReactiveEnergySubARate1"];
                this.columnReactiveEnergySubARate2 = base.Columns["ReactiveEnergySubARate2"];
                this.columnReactiveEnergySubARate3 = base.Columns["ReactiveEnergySubARate3"];
                this.columnPhaseRotation = base.Columns["PhaseRotation"];
                this.columnTu = base.Columns["Tu"];
                this.columnTi = base.Columns["Ti"];
                this.columnTuT = base.Columns["TuT"];
                this.columnTiT = base.Columns["TiT"];
                this.columnTuM = base.Columns["TuM"];
                this.columnTiM = base.Columns["TiM"];
                this.columnSignal = base.Columns["Signal"];
                this.columnCreateDate = base.Columns["CreateDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOperationId = new global::System.Data.DataColumn("OperationId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationId);
                this.columnMeasurementPointMeterId = new global::System.Data.DataColumn("MeasurementPointMeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementPointMeterId);
                this.columnMeterId = new global::System.Data.DataColumn("MeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterId);
                this.columnServerTime = new global::System.Data.DataColumn("ServerTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerTime);
                this.columnMeterTime = new global::System.Data.DataColumn("MeterTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterTime);
                this.columnVoltagePhaseA = new global::System.Data.DataColumn("VoltagePhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseA);
                this.columnVoltagePhaseB = new global::System.Data.DataColumn("VoltagePhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseB);
                this.columnVoltagePhaseC = new global::System.Data.DataColumn("VoltagePhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseC);
                this.columnCurrentPhaseA = new global::System.Data.DataColumn("CurrentPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseA);
                this.columnCurrentPhaseB = new global::System.Data.DataColumn("CurrentPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseB);
                this.columnCurrentPhaseC = new global::System.Data.DataColumn("CurrentPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseC);
                this.columnPhaseAnglePhaseA = new global::System.Data.DataColumn("PhaseAnglePhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseA);
                this.columnPhaseAnglePhaseB = new global::System.Data.DataColumn("PhaseAnglePhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseB);
                this.columnPhaseAnglePhaseC = new global::System.Data.DataColumn("PhaseAnglePhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseC);
                this.columnAngleofUL2SubUL1 = new global::System.Data.DataColumn("AngleofUL2SubUL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAngleofUL2SubUL1);
                this.columnAngleofUL1SubUL3 = new global::System.Data.DataColumn("AngleofUL1SubUL3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAngleofUL1SubUL3);
                this.columnFrequency = new global::System.Data.DataColumn("Frequency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency);
                this.columnNeutralCurrent = new global::System.Data.DataColumn("NeutralCurrent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeutralCurrent);
                this.columnActivePowerPhaseA = new global::System.Data.DataColumn("ActivePowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseA);
                this.columnActivePowerPhaseB = new global::System.Data.DataColumn("ActivePowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseB);
                this.columnActivePowerPhaseC = new global::System.Data.DataColumn("ActivePowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseC);
                this.columnActivePowerPhaseTotal = new global::System.Data.DataColumn("ActivePowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseTotal);
                this.columnReactivePowerPhaseA = new global::System.Data.DataColumn("ReactivePowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseA);
                this.columnReactivePowerPhaseB = new global::System.Data.DataColumn("ReactivePowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseB);
                this.columnReactivePowerPhaseC = new global::System.Data.DataColumn("ReactivePowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseC);
                this.columnReactivePowerPhaseTotal = new global::System.Data.DataColumn("ReactivePowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseTotal);
                this.columnApparentPowerPhaseA = new global::System.Data.DataColumn("ApparentPowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseA);
                this.columnApparentPowerPhaseB = new global::System.Data.DataColumn("ApparentPowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseB);
                this.columnApparentPowerPhaseC = new global::System.Data.DataColumn("ApparentPowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseC);
                this.columnApparentPowerPhaseTotal = new global::System.Data.DataColumn("ApparentPowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseTotal);
                this.columnPowerFactorPhaseA = new global::System.Data.DataColumn("PowerFactorPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseA);
                this.columnPowerFactorPhaseB = new global::System.Data.DataColumn("PowerFactorPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseB);
                this.columnPowerFactorPhaseC = new global::System.Data.DataColumn("PowerFactorPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseC);
                this.columnPowerFactorPhaseTotal = new global::System.Data.DataColumn("PowerFactorPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseTotal);
                this.columnEnergyPlusARate1 = new global::System.Data.DataColumn("EnergyPlusARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate1);
                this.columnEnergyPlusARate2 = new global::System.Data.DataColumn("EnergyPlusARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate2);
                this.columnEnergyPlusARate3 = new global::System.Data.DataColumn("EnergyPlusARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate3);
                this.columnEnergyPlusARate4 = new global::System.Data.DataColumn("EnergyPlusARate4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate4);
                this.columnEnergySubARate1 = new global::System.Data.DataColumn("EnergySubARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate1);
                this.columnEnergySubARate2 = new global::System.Data.DataColumn("EnergySubARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate2);
                this.columnEnergySubARate3 = new global::System.Data.DataColumn("EnergySubARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate3);
                this.columnEnergySubARate4 = new global::System.Data.DataColumn("EnergySubARate4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate4);
                this.columnQ1 = new global::System.Data.DataColumn("Q1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ1);
                this.columnQ2 = new global::System.Data.DataColumn("Q2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ2);
                this.columnQ3 = new global::System.Data.DataColumn("Q3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ3);
                this.columnQ4 = new global::System.Data.DataColumn("Q4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ4);
                this.columnImportWh = new global::System.Data.DataColumn("ImportWh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportWh);
                this.columnExportWh = new global::System.Data.DataColumn("ExportWh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportWh);
                this.columnEnergyPlusVA = new global::System.Data.DataColumn("EnergyPlusVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusVA);
                this.columnMaxDemandPlusA = new global::System.Data.DataColumn("MaxDemandPlusA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusA);
                this.columnMaxDemandSubA = new global::System.Data.DataColumn("MaxDemandSubA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubA);
                this.columnMaxDemandPlusARate1 = new global::System.Data.DataColumn("MaxDemandPlusARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate1);
                this.columnMaxDemandPlusARate1Time = new global::System.Data.DataColumn("MaxDemandPlusARate1Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate1Time);
                this.columnMaxDemandSubARate1 = new global::System.Data.DataColumn("MaxDemandSubARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate1);
                this.columnMaxDemandSubARate1Time = new global::System.Data.DataColumn("MaxDemandSubARate1Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate1Time);
                this.columnMaxDemandPlusARate2 = new global::System.Data.DataColumn("MaxDemandPlusARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate2);
                this.columnMaxDemandPlusARate2Time = new global::System.Data.DataColumn("MaxDemandPlusARate2Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate2Time);
                this.columnMaxDemandSubARate2 = new global::System.Data.DataColumn("MaxDemandSubARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate2);
                this.columnMaxDemandSubARate2Time = new global::System.Data.DataColumn("MaxDemandSubARate2Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate2Time);
                this.columnMaxDemandPlusARate3 = new global::System.Data.DataColumn("MaxDemandPlusARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate3);
                this.columnMaxDemandPlusARate3Time = new global::System.Data.DataColumn("MaxDemandPlusARate3Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate3Time);
                this.columnMaxDemandSubARate3 = new global::System.Data.DataColumn("MaxDemandSubARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate3);
                this.columnMaxDemandSubARate3Time = new global::System.Data.DataColumn("MaxDemandSubARate3Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate3Time);
                this.columnMaxDemandPlusARate4 = new global::System.Data.DataColumn("MaxDemandPlusARate4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate4);
                this.columnMaxDemandPlusARate4Time = new global::System.Data.DataColumn("MaxDemandPlusARate4Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandPlusARate4Time);
                this.columnMaxDemandSubARate4 = new global::System.Data.DataColumn("MaxDemandSubARate4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate4);
                this.columnMaxDemandSubARate4Time = new global::System.Data.DataColumn("MaxDemandSubARate4Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDemandSubARate4Time);
                this.columnReactiveEnergyPlusARate1 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate1);
                this.columnReactiveEnergyPlusARate2 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate2);
                this.columnReactiveEnergyPlusARate3 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate3);
                this.columnReactiveEnergySubARate1 = new global::System.Data.DataColumn("ReactiveEnergySubARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate1);
                this.columnReactiveEnergySubARate2 = new global::System.Data.DataColumn("ReactiveEnergySubARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate2);
                this.columnReactiveEnergySubARate3 = new global::System.Data.DataColumn("ReactiveEnergySubARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate3);
                this.columnPhaseRotation = new global::System.Data.DataColumn("PhaseRotation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseRotation);
                this.columnTu = new global::System.Data.DataColumn("Tu", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTu);
                this.columnTi = new global::System.Data.DataColumn("Ti", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTi);
                this.columnTuT = new global::System.Data.DataColumn("TuT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuT);
                this.columnTiT = new global::System.Data.DataColumn("TiT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiT);
                this.columnTuM = new global::System.Data.DataColumn("TuM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuM);
                this.columnTiM = new global::System.Data.DataColumn("TiM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiM);
                this.columnSignal = new global::System.Data.DataColumn("Signal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignal);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOperationId,
                                this.columnServerTime}, true));
                this.columnOperationId.AllowDBNull = false;
                this.columnOperationId.MaxLength = 20;
                this.columnMeasurementPointMeterId.AllowDBNull = false;
                this.columnServerTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRow NewOperation3PRow() {
                return ((Operation3PRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Operation3PRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Operation3PRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Operation3PRowChanged != null)) {
                    this.Operation3PRowChanged(this, new Operation3PRowChangeEvent(((Operation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Operation3PRowChanging != null)) {
                    this.Operation3PRowChanging(this, new Operation3PRowChangeEvent(((Operation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Operation3PRowDeleted != null)) {
                    this.Operation3PRowDeleted(this, new Operation3PRowChangeEvent(((Operation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Operation3PRowDeleting != null)) {
                    this.Operation3PRowDeleting(this, new Operation3PRowChangeEvent(((Operation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOperation3PRow(Operation3PRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Operation3PDataSet ds = new Operation3PDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Operation3PDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdateMeasurementPointMeterForOperation3PDataTable : global::System.Data.TypedTableBase<UpdateMeasurementPointMeterForOperation3PRow> {
            
            private global::System.Data.DataColumn columnMeasurementPointMeterId;
            
            private global::System.Data.DataColumn columnMeterId;
            
            private global::System.Data.DataColumn columnNewMeasurementPointMeterId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PDataTable() {
                this.TableName = "UpdateMeasurementPointMeterForOperation3P";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UpdateMeasurementPointMeterForOperation3PDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UpdateMeasurementPointMeterForOperation3PDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeasurementPointMeterIdColumn {
                get {
                    return this.columnMeasurementPointMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterIdColumn {
                get {
                    return this.columnMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewMeasurementPointMeterIdColumn {
                get {
                    return this.columnNewMeasurementPointMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PRow this[int index] {
                get {
                    return ((UpdateMeasurementPointMeterForOperation3PRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UpdateMeasurementPointMeterForOperation3PRowChangeEventHandler UpdateMeasurementPointMeterForOperation3PRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UpdateMeasurementPointMeterForOperation3PRowChangeEventHandler UpdateMeasurementPointMeterForOperation3PRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UpdateMeasurementPointMeterForOperation3PRowChangeEventHandler UpdateMeasurementPointMeterForOperation3PRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UpdateMeasurementPointMeterForOperation3PRowChangeEventHandler UpdateMeasurementPointMeterForOperation3PRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUpdateMeasurementPointMeterForOperation3PRow(UpdateMeasurementPointMeterForOperation3PRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PRow AddUpdateMeasurementPointMeterForOperation3PRow(long MeasurementPointMeterId, long MeterId, long NewMeasurementPointMeterId) {
                UpdateMeasurementPointMeterForOperation3PRow rowUpdateMeasurementPointMeterForOperation3PRow = ((UpdateMeasurementPointMeterForOperation3PRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MeasurementPointMeterId,
                        MeterId,
                        NewMeasurementPointMeterId};
                rowUpdateMeasurementPointMeterForOperation3PRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdateMeasurementPointMeterForOperation3PRow);
                return rowUpdateMeasurementPointMeterForOperation3PRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UpdateMeasurementPointMeterForOperation3PDataTable cln = ((UpdateMeasurementPointMeterForOperation3PDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdateMeasurementPointMeterForOperation3PDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMeasurementPointMeterId = base.Columns["MeasurementPointMeterId"];
                this.columnMeterId = base.Columns["MeterId"];
                this.columnNewMeasurementPointMeterId = base.Columns["NewMeasurementPointMeterId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMeasurementPointMeterId = new global::System.Data.DataColumn("MeasurementPointMeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementPointMeterId);
                this.columnMeterId = new global::System.Data.DataColumn("MeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterId);
                this.columnNewMeasurementPointMeterId = new global::System.Data.DataColumn("NewMeasurementPointMeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewMeasurementPointMeterId);
                this.columnMeasurementPointMeterId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PRow NewUpdateMeasurementPointMeterForOperation3PRow() {
                return ((UpdateMeasurementPointMeterForOperation3PRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdateMeasurementPointMeterForOperation3PRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UpdateMeasurementPointMeterForOperation3PRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdateMeasurementPointMeterForOperation3PRowChanged != null)) {
                    this.UpdateMeasurementPointMeterForOperation3PRowChanged(this, new UpdateMeasurementPointMeterForOperation3PRowChangeEvent(((UpdateMeasurementPointMeterForOperation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdateMeasurementPointMeterForOperation3PRowChanging != null)) {
                    this.UpdateMeasurementPointMeterForOperation3PRowChanging(this, new UpdateMeasurementPointMeterForOperation3PRowChangeEvent(((UpdateMeasurementPointMeterForOperation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdateMeasurementPointMeterForOperation3PRowDeleted != null)) {
                    this.UpdateMeasurementPointMeterForOperation3PRowDeleted(this, new UpdateMeasurementPointMeterForOperation3PRowChangeEvent(((UpdateMeasurementPointMeterForOperation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdateMeasurementPointMeterForOperation3PRowDeleting != null)) {
                    this.UpdateMeasurementPointMeterForOperation3PRowDeleting(this, new UpdateMeasurementPointMeterForOperation3PRowChangeEvent(((UpdateMeasurementPointMeterForOperation3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUpdateMeasurementPointMeterForOperation3PRow(UpdateMeasurementPointMeterForOperation3PRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Operation3PDataSet ds = new Operation3PDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdateMeasurementPointMeterForOperation3PDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Operation3PRow : global::System.Data.DataRow {
            
            private Operation3PDataTable tableOperation3P;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Operation3PRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOperation3P = ((Operation3PDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OperationId {
                get {
                    return ((string)(this[this.tableOperation3P.OperationIdColumn]));
                }
                set {
                    this[this.tableOperation3P.OperationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeasurementPointMeterId {
                get {
                    return ((long)(this[this.tableOperation3P.MeasurementPointMeterIdColumn]));
                }
                set {
                    this[this.tableOperation3P.MeasurementPointMeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeterId {
                get {
                    try {
                        return ((long)(this[this.tableOperation3P.MeterIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterId\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ServerTime {
                get {
                    return ((global::System.DateTime)(this[this.tableOperation3P.ServerTimeColumn]));
                }
                set {
                    this[this.tableOperation3P.ServerTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MeterTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterTime\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MeterTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.VoltagePhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.VoltagePhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.VoltagePhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.VoltagePhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.VoltagePhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.VoltagePhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.CurrentPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.CurrentPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.CurrentPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.CurrentPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.CurrentPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.CurrentPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PhaseAnglePhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PhaseAnglePhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PhaseAnglePhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PhaseAnglePhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PhaseAnglePhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PhaseAnglePhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AngleofUL2SubUL1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.AngleofUL2SubUL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AngleofUL2SubUL1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.AngleofUL2SubUL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AngleofUL1SubUL3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.AngleofUL1SubUL3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AngleofUL1SubUL3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.AngleofUL1SubUL3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Frequency {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.FrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.FrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NeutralCurrent {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.NeutralCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeutralCurrent\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.NeutralCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ActivePowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ActivePowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ActivePowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ActivePowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ActivePowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ActivePowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ActivePowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseTotal\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ActivePowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactivePowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactivePowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactivePowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactivePowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactivePowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactivePowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactivePowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseTotal\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactivePowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ApparentPowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ApparentPowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ApparentPowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ApparentPowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ApparentPowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ApparentPowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ApparentPowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseTotal\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ApparentPowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PowerFactorPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PowerFactorPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PowerFactorPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseB\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PowerFactorPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PowerFactorPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseC\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PowerFactorPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PowerFactorPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseTotal\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PowerFactorPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergyPlusARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergyPlusARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergyPlusARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergyPlusARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergyPlusARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergyPlusARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate4 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergyPlusARate4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate4\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergyPlusARate4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergySubARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergySubARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergySubARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergySubARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergySubARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergySubARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate4 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergySubARate4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate4\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergySubARate4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.Q1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.Q1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.Q2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.Q2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.Q3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.Q3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q4 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.Q4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q4\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.Q4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ImportWh {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ImportWhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportWh\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ImportWhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExportWh {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ExportWhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportWh\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ExportWhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusVA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.EnergyPlusVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusVA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.EnergyPlusVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandPlusA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandPlusAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandSubA {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandSubAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubA\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandPlusARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandPlusARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandPlusARate1Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandPlusARate1TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate1Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate1TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandSubARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandSubARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandSubARate1Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandSubARate1TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate1Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate1TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandPlusARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandPlusARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandPlusARate2Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandPlusARate2TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate2Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate2TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandSubARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandSubARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandSubARate2Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandSubARate2TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate2Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate2TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandPlusARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandPlusARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandPlusARate3Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandPlusARate3TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate3Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate3TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandSubARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandSubARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandSubARate3Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandSubARate3TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate3Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate3TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandPlusARate4 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandPlusARate4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate4\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandPlusARate4Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandPlusARate4TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandPlusARate4Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandPlusARate4TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDemandSubARate4 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.MaxDemandSubARate4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate4\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MaxDemandSubARate4Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.MaxDemandSubARate4TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDemandSubARate4Time\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.MaxDemandSubARate4TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergyPlusARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate1\' in table \'Operation3P\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergyPlusARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergyPlusARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate2\' in table \'Operation3P\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergyPlusARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergyPlusARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate3\' in table \'Operation3P\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergyPlusARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergySubARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate1\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergySubARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergySubARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate2\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergySubARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.ReactiveEnergySubARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate3\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.ReactiveEnergySubARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseRotation {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.PhaseRotationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseRotation\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.PhaseRotationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Tu {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tu\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Ti {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ti\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TuT {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TuTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TuT\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TuTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TiT {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TiTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TiT\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TiTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TuM {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TuMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TuM\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TuMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TiM {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.TiMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TiM\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.TiMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Signal {
                get {
                    try {
                        return ((decimal)(this[this.tableOperation3P.SignalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signal\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.SignalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperation3P.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'Operation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperation3P.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterIdNull() {
                return this.IsNull(this.tableOperation3P.MeterIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterIdNull() {
                this[this.tableOperation3P.MeterIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterTimeNull() {
                return this.IsNull(this.tableOperation3P.MeterTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterTimeNull() {
                this[this.tableOperation3P.MeterTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseANull() {
                return this.IsNull(this.tableOperation3P.VoltagePhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseANull() {
                this[this.tableOperation3P.VoltagePhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseBNull() {
                return this.IsNull(this.tableOperation3P.VoltagePhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseBNull() {
                this[this.tableOperation3P.VoltagePhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseCNull() {
                return this.IsNull(this.tableOperation3P.VoltagePhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseCNull() {
                this[this.tableOperation3P.VoltagePhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseANull() {
                return this.IsNull(this.tableOperation3P.CurrentPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseANull() {
                this[this.tableOperation3P.CurrentPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseBNull() {
                return this.IsNull(this.tableOperation3P.CurrentPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseBNull() {
                this[this.tableOperation3P.CurrentPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseCNull() {
                return this.IsNull(this.tableOperation3P.CurrentPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseCNull() {
                this[this.tableOperation3P.CurrentPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseANull() {
                return this.IsNull(this.tableOperation3P.PhaseAnglePhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseANull() {
                this[this.tableOperation3P.PhaseAnglePhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseBNull() {
                return this.IsNull(this.tableOperation3P.PhaseAnglePhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseBNull() {
                this[this.tableOperation3P.PhaseAnglePhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseCNull() {
                return this.IsNull(this.tableOperation3P.PhaseAnglePhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseCNull() {
                this[this.tableOperation3P.PhaseAnglePhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAngleofUL2SubUL1Null() {
                return this.IsNull(this.tableOperation3P.AngleofUL2SubUL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAngleofUL2SubUL1Null() {
                this[this.tableOperation3P.AngleofUL2SubUL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAngleofUL1SubUL3Null() {
                return this.IsNull(this.tableOperation3P.AngleofUL1SubUL3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAngleofUL1SubUL3Null() {
                this[this.tableOperation3P.AngleofUL1SubUL3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrequencyNull() {
                return this.IsNull(this.tableOperation3P.FrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrequencyNull() {
                this[this.tableOperation3P.FrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeutralCurrentNull() {
                return this.IsNull(this.tableOperation3P.NeutralCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeutralCurrentNull() {
                this[this.tableOperation3P.NeutralCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseANull() {
                return this.IsNull(this.tableOperation3P.ActivePowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseANull() {
                this[this.tableOperation3P.ActivePowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseBNull() {
                return this.IsNull(this.tableOperation3P.ActivePowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseBNull() {
                this[this.tableOperation3P.ActivePowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseCNull() {
                return this.IsNull(this.tableOperation3P.ActivePowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseCNull() {
                this[this.tableOperation3P.ActivePowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseTotalNull() {
                return this.IsNull(this.tableOperation3P.ActivePowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseTotalNull() {
                this[this.tableOperation3P.ActivePowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseANull() {
                return this.IsNull(this.tableOperation3P.ReactivePowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseANull() {
                this[this.tableOperation3P.ReactivePowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseBNull() {
                return this.IsNull(this.tableOperation3P.ReactivePowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseBNull() {
                this[this.tableOperation3P.ReactivePowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseCNull() {
                return this.IsNull(this.tableOperation3P.ReactivePowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseCNull() {
                this[this.tableOperation3P.ReactivePowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseTotalNull() {
                return this.IsNull(this.tableOperation3P.ReactivePowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseTotalNull() {
                this[this.tableOperation3P.ReactivePowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseANull() {
                return this.IsNull(this.tableOperation3P.ApparentPowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseANull() {
                this[this.tableOperation3P.ApparentPowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseBNull() {
                return this.IsNull(this.tableOperation3P.ApparentPowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseBNull() {
                this[this.tableOperation3P.ApparentPowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseCNull() {
                return this.IsNull(this.tableOperation3P.ApparentPowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseCNull() {
                this[this.tableOperation3P.ApparentPowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseTotalNull() {
                return this.IsNull(this.tableOperation3P.ApparentPowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseTotalNull() {
                this[this.tableOperation3P.ApparentPowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseANull() {
                return this.IsNull(this.tableOperation3P.PowerFactorPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseANull() {
                this[this.tableOperation3P.PowerFactorPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseBNull() {
                return this.IsNull(this.tableOperation3P.PowerFactorPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseBNull() {
                this[this.tableOperation3P.PowerFactorPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseCNull() {
                return this.IsNull(this.tableOperation3P.PowerFactorPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseCNull() {
                this[this.tableOperation3P.PowerFactorPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseTotalNull() {
                return this.IsNull(this.tableOperation3P.PowerFactorPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseTotalNull() {
                this[this.tableOperation3P.PowerFactorPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate1Null() {
                return this.IsNull(this.tableOperation3P.EnergyPlusARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate1Null() {
                this[this.tableOperation3P.EnergyPlusARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate2Null() {
                return this.IsNull(this.tableOperation3P.EnergyPlusARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate2Null() {
                this[this.tableOperation3P.EnergyPlusARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate3Null() {
                return this.IsNull(this.tableOperation3P.EnergyPlusARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate3Null() {
                this[this.tableOperation3P.EnergyPlusARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate4Null() {
                return this.IsNull(this.tableOperation3P.EnergyPlusARate4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate4Null() {
                this[this.tableOperation3P.EnergyPlusARate4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate1Null() {
                return this.IsNull(this.tableOperation3P.EnergySubARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate1Null() {
                this[this.tableOperation3P.EnergySubARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate2Null() {
                return this.IsNull(this.tableOperation3P.EnergySubARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate2Null() {
                this[this.tableOperation3P.EnergySubARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate3Null() {
                return this.IsNull(this.tableOperation3P.EnergySubARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate3Null() {
                this[this.tableOperation3P.EnergySubARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate4Null() {
                return this.IsNull(this.tableOperation3P.EnergySubARate4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate4Null() {
                this[this.tableOperation3P.EnergySubARate4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ1Null() {
                return this.IsNull(this.tableOperation3P.Q1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ1Null() {
                this[this.tableOperation3P.Q1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ2Null() {
                return this.IsNull(this.tableOperation3P.Q2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ2Null() {
                this[this.tableOperation3P.Q2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ3Null() {
                return this.IsNull(this.tableOperation3P.Q3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ3Null() {
                this[this.tableOperation3P.Q3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ4Null() {
                return this.IsNull(this.tableOperation3P.Q4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ4Null() {
                this[this.tableOperation3P.Q4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportWhNull() {
                return this.IsNull(this.tableOperation3P.ImportWhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportWhNull() {
                this[this.tableOperation3P.ImportWhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportWhNull() {
                return this.IsNull(this.tableOperation3P.ExportWhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportWhNull() {
                this[this.tableOperation3P.ExportWhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusVANull() {
                return this.IsNull(this.tableOperation3P.EnergyPlusVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusVANull() {
                this[this.tableOperation3P.EnergyPlusVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusANull() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusANull() {
                this[this.tableOperation3P.MaxDemandPlusAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubANull() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubANull() {
                this[this.tableOperation3P.MaxDemandSubAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate1Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate1Null() {
                this[this.tableOperation3P.MaxDemandPlusARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate1TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate1TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate1TimeNull() {
                this[this.tableOperation3P.MaxDemandPlusARate1TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate1Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate1Null() {
                this[this.tableOperation3P.MaxDemandSubARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate1TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate1TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate1TimeNull() {
                this[this.tableOperation3P.MaxDemandSubARate1TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate2Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate2Null() {
                this[this.tableOperation3P.MaxDemandPlusARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate2TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate2TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate2TimeNull() {
                this[this.tableOperation3P.MaxDemandPlusARate2TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate2Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate2Null() {
                this[this.tableOperation3P.MaxDemandSubARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate2TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate2TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate2TimeNull() {
                this[this.tableOperation3P.MaxDemandSubARate2TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate3Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate3Null() {
                this[this.tableOperation3P.MaxDemandPlusARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate3TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate3TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate3TimeNull() {
                this[this.tableOperation3P.MaxDemandPlusARate3TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate3Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate3Null() {
                this[this.tableOperation3P.MaxDemandSubARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate3TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate3TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate3TimeNull() {
                this[this.tableOperation3P.MaxDemandSubARate3TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate4Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate4Null() {
                this[this.tableOperation3P.MaxDemandPlusARate4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandPlusARate4TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandPlusARate4TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandPlusARate4TimeNull() {
                this[this.tableOperation3P.MaxDemandPlusARate4TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate4Null() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate4Null() {
                this[this.tableOperation3P.MaxDemandSubARate4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDemandSubARate4TimeNull() {
                return this.IsNull(this.tableOperation3P.MaxDemandSubARate4TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDemandSubARate4TimeNull() {
                this[this.tableOperation3P.MaxDemandSubARate4TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate1Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergyPlusARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate1Null() {
                this[this.tableOperation3P.ReactiveEnergyPlusARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate2Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergyPlusARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate2Null() {
                this[this.tableOperation3P.ReactiveEnergyPlusARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate3Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergyPlusARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate3Null() {
                this[this.tableOperation3P.ReactiveEnergyPlusARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate1Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergySubARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate1Null() {
                this[this.tableOperation3P.ReactiveEnergySubARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate2Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergySubARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate2Null() {
                this[this.tableOperation3P.ReactiveEnergySubARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate3Null() {
                return this.IsNull(this.tableOperation3P.ReactiveEnergySubARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate3Null() {
                this[this.tableOperation3P.ReactiveEnergySubARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseRotationNull() {
                return this.IsNull(this.tableOperation3P.PhaseRotationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseRotationNull() {
                this[this.tableOperation3P.PhaseRotationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTuNull() {
                return this.IsNull(this.tableOperation3P.TuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTuNull() {
                this[this.tableOperation3P.TuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTiNull() {
                return this.IsNull(this.tableOperation3P.TiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTiNull() {
                this[this.tableOperation3P.TiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTuTNull() {
                return this.IsNull(this.tableOperation3P.TuTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTuTNull() {
                this[this.tableOperation3P.TuTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTiTNull() {
                return this.IsNull(this.tableOperation3P.TiTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTiTNull() {
                this[this.tableOperation3P.TiTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTuMNull() {
                return this.IsNull(this.tableOperation3P.TuMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTuMNull() {
                this[this.tableOperation3P.TuMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTiMNull() {
                return this.IsNull(this.tableOperation3P.TiMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTiMNull() {
                this[this.tableOperation3P.TiMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignalNull() {
                return this.IsNull(this.tableOperation3P.SignalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignalNull() {
                this[this.tableOperation3P.SignalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableOperation3P.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateNull() {
                this[this.tableOperation3P.CreateDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UpdateMeasurementPointMeterForOperation3PRow : global::System.Data.DataRow {
            
            private UpdateMeasurementPointMeterForOperation3PDataTable tableUpdateMeasurementPointMeterForOperation3P;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UpdateMeasurementPointMeterForOperation3PRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdateMeasurementPointMeterForOperation3P = ((UpdateMeasurementPointMeterForOperation3PDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeasurementPointMeterId {
                get {
                    return ((long)(this[this.tableUpdateMeasurementPointMeterForOperation3P.MeasurementPointMeterIdColumn]));
                }
                set {
                    this[this.tableUpdateMeasurementPointMeterForOperation3P.MeasurementPointMeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeterId {
                get {
                    try {
                        return ((long)(this[this.tableUpdateMeasurementPointMeterForOperation3P.MeterIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterId\' in table \'UpdateMeasurementPointMeterForOperation3" +
                                "P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdateMeasurementPointMeterForOperation3P.MeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NewMeasurementPointMeterId {
                get {
                    try {
                        return ((long)(this[this.tableUpdateMeasurementPointMeterForOperation3P.NewMeasurementPointMeterIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewMeasurementPointMeterId\' in table \'UpdateMeasurementPoin" +
                                "tMeterForOperation3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdateMeasurementPointMeterForOperation3P.NewMeasurementPointMeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterIdNull() {
                return this.IsNull(this.tableUpdateMeasurementPointMeterForOperation3P.MeterIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterIdNull() {
                this[this.tableUpdateMeasurementPointMeterForOperation3P.MeterIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNewMeasurementPointMeterIdNull() {
                return this.IsNull(this.tableUpdateMeasurementPointMeterForOperation3P.NewMeasurementPointMeterIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNewMeasurementPointMeterIdNull() {
                this[this.tableUpdateMeasurementPointMeterForOperation3P.NewMeasurementPointMeterIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Operation3PRowChangeEvent : global::System.EventArgs {
            
            private Operation3PRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRowChangeEvent(Operation3PRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Operation3PRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UpdateMeasurementPointMeterForOperation3PRowChangeEvent : global::System.EventArgs {
            
            private UpdateMeasurementPointMeterForOperation3PRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PRowChangeEvent(UpdateMeasurementPointMeterForOperation3PRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UpdateMeasurementPointMeterForOperation3PRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace OperationDTO.AmiSystemDataSet.Operation3PDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Operation3PTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Operation3PTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Operation3P";
            tableMapping.ColumnMappings.Add("OperationId", "OperationId");
            tableMapping.ColumnMappings.Add("MeasurementPointMeterId", "MeasurementPointMeterId");
            tableMapping.ColumnMappings.Add("MeterId", "MeterId");
            tableMapping.ColumnMappings.Add("ServerTime", "ServerTime");
            tableMapping.ColumnMappings.Add("MeterTime", "MeterTime");
            tableMapping.ColumnMappings.Add("VoltagePhaseA", "VoltagePhaseA");
            tableMapping.ColumnMappings.Add("VoltagePhaseB", "VoltagePhaseB");
            tableMapping.ColumnMappings.Add("VoltagePhaseC", "VoltagePhaseC");
            tableMapping.ColumnMappings.Add("CurrentPhaseA", "CurrentPhaseA");
            tableMapping.ColumnMappings.Add("CurrentPhaseB", "CurrentPhaseB");
            tableMapping.ColumnMappings.Add("CurrentPhaseC", "CurrentPhaseC");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseA", "PhaseAnglePhaseA");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseB", "PhaseAnglePhaseB");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseC", "PhaseAnglePhaseC");
            tableMapping.ColumnMappings.Add("AngleofUL2SubUL1", "AngleofUL2SubUL1");
            tableMapping.ColumnMappings.Add("AngleofUL1SubUL3", "AngleofUL1SubUL3");
            tableMapping.ColumnMappings.Add("Frequency", "Frequency");
            tableMapping.ColumnMappings.Add("NeutralCurrent", "NeutralCurrent");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseA", "ActivePowerPhaseA");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseB", "ActivePowerPhaseB");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseC", "ActivePowerPhaseC");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseTotal", "ActivePowerPhaseTotal");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseA", "ReactivePowerPhaseA");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseB", "ReactivePowerPhaseB");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseC", "ReactivePowerPhaseC");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseTotal", "ReactivePowerPhaseTotal");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseA", "ApparentPowerPhaseA");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseB", "ApparentPowerPhaseB");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseC", "ApparentPowerPhaseC");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseTotal", "ApparentPowerPhaseTotal");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseA", "PowerFactorPhaseA");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseB", "PowerFactorPhaseB");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseC", "PowerFactorPhaseC");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseTotal", "PowerFactorPhaseTotal");
            tableMapping.ColumnMappings.Add("EnergyPlusARate1", "EnergyPlusARate1");
            tableMapping.ColumnMappings.Add("EnergyPlusARate2", "EnergyPlusARate2");
            tableMapping.ColumnMappings.Add("EnergyPlusARate3", "EnergyPlusARate3");
            tableMapping.ColumnMappings.Add("EnergyPlusARate4", "EnergyPlusARate4");
            tableMapping.ColumnMappings.Add("EnergySubARate1", "EnergySubARate1");
            tableMapping.ColumnMappings.Add("EnergySubARate2", "EnergySubARate2");
            tableMapping.ColumnMappings.Add("EnergySubARate3", "EnergySubARate3");
            tableMapping.ColumnMappings.Add("EnergySubARate4", "EnergySubARate4");
            tableMapping.ColumnMappings.Add("Q1", "Q1");
            tableMapping.ColumnMappings.Add("Q2", "Q2");
            tableMapping.ColumnMappings.Add("Q3", "Q3");
            tableMapping.ColumnMappings.Add("Q4", "Q4");
            tableMapping.ColumnMappings.Add("ImportWh", "ImportWh");
            tableMapping.ColumnMappings.Add("ExportWh", "ExportWh");
            tableMapping.ColumnMappings.Add("EnergyPlusVA", "EnergyPlusVA");
            tableMapping.ColumnMappings.Add("MaxDemandPlusA", "MaxDemandPlusA");
            tableMapping.ColumnMappings.Add("MaxDemandSubA", "MaxDemandSubA");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate1", "MaxDemandPlusARate1");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate1Time", "MaxDemandPlusARate1Time");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate1", "MaxDemandSubARate1");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate1Time", "MaxDemandSubARate1Time");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate2", "MaxDemandPlusARate2");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate2Time", "MaxDemandPlusARate2Time");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate2", "MaxDemandSubARate2");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate2Time", "MaxDemandSubARate2Time");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate3", "MaxDemandPlusARate3");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate3Time", "MaxDemandPlusARate3Time");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate3", "MaxDemandSubARate3");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate3Time", "MaxDemandSubARate3Time");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate4", "MaxDemandPlusARate4");
            tableMapping.ColumnMappings.Add("MaxDemandPlusARate4Time", "MaxDemandPlusARate4Time");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate4", "MaxDemandSubARate4");
            tableMapping.ColumnMappings.Add("MaxDemandSubARate4Time", "MaxDemandSubARate4Time");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate1", "ReactiveEnergyPlusARate1");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate2", "ReactiveEnergyPlusARate2");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate3", "ReactiveEnergyPlusARate3");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate1", "ReactiveEnergySubARate1");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate2", "ReactiveEnergySubARate2");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate3", "ReactiveEnergySubARate3");
            tableMapping.ColumnMappings.Add("PhaseRotation", "PhaseRotation");
            tableMapping.ColumnMappings.Add("Tu", "Tu");
            tableMapping.ColumnMappings.Add("Ti", "Ti");
            tableMapping.ColumnMappings.Add("TuT", "TuT");
            tableMapping.ColumnMappings.Add("TiT", "TiT");
            tableMapping.ColumnMappings.Add("TuM", "TuM");
            tableMapping.ColumnMappings.Add("TiM", "TiM");
            tableMapping.ColumnMappings.Add("Signal", "Signal");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM Operation3P\r\nWHERE        (OperationId = @Original_OperationId)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperationId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "OperationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Operation3P] ([OperationId], [MeasurementPointMeterId], [Meter" +
                "Id], [ServerTime], [MeterTime], [VoltagePhaseA], [VoltagePhaseB], [VoltagePhaseC" +
                "], [CurrentPhaseA], [CurrentPhaseB], [CurrentPhaseC], [PhaseAnglePhaseA], [Phase" +
                "AnglePhaseB], [PhaseAnglePhaseC], [AngleofUL2SubUL1], [AngleofUL1SubUL3], [Frequ" +
                "ency], [NeutralCurrent], [ActivePowerPhaseA], [ActivePowerPhaseB], [ActivePowerP" +
                "haseC], [ActivePowerPhaseTotal], [ReactivePowerPhaseA], [ReactivePowerPhaseB], [" +
                "ReactivePowerPhaseC], [ReactivePowerPhaseTotal], [ApparentPowerPhaseA], [Apparen" +
                "tPowerPhaseB], [ApparentPowerPhaseC], [ApparentPowerPhaseTotal], [PowerFactorPha" +
                "seA], [PowerFactorPhaseB], [PowerFactorPhaseC], [PowerFactorPhaseTotal], [Energy" +
                "PlusARate1], [EnergyPlusARate2], [EnergyPlusARate3], [EnergyPlusARate4], [Energy" +
                "SubARate1], [EnergySubARate2], [EnergySubARate3], [EnergySubARate4], [Q1], [Q2]," +
                " [Q3], [Q4], [ImportWh], [ExportWh], [EnergyPlusVA], [MaxDemandPlusA], [MaxDeman" +
                "dSubA], [MaxDemandPlusARate1], [MaxDemandPlusARate1Time], [MaxDemandSubARate1], " +
                "[MaxDemandSubARate1Time], [MaxDemandPlusARate2], [MaxDemandPlusARate2Time], [Max" +
                "DemandSubARate2], [MaxDemandSubARate2Time], [MaxDemandPlusARate3], [MaxDemandPlu" +
                "sARate3Time], [MaxDemandSubARate3], [MaxDemandSubARate3Time], [MaxDemandPlusARat" +
                "e4], [MaxDemandPlusARate4Time], [MaxDemandSubARate4], [MaxDemandSubARate4Time], " +
                "[ReactiveEnergyPlusARate1], [ReactiveEnergyPlusARate2], [ReactiveEnergyPlusARate" +
                "3], [ReactiveEnergySubARate1], [ReactiveEnergySubARate2], [ReactiveEnergySubARat" +
                "e3], [PhaseRotation], [Tu], [Ti], [TuT], [TiT], [TuM], [TiM], [Signal], [CreateD" +
                "ate]) VALUES (@OperationId, @MeasurementPointMeterId, @MeterId, @ServerTime, @Me" +
                "terTime, @VoltagePhaseA, @VoltagePhaseB, @VoltagePhaseC, @CurrentPhaseA, @Curren" +
                "tPhaseB, @CurrentPhaseC, @PhaseAnglePhaseA, @PhaseAnglePhaseB, @PhaseAnglePhaseC" +
                ", @AngleofUL2SubUL1, @AngleofUL1SubUL3, @Frequency, @NeutralCurrent, @ActivePowe" +
                "rPhaseA, @ActivePowerPhaseB, @ActivePowerPhaseC, @ActivePowerPhaseTotal, @Reacti" +
                "vePowerPhaseA, @ReactivePowerPhaseB, @ReactivePowerPhaseC, @ReactivePowerPhaseTo" +
                "tal, @ApparentPowerPhaseA, @ApparentPowerPhaseB, @ApparentPowerPhaseC, @Apparent" +
                "PowerPhaseTotal, @PowerFactorPhaseA, @PowerFactorPhaseB, @PowerFactorPhaseC, @Po" +
                "werFactorPhaseTotal, @EnergyPlusARate1, @EnergyPlusARate2, @EnergyPlusARate3, @E" +
                "nergyPlusARate4, @EnergySubARate1, @EnergySubARate2, @EnergySubARate3, @EnergySu" +
                "bARate4, @Q1, @Q2, @Q3, @Q4, @ImportWh, @ExportWh, @EnergyPlusVA, @MaxDemandPlus" +
                "A, @MaxDemandSubA, @MaxDemandPlusARate1, @MaxDemandPlusARate1Time, @MaxDemandSub" +
                "ARate1, @MaxDemandSubARate1Time, @MaxDemandPlusARate2, @MaxDemandPlusARate2Time," +
                " @MaxDemandSubARate2, @MaxDemandSubARate2Time, @MaxDemandPlusARate3, @MaxDemandP" +
                "lusARate3Time, @MaxDemandSubARate3, @MaxDemandSubARate3Time, @MaxDemandPlusARate" +
                "4, @MaxDemandPlusARate4Time, @MaxDemandSubARate4, @MaxDemandSubARate4Time, @Reac" +
                "tiveEnergyPlusARate1, @ReactiveEnergyPlusARate2, @ReactiveEnergyPlusARate3, @Rea" +
                "ctiveEnergySubARate1, @ReactiveEnergySubARate2, @ReactiveEnergySubARate3, @Phase" +
                "Rotation, @Tu, @Ti, @TuT, @TiT, @TuM, @TiM, @Signal, @CreateDate);\r\nSELECT Opera" +
                "tionId, MeasurementPointMeterId, MeterId, ServerTime, MeterTime, VoltagePhaseA, " +
                "VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhaseC, Phase" +
                "AnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, AngleofUL2SubUL1, AngleofUL1Sub" +
                "UL3, Frequency, NeutralCurrent, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowe" +
                "rPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhaseB, Reacti" +
                "vePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB" +
                ", ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPh" +
                "aseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARat" +
                "e2, EnergyPlusARate3, EnergyPlusARate4, EnergySubARate1, EnergySubARate2, Energy" +
                "SubARate3, EnergySubARate4, Q1, Q2, Q3, Q4, ImportWh, ExportWh, EnergyPlusVA, Ma" +
                "xDemandPlusA, MaxDemandSubA, MaxDemandPlusARate1, MaxDemandPlusARate1Time, MaxDe" +
                "mandSubARate1, MaxDemandSubARate1Time, MaxDemandPlusARate2, MaxDemandPlusARate2T" +
                "ime, MaxDemandSubARate2, MaxDemandSubARate2Time, MaxDemandPlusARate3, MaxDemandP" +
                "lusARate3Time, MaxDemandSubARate3, MaxDemandSubARate3Time, MaxDemandPlusARate4, " +
                "MaxDemandPlusARate4Time, MaxDemandSubARate4, MaxDemandSubARate4Time, ReactiveEne" +
                "rgyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnerg" +
                "ySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PhaseRotation, Tu," +
                " Ti, TuT, TiT, TuM, TiM, Signal, CreateDate FROM Operation3P WHERE (OperationId " +
                "= @OperationId) AND (ServerTime = @ServerTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperationId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AngleofUL2SubUL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "AngleofUL2SubUL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AngleofUL1SubUL3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "AngleofUL1SubUL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frequency", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Frequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NeutralCurrent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "NeutralCurrent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusVA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate1Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate1Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate1Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate1Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate2Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate2Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate2Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate2Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate3Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate3Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate3Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate3Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate4Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate4Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate4Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate4Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseRotation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseRotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tu", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Tu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ti", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Ti", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TuT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "TuT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "TiT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TuM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "TuM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "TiM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Signal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Signal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE       Operation3P\r\nSET                OperationId = @OperationId, Measurem" +
                "entPointMeterId = @MeasurementPointMeterId, MeterId = @MeterId, ServerTime = @Se" +
                "rverTime, MeterTime = @MeterTime, \r\n                         VoltagePhaseA = @Vo" +
                "ltagePhaseA, VoltagePhaseB = @VoltagePhaseB, VoltagePhaseC = @VoltagePhaseC, Cur" +
                "rentPhaseA = @CurrentPhaseA, \r\n                         CurrentPhaseB = @Current" +
                "PhaseB, CurrentPhaseC = @CurrentPhaseC, PhaseAnglePhaseA = @PhaseAnglePhaseA, Ph" +
                "aseAnglePhaseB = @PhaseAnglePhaseB, \r\n                         PhaseAnglePhaseC " +
                "= @PhaseAnglePhaseC, AngleofUL2SubUL1 = @AngleofUL2SubUL1, AngleofUL1SubUL3 = @A" +
                "ngleofUL1SubUL3, Frequency = @Frequency, \r\n                         NeutralCurre" +
                "nt = @NeutralCurrent, ActivePowerPhaseA = @ActivePowerPhaseA, ActivePowerPhaseB " +
                "= @ActivePowerPhaseB, \r\n                         ActivePowerPhaseC = @ActivePowe" +
                "rPhaseC, ActivePowerPhaseTotal = @ActivePowerPhaseTotal, ReactivePowerPhaseA = @" +
                "ReactivePowerPhaseA, \r\n                         ReactivePowerPhaseB = @ReactiveP" +
                "owerPhaseB, ReactivePowerPhaseC = @ReactivePowerPhaseC, ReactivePowerPhaseTotal " +
                "= @ReactivePowerPhaseTotal, \r\n                         ApparentPowerPhaseA = @Ap" +
                "parentPowerPhaseA, ApparentPowerPhaseB = @ApparentPowerPhaseB, ApparentPowerPhas" +
                "eC = @ApparentPowerPhaseC, \r\n                         ApparentPowerPhaseTotal = " +
                "@ApparentPowerPhaseTotal, PowerFactorPhaseA = @PowerFactorPhaseA, PowerFactorPha" +
                "seB = @PowerFactorPhaseB, \r\n                         PowerFactorPhaseC = @PowerF" +
                "actorPhaseC, PowerFactorPhaseTotal = @PowerFactorPhaseTotal, EnergyPlusARate1 = " +
                "@EnergyPlusARate1, \r\n                         EnergyPlusARate2 = @EnergyPlusARat" +
                "e2, EnergyPlusARate3 = @EnergyPlusARate3, EnergyPlusARate4 = @EnergyPlusARate4, " +
                "\r\n                         EnergySubARate1 = @EnergySubARate1, EnergySubARate2 =" +
                " @EnergySubARate2, EnergySubARate3 = @EnergySubARate3, \r\n                       " +
                "  EnergySubARate4 = @EnergySubARate4, Q1 = @Q1, Q2 = @Q2, Q3 = @Q3, Q4 = @Q4, Im" +
                "portWh = @ImportWh, ExportWh = @ExportWh, \r\n                         EnergyPlusV" +
                "A = @EnergyPlusVA, MaxDemandPlusA = @MaxDemandPlusA, MaxDemandSubA = @MaxDemandS" +
                "ubA, \r\n                         MaxDemandPlusARate1 = @MaxDemandPlusARate1, MaxD" +
                "emandPlusARate1Time = @MaxDemandPlusARate1Time, \r\n                         MaxDe" +
                "mandSubARate1 = @MaxDemandSubARate1, MaxDemandSubARate1Time = @MaxDemandSubARate" +
                "1Time, \r\n                         MaxDemandPlusARate2 = @MaxDemandPlusARate2, Ma" +
                "xDemandPlusARate2Time = @MaxDemandPlusARate2Time, \r\n                         Max" +
                "DemandSubARate2 = @MaxDemandSubARate2, MaxDemandSubARate2Time = @MaxDemandSubARa" +
                "te2Time, \r\n                         MaxDemandPlusARate3 = @MaxDemandPlusARate3, " +
                "MaxDemandPlusARate3Time = @MaxDemandPlusARate3Time, \r\n                         M" +
                "axDemandSubARate3 = @MaxDemandSubARate3, MaxDemandSubARate3Time = @MaxDemandSubA" +
                "Rate3Time, \r\n                         MaxDemandPlusARate4 = @MaxDemandPlusARate4" +
                ", MaxDemandPlusARate4Time = @MaxDemandPlusARate4Time, \r\n                        " +
                " MaxDemandSubARate4 = @MaxDemandSubARate4, MaxDemandSubARate4Time = @MaxDemandSu" +
                "bARate4Time, \r\n                         ReactiveEnergyPlusARate1 = @ReactiveEner" +
                "gyPlusARate1, ReactiveEnergyPlusARate2 = @ReactiveEnergyPlusARate2, \r\n          " +
                "               ReactiveEnergyPlusARate3 = @ReactiveEnergyPlusARate3, ReactiveEne" +
                "rgySubARate1 = @ReactiveEnergySubARate1, \r\n                         ReactiveEner" +
                "gySubARate2 = @ReactiveEnergySubARate2, ReactiveEnergySubARate3 = @ReactiveEnerg" +
                "ySubARate3, PhaseRotation = @PhaseRotation, Tu = @Tu, \r\n                        " +
                " Ti = @Ti, TuT = @TuT, TiT = @TiT, TuM = @TuM, TiM = @TiM, Signal = @Signal, Cre" +
                "ateDate = @CreateDate\r\nWHERE        (OperationId = @Original_OperationId); \r\nSEL" +
                "ECT OperationId, MeasurementPointMeterId, MeterId, ServerTime, MeterTime, Voltag" +
                "ePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhas" +
                "eC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, AngleofUL2SubUL1, Angl" +
                "eofUL1SubUL3, Frequency, NeutralCurrent, ActivePowerPhaseA, ActivePowerPhaseB, A" +
                "ctivePowerPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhase" +
                "B, ReactivePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPo" +
                "werPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, Powe" +
                "rFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, Energ" +
                "yPlusARate2, EnergyPlusARate3, EnergyPlusARate4, EnergySubARate1, EnergySubARate" +
                "2, EnergySubARate3, EnergySubARate4, Q1, Q2, Q3, Q4, ImportWh, ExportWh, EnergyP" +
                "lusVA, MaxDemandPlusA, MaxDemandSubA, MaxDemandPlusARate1, MaxDemandPlusARate1Ti" +
                "me, MaxDemandSubARate1, MaxDemandSubARate1Time, MaxDemandPlusARate2, MaxDemandPl" +
                "usARate2Time, MaxDemandSubARate2, MaxDemandSubARate2Time, MaxDemandPlusARate3, M" +
                "axDemandPlusARate3Time, MaxDemandSubARate3, MaxDemandSubARate3Time, MaxDemandPlu" +
                "sARate4, MaxDemandPlusARate4Time, MaxDemandSubARate4, MaxDemandSubARate4Time, Re" +
                "activeEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, Reac" +
                "tiveEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PhaseRota" +
                "tion, Tu, Ti, TuT, TiT, TuM, TiM, Signal, CreateDate FROM Operation3P WHERE (Ope" +
                "rationId = @OperationId) AND (ServerTime = @ServerTime)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperationId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "OperationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AngleofUL2SubUL1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "AngleofUL2SubUL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AngleofUL1SubUL3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "AngleofUL1SubUL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Frequency", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Frequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NeutralCurrent", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "NeutralCurrent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate4", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate4", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Q2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q4", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Q4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportWh", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportWh", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusVA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubA", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate1Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate1Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate1Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate1Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate2Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate2Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate2Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate2Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate3Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate3Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate3", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate3Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate3Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate4", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandPlusARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandPlusARate4Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandPlusARate4Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate4", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "MaxDemandSubARate4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxDemandSubARate4Time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MaxDemandSubARate4Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseRotation", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseRotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tu", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Tu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ti", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "Ti", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TuT", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "TuT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiT", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "TiT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TuM", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "TuM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TiM", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 20, 3, "TiM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Signal", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Signal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperationId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "OperationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::OperationDTO.Properties.Settings.Default.AmiSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT OperationId, MeasurementPointMeterId, MeterId, ServerTime, MeterTime, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, AngleofUL2SubUL1, AngleofUL1SubUL3, Frequency, NeutralCurrent, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, EnergyPlusARate4, EnergySubARate1, EnergySubARate2, EnergySubARate3, EnergySubARate4, Q1, Q2, Q3, Q4, ImportWh, ExportWh, EnergyPlusVA, MaxDemandPlusA, MaxDemandSubA, MaxDemandPlusARate1, MaxDemandPlusARate1Time, MaxDemandSubARate1, MaxDemandSubARate1Time, MaxDemandPlusARate2, MaxDemandPlusARate2Time, MaxDemandSubARate2, MaxDemandSubARate2Time, MaxDemandPlusARate3, MaxDemandPlusARate3Time, MaxDemandSubARate3, MaxDemandSubARate3Time, MaxDemandPlusARate4, MaxDemandPlusARate4Time, MaxDemandSubARate4, MaxDemandSubARate4Time, ReactiveEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PhaseRotation, Tu, Ti, TuT, TiT, TuM, TiM, Signal, CreateDate FROM dbo.Operation3P";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        MeasurementPointMeterId, MeterId, MAX(ServerTime) AS ServerTime, OperationId
FROM            Operation3P
WHERE        (MeasurementPointMeterId = @measurementPointMeterId) AND (MeterId NOT IN (@meterId))
GROUP BY MeterId, MeasurementPointMeterId, OperationId
order by OperationId desc";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@measurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@meterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Operation3PDataSet.Operation3PDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Operation3PDataSet.Operation3PDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Operation3PDataSet.Operation3PDataTable dataTable = new Operation3PDataSet.Operation3PDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int GetMeterIdOldByMeasurementPointMeterIdAndCurrentMeterId(Operation3PDataSet.Operation3PDataTable dataTable, long measurementPointMeterId, long meterId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(measurementPointMeterId));
            this.Adapter.SelectCommand.Parameters[1].Value = ((long)(meterId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Operation3PDataSet.Operation3PDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Operation3PDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Operation3P");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OperationId) {
            if ((Original_OperationId == null)) {
                throw new global::System.ArgumentNullException("Original_OperationId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OperationId));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OperationId, 
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    System.DateTime ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTime, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> AngleofUL2SubUL1, 
                    global::System.Nullable<decimal> AngleofUL1SubUL3, 
                    global::System.Nullable<decimal> Frequency, 
                    global::System.Nullable<decimal> NeutralCurrent, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergyPlusARate4, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> EnergySubARate4, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q2, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> Q4, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> EnergyPlusVA, 
                    global::System.Nullable<decimal> MaxDemandPlusA, 
                    global::System.Nullable<decimal> MaxDemandSubA, 
                    global::System.Nullable<decimal> MaxDemandPlusARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate1Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate1Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate2Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate2Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate3Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate3Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate4Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate4Time, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PhaseRotation, 
                    global::System.Nullable<decimal> Tu, 
                    global::System.Nullable<decimal> Ti, 
                    global::System.Nullable<decimal> TuT, 
                    global::System.Nullable<decimal> TiT, 
                    global::System.Nullable<decimal> TuM, 
                    global::System.Nullable<decimal> TiM, 
                    global::System.Nullable<decimal> Signal, 
                    global::System.Nullable<global::System.DateTime> CreateDate) {
            if ((OperationId == null)) {
                throw new global::System.ArgumentNullException("OperationId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OperationId));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ServerTime));
            if ((MeterTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MeterTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(VoltagePhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(VoltagePhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(VoltagePhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CurrentPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CurrentPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(CurrentPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AngleofUL2SubUL1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(AngleofUL2SubUL1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AngleofUL1SubUL3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(AngleofUL1SubUL3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Frequency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(Frequency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NeutralCurrent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(NeutralCurrent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(EnergyPlusARate4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(EnergySubARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(EnergySubARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(EnergySubARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(EnergySubARate4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Q1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(Q1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Q2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(Q2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Q3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(Q3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Q4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(Q4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ImportWh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(ImportWh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ExportWh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(ExportWh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusVA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(EnergyPlusVA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(MaxDemandPlusA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(MaxDemandSubA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(MaxDemandPlusARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate1Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(MaxDemandPlusARate1Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(MaxDemandSubARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate1Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(MaxDemandSubARate1Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(MaxDemandPlusARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate2Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(MaxDemandPlusARate2Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(MaxDemandSubARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate2Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(MaxDemandSubARate2Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(MaxDemandPlusARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate3Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(MaxDemandPlusARate3Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(MaxDemandSubARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate3Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(MaxDemandSubARate3Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((decimal)(MaxDemandPlusARate4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate4Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((System.DateTime)(MaxDemandPlusARate4Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(MaxDemandSubARate4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate4Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((System.DateTime)(MaxDemandSubARate4Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((decimal)(ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((decimal)(ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((decimal)(ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((decimal)(ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((decimal)(ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((PhaseRotation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((decimal)(PhaseRotation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Tu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(Tu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Ti.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((decimal)(Ti.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((TuT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((decimal)(TuT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((TiT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(TiT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((TuM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((decimal)(TuM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((TiM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((decimal)(TiM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Signal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((decimal)(Signal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OperationId, 
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    System.DateTime ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTime, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> AngleofUL2SubUL1, 
                    global::System.Nullable<decimal> AngleofUL1SubUL3, 
                    global::System.Nullable<decimal> Frequency, 
                    global::System.Nullable<decimal> NeutralCurrent, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergyPlusARate4, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> EnergySubARate4, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q2, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> Q4, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> EnergyPlusVA, 
                    global::System.Nullable<decimal> MaxDemandPlusA, 
                    global::System.Nullable<decimal> MaxDemandSubA, 
                    global::System.Nullable<decimal> MaxDemandPlusARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate1Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate1Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate2Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate2Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate3Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate3Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate4Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate4Time, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PhaseRotation, 
                    global::System.Nullable<decimal> Tu, 
                    global::System.Nullable<decimal> Ti, 
                    global::System.Nullable<decimal> TuT, 
                    global::System.Nullable<decimal> TiT, 
                    global::System.Nullable<decimal> TuM, 
                    global::System.Nullable<decimal> TiM, 
                    global::System.Nullable<decimal> Signal, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    string Original_OperationId) {
            if ((OperationId == null)) {
                throw new global::System.ArgumentNullException("OperationId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OperationId));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ServerTime));
            if ((MeterTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MeterTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(VoltagePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(VoltagePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(VoltagePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CurrentPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CurrentPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(CurrentPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AngleofUL2SubUL1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(AngleofUL2SubUL1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AngleofUL1SubUL3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(AngleofUL1SubUL3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Frequency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Frequency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NeutralCurrent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(NeutralCurrent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(EnergyPlusARate4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(EnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(EnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(EnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(EnergySubARate4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Q1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Q1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Q2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Q2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Q3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Q3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Q4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Q4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ImportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(ImportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ExportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(ExportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(EnergyPlusVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(MaxDemandPlusA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(MaxDemandSubA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(MaxDemandPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate1Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(MaxDemandPlusARate1Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(MaxDemandSubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate1Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(MaxDemandSubARate1Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(MaxDemandPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate2Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(MaxDemandPlusARate2Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(MaxDemandSubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate2Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(MaxDemandSubARate2Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(MaxDemandPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate3Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(MaxDemandPlusARate3Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(MaxDemandSubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate3Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(MaxDemandSubARate3Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(MaxDemandPlusARate4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandPlusARate4Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(MaxDemandPlusARate4Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(MaxDemandSubARate4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((MaxDemandSubARate4Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(MaxDemandSubARate4Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((PhaseRotation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(PhaseRotation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Tu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Tu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Ti.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Ti.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((TuT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(TuT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((TiT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(TiT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((TuM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(TuM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((TiM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(TiM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Signal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Signal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_OperationId == null)) {
                throw new global::System.ArgumentNullException("Original_OperationId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_OperationId));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    System.DateTime ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTime, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> AngleofUL2SubUL1, 
                    global::System.Nullable<decimal> AngleofUL1SubUL3, 
                    global::System.Nullable<decimal> Frequency, 
                    global::System.Nullable<decimal> NeutralCurrent, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergyPlusARate4, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> EnergySubARate4, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q2, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> Q4, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> EnergyPlusVA, 
                    global::System.Nullable<decimal> MaxDemandPlusA, 
                    global::System.Nullable<decimal> MaxDemandSubA, 
                    global::System.Nullable<decimal> MaxDemandPlusARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate1Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate1, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate1Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate2Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate2, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate2Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate3Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate3, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate3Time, 
                    global::System.Nullable<decimal> MaxDemandPlusARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandPlusARate4Time, 
                    global::System.Nullable<decimal> MaxDemandSubARate4, 
                    global::System.Nullable<global::System.DateTime> MaxDemandSubARate4Time, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PhaseRotation, 
                    global::System.Nullable<decimal> Tu, 
                    global::System.Nullable<decimal> Ti, 
                    global::System.Nullable<decimal> TuT, 
                    global::System.Nullable<decimal> TiT, 
                    global::System.Nullable<decimal> TuM, 
                    global::System.Nullable<decimal> TiM, 
                    global::System.Nullable<decimal> Signal, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    string Original_OperationId) {
            return this.Update(Original_OperationId, MeasurementPointMeterId, MeterId, ServerTime, MeterTime, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, AngleofUL2SubUL1, AngleofUL1SubUL3, Frequency, NeutralCurrent, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, EnergyPlusARate4, EnergySubARate1, EnergySubARate2, EnergySubARate3, EnergySubARate4, Q1, Q2, Q3, Q4, ImportWh, ExportWh, EnergyPlusVA, MaxDemandPlusA, MaxDemandSubA, MaxDemandPlusARate1, MaxDemandPlusARate1Time, MaxDemandSubARate1, MaxDemandSubARate1Time, MaxDemandPlusARate2, MaxDemandPlusARate2Time, MaxDemandSubARate2, MaxDemandSubARate2Time, MaxDemandPlusARate3, MaxDemandPlusARate3Time, MaxDemandSubARate3, MaxDemandSubARate3Time, MaxDemandPlusARate4, MaxDemandPlusARate4Time, MaxDemandSubARate4, MaxDemandSubARate4Time, ReactiveEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PhaseRotation, Tu, Ti, TuT, TiT, TuM, TiM, Signal, CreateDate, Original_OperationId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UpdateMeasurementPointMeterForOperation3PTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateMeasurementPointMeterForOperation3PTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UpdateMeasurementPointMeterForOperation3P";
            tableMapping.ColumnMappings.Add("MeasurementPointMeterId", "MeasurementPointMeterId");
            tableMapping.ColumnMappings.Add("MeterId", "MeterId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Operation3P] ([OperationId], [MeasurementPointMeterId], [MeterId], [" +
                "ServerTime]) VALUES (@OperationId, @MeasurementPointMeterId, @MeterId, @ServerTi" +
                "me)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperationId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE       Operation3P\r\nSET                MeasurementPointMeterId = @NewMeasur" +
                "ementPointMeterId, MeterId = @MeterId\r\nWHERE        (MeasurementPointMeterId = @" +
                "MeasurementPointMeterId) AND (MeterId = @Original_MeterId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewMeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::OperationDTO.Properties.Settings.Default.AmiSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MeasurementPointMeterId, MeterId FROM Operation3P";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT top (1) MeasurementPointMeterId, MeterId FROM Operation3P WHERE (Measureme" +
                "ntPointMeterId = @measurementPointMeterId) AND (MeterId = @meterId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@measurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@meterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE       Operation3P\r\nSET                MeasurementPointMeterId = @NewMeasur" +
                "ementPointMeterId\r\nWHERE        (MeasurementPointMeterId = @MeasurementPointMete" +
                "rId) AND (MeterId = @MeterId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewMeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable dataTable = new Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMeasurementPointMeterIdAndMeterId(Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable dataTable, long measurementPointMeterId, global::System.Nullable<long> meterId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(measurementPointMeterId));
            if ((meterId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(meterId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Operation3PDataSet.UpdateMeasurementPointMeterForOperation3PDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Operation3PDataSet dataSet) {
            return this.Adapter.Update(dataSet, "UpdateMeasurementPointMeterForOperation3P");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OperationId, long MeasurementPointMeterId, global::System.Nullable<long> MeterId, System.DateTime ServerTime) {
            if ((OperationId == null)) {
                throw new global::System.ArgumentNullException("OperationId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OperationId));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ServerTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long NewMeasurementPointMeterId, global::System.Nullable<long> MeterId, long MeasurementPointMeterId, global::System.Nullable<long> Original_MeterId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(NewMeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(MeasurementPointMeterId));
            if ((Original_MeterId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Original_MeterId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateNewMeasurementPointMeterId(long NewMeasurementPointMeterId, long MeasurementPointMeterId, global::System.Nullable<long> MeterId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((long)(NewMeasurementPointMeterId));
            command.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                command.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Operation3PTableAdapter _operation3PTableAdapter;
        
        private UpdateMeasurementPointMeterForOperation3PTableAdapter _updateMeasurementPointMeterForOperation3PTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Operation3PTableAdapter Operation3PTableAdapter {
            get {
                return this._operation3PTableAdapter;
            }
            set {
                this._operation3PTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UpdateMeasurementPointMeterForOperation3PTableAdapter UpdateMeasurementPointMeterForOperation3PTableAdapter {
            get {
                return this._updateMeasurementPointMeterForOperation3PTableAdapter;
            }
            set {
                this._updateMeasurementPointMeterForOperation3PTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._operation3PTableAdapter != null) 
                            && (this._operation3PTableAdapter.Connection != null))) {
                    return this._operation3PTableAdapter.Connection;
                }
                if (((this._updateMeasurementPointMeterForOperation3PTableAdapter != null) 
                            && (this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection != null))) {
                    return this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._operation3PTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Operation3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._operation3PTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Operation3P.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._operation3PTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UpdateMeasurementPointMeterForOperation3P.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._updateMeasurementPointMeterForOperation3PTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Operation3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._operation3PTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Operation3P.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._operation3PTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UpdateMeasurementPointMeterForOperation3P.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._updateMeasurementPointMeterForOperation3PTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Operation3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UpdateMeasurementPointMeterForOperation3P.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._updateMeasurementPointMeterForOperation3PTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._operation3PTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Operation3P.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._operation3PTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Operation3PDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._operation3PTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._operation3PTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._updateMeasurementPointMeterForOperation3PTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._operation3PTableAdapter != null)) {
                    revertConnections.Add(this._operation3PTableAdapter, this._operation3PTableAdapter.Connection);
                    this._operation3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._operation3PTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._operation3PTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._operation3PTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._operation3PTableAdapter.Adapter);
                    }
                }
                if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                    revertConnections.Add(this._updateMeasurementPointMeterForOperation3PTableAdapter, this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection);
                    this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._updateMeasurementPointMeterForOperation3PTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._updateMeasurementPointMeterForOperation3PTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._updateMeasurementPointMeterForOperation3PTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._updateMeasurementPointMeterForOperation3PTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._operation3PTableAdapter != null)) {
                    this._operation3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._operation3PTableAdapter]));
                    this._operation3PTableAdapter.Transaction = null;
                }
                if ((this._updateMeasurementPointMeterForOperation3PTableAdapter != null)) {
                    this._updateMeasurementPointMeterForOperation3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._updateMeasurementPointMeterForOperation3PTableAdapter]));
                    this._updateMeasurementPointMeterForOperation3PTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591