<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MeterDataSet" targetNamespace="http://tempuri.org/MeterDataSet.xsd" xmlns:mstns="http://tempuri.org/MeterDataSet.xsd" xmlns="http://tempuri.org/MeterDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueryIdByMeterCodeTableAdapter" GeneratorFunctionsComponentClassName="QueryIdByMeterCodeTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueryIdByMeterCodeTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AmiSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AmiSystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.OperationDTO.Properties.Settings.GlobalReference.Default.AmiSystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeterInfoTableAdapter" GeneratorDataComponentClassName="MeterInfoTableAdapter" Name="MeterInfo" UserDataComponentName="MeterInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByMeterCode" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="FillByMeterCode" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="FillByMeterCode">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT case when mt.Name is null then '' else mt.Name end as MeterTypeName, m.MeterTypeId  , case when mp.Id is null then '' else mp.Id end as MeasurementPointId,
case when mpm.MeasurementPointMeterId is null then '' else mpm.MeasurementPointMeterId end as MeasurementPointMeterId  , 
m.Id as MeterId, m.MeterId as MeterCode, case when m.Serial is null then '' else m.Serial end as Serial, 
case when m.Status is null then '' else m.Status end as Status,case when m.CreatedUserId is null then '' else m.CreatedUserId end as CreatedUserId,
case when m.CreatedDate is null then '' else m.CreatedDate end as CreateDate,case when m.EditedUserId is null then '' else m.EditedUserId end as EditedUserId,
case when m.EditedDate is null then '' else m.EditedDate end as EditedDate,case when  m.HisType is null then '' else m.HisType end as HisType 
FROM dbo.Meter as m join MeterType as mt on m.MeterTypeId = mt.Id
full outer join MeasurementPointMeter as mpm on mpm.MeterId = m.Id
full outer join MeasurementPoint as mp on mpm.MeasurementPointId = mp.Id
where m.MeterId like '%'+ @meterCode +'%'</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="meterCode" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="varchar(20)" DbType="AnsiString" Direction="Input" ParameterName="@meterCode" Precision="0" ProviderType="VarChar" Scale="0" Size="20" SourceColumn="MeterCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterTypeName" DataSetColumn="MeterTypeName" />
              <Mapping SourceColumn="MeterTypeId" DataSetColumn="MeterTypeId" />
              <Mapping SourceColumn="MeasurementPointId" DataSetColumn="MeasurementPointId" />
              <Mapping SourceColumn="MeasurementPointMeterId" DataSetColumn="MeasurementPointMeterId" />
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
              <Mapping SourceColumn="MeterCode" DataSetColumn="MeterCode" />
              <Mapping SourceColumn="Serial" DataSetColumn="Serial" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
              <Mapping SourceColumn="CreatedUserId" DataSetColumn="CreatedUserId" />
              <Mapping SourceColumn="CreateDate" DataSetColumn="CreateDate" />
              <Mapping SourceColumn="EditedUserId" DataSetColumn="EditedUserId" />
              <Mapping SourceColumn="EditedDate" DataSetColumn="EditedDate" />
              <Mapping SourceColumn="HisType" DataSetColumn="HisType" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeterTableAdapter" GeneratorDataComponentClassName="MeterTableAdapter" Name="Meter" UserDataComponentName="MeterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Meter] WHERE (([Id] = @Original_Id) AND ([MeterId] = @Original_MeterId) AND ([MeterTypeId] = @Original_MeterTypeId) AND ([Serial] = @Original_Serial) AND ((@IsNull_Imax = 1 AND [Imax] IS NULL) OR ([Imax] = @Original_Imax)) AND ([Status] = @Original_Status) AND ((@IsNull_CreatedUserId = 1 AND [CreatedUserId] IS NULL) OR ([CreatedUserId] = @Original_CreatedUserId)) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_EditedUserId = 1 AND [EditedUserId] IS NULL) OR ([EditedUserId] = @Original_EditedUserId)) AND ((@IsNull_EditedDate = 1 AND [EditedDate] IS NULL) OR ([EditedDate] = @Original_EditedDate)) AND ([IsDeleted] = @Original_IsDeleted) AND ([HisType] = @Original_HisType) AND ((@IsNull_Multiplier = 1 AND [Multiplier] IS NULL) OR ([Multiplier] = @Original_Multiplier)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MeterId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MeterTypeId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MeterTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Serial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Serial" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Imax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Imax" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Imax" Precision="18" ProviderType="Decimal" Scale="3" Size="0" SourceColumn="Imax" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatedUserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CreatedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatedDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EditedUserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_EditedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EditedDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EditedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDeleted" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDeleted" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HisType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HisType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Multiplier" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Multiplier" Precision="18" ProviderType="Decimal" Scale="5" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Meter] ([MeterId], [MeterTypeId], [Serial], [Imax], [Status], [CreatedUserId], [CreatedDate], [EditedUserId], [EditedDate], [IsDeleted], [HisType], [Multiplier]) VALUES (@MeterId, @MeterTypeId, @Serial, @Imax, @Status, @CreatedUserId, @CreatedDate, @EditedUserId, @EditedDate, @IsDeleted, @HisType, @Multiplier);
SELECT Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier FROM Meter WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MeterTypeId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MeterTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Serial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Serial" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Imax" Precision="18" ProviderType="Decimal" Scale="3" Size="0" SourceColumn="Imax" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CreatedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@EditedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EditedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDeleted" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDeleted" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HisType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HisType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Multiplier" Precision="18" ProviderType="Decimal" Scale="5" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier FROM dbo.Meter</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Meter] SET [MeterId] = @MeterId, [MeterTypeId] = @MeterTypeId, [Serial] = @Serial, [Imax] = @Imax, [Status] = @Status, [CreatedUserId] = @CreatedUserId, [CreatedDate] = @CreatedDate, [EditedUserId] = @EditedUserId, [EditedDate] = @EditedDate, [IsDeleted] = @IsDeleted, [HisType] = @HisType, [Multiplier] = @Multiplier WHERE (([Id] = @Original_Id) AND ([MeterId] = @Original_MeterId) AND ([MeterTypeId] = @Original_MeterTypeId) AND ([Serial] = @Original_Serial) AND ((@IsNull_Imax = 1 AND [Imax] IS NULL) OR ([Imax] = @Original_Imax)) AND ([Status] = @Original_Status) AND ((@IsNull_CreatedUserId = 1 AND [CreatedUserId] IS NULL) OR ([CreatedUserId] = @Original_CreatedUserId)) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_EditedUserId = 1 AND [EditedUserId] IS NULL) OR ([EditedUserId] = @Original_EditedUserId)) AND ((@IsNull_EditedDate = 1 AND [EditedDate] IS NULL) OR ([EditedDate] = @Original_EditedDate)) AND ([IsDeleted] = @Original_IsDeleted) AND ([HisType] = @Original_HisType) AND ((@IsNull_Multiplier = 1 AND [Multiplier] IS NULL) OR ([Multiplier] = @Original_Multiplier)));
SELECT Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier FROM Meter WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MeterTypeId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MeterTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Serial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Serial" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Imax" Precision="18" ProviderType="Decimal" Scale="3" Size="0" SourceColumn="Imax" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CreatedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@EditedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EditedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDeleted" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDeleted" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HisType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HisType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Multiplier" Precision="18" ProviderType="Decimal" Scale="5" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MeterId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MeterTypeId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MeterTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Serial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Serial" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Imax" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Imax" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Imax" Precision="18" ProviderType="Decimal" Scale="3" Size="0" SourceColumn="Imax" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatedUserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CreatedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CreatedUserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreatedDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EditedUserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_EditedUserId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EditedUserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EditedDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EditedDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EditedDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDeleted" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDeleted" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HisType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HisType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Multiplier" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Multiplier" Precision="18" ProviderType="Decimal" Scale="5" Size="0" SourceColumn="Multiplier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
              <Mapping SourceColumn="MeterTypeId" DataSetColumn="MeterTypeId" />
              <Mapping SourceColumn="Serial" DataSetColumn="Serial" />
              <Mapping SourceColumn="Imax" DataSetColumn="Imax" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
              <Mapping SourceColumn="CreatedUserId" DataSetColumn="CreatedUserId" />
              <Mapping SourceColumn="CreatedDate" DataSetColumn="CreatedDate" />
              <Mapping SourceColumn="EditedUserId" DataSetColumn="EditedUserId" />
              <Mapping SourceColumn="EditedDate" DataSetColumn="EditedDate" />
              <Mapping SourceColumn="IsDeleted" DataSetColumn="IsDeleted" />
              <Mapping SourceColumn="HisType" DataSetColumn="HisType" />
              <Mapping SourceColumn="Multiplier" DataSetColumn="Multiplier" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByConditions" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByConditions" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByConditions">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier FROM dbo.Meter
where Id is not null
and (@meterCode is null or  MeterId like '%'+@meterCode)
and (@meterType is null or  MeterTypeId = @meterType)
and (@serial is null or  Serial = @serial)
and (@usedStatus is null or  Status = @usedStatus)
and (@isDeleted is null or  IsDeleted = @isDeleted)
and (@mutilplier is null or  Multiplier = @mutilplier)
and (@histype is null or  HisType = @histype)
and (@createFrom is null or cast(CreatedDate as date)&gt; cast(DATEADD(DAY,-1,@createFrom) as date))
and (@createdTo is null or cast(CreatedDate as date)&lt; cast(DATEADD(DAY,1,@createdTo) as date))
order by CreatedDate desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="meterCode" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="varchar(20)" DbType="AnsiString" Direction="Input" ParameterName="@meterCode" Precision="0" ProviderType="VarChar" Scale="0" Size="20" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="meterType" ColumnName="MeterTypeId" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="bigint" DbType="AnsiString" Direction="Input" ParameterName="@meterType" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="serial" ColumnName="Serial" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="nvarchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@serial" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Serial" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="usedStatus" ColumnName="Status" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@usedStatus" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="isDeleted" ColumnName="IsDeleted" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@isDeleted" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="IsDeleted" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="mutilplier" ColumnName="Multiplier" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="decimal(18, 5)" DbType="AnsiString" Direction="Input" ParameterName="@mutilplier" Precision="0" ProviderType="VarChar" Scale="0" Size="9" SourceColumn="Multiplier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="histype" ColumnName="HisType" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@histype" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="HisType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="createFrom" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@createFrom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="createdTo" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@createdTo" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByMeterCode" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByMeterCode" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByMeterCode">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier
FROM            Meter
WHERE        (MeterId = @meterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="meterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="varchar(20)" DbType="AnsiString" Direction="Input" ParameterName="@meterId" Precision="0" ProviderType="VarChar" Scale="0" Size="20" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByMeterId" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Id, MeterId, MeterTypeId, Serial, Imax, Status, CreatedUserId, CreatedDate, EditedUserId, EditedDate, IsDeleted, HisType, Multiplier
FROM            Meter
WHERE        (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="AmiSystem.dbo.Meter" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Meter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetFreeMeter" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetFreeMeter" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetFreeMeter">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT mt.Id, mt.MeterId, mt.MeterTypeId, mt.Serial, mt.Imax, mt.Status, mt.CreatedUserId, mt.CreatedDate, mt.EditedUserId, mt.EditedDate, mt.IsDeleted, mt.HisType, mt.Multiplier FROM dbo.Meter as mt left join
[dbo].[MeasurementPointMeter] as mpm on mt.Id = mpm.MeterId
where  mpm.MeterId is null </CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistOperation3PTableAdapter" GeneratorDataComponentClassName="CheckDataExistOperation3PTableAdapter" Name="CheckDataExistOperation3P" UserDataComponentName="CheckDataExistOperation3PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Operation3P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            Operation3P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Operation3P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistMeterScaleTableAdapter" GeneratorDataComponentClassName="CheckDataExistMeterScaleTableAdapter" Name="CheckDataExistMeterScale" UserDataComponentName="CheckDataExistMeterScaleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.MeterScale" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [MeterScale] ([MeterId]) VALUES (@MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            MeterScale
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.MeterScale" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistChangeMeterHistoryTableAdapter" GeneratorDataComponentClassName="CheckDataExistChangeMeterHistoryTableAdapter" Name="CheckDataExistChangeMeterHistory" UserDataComponentName="CheckDataExistChangeMeterHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.ChangeMeterHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            ChangeMeterHistory
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.ChangeMeterHistory" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistComparitionDataHistoricalTableAdapter" GeneratorDataComponentClassName="CheckDataExistComparitionDataHistoricalTableAdapter" Name="CheckDataExistComparitionDataHistorical" UserDataComponentName="CheckDataExistComparitionDataHistoricalTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.ComparitionDataHistorical" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            ComparitionDataHistorical
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.ComparitionDataHistorical" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistComparitionDataOpBeginTableAdapter" GeneratorDataComponentClassName="CheckDataExistComparitionDataOpBeginTableAdapter" Name="CheckDataExistComparitionDataOpBegin" UserDataComponentName="CheckDataExistComparitionDataOpBeginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.ComparitionDataOpBegin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            ComparitionDataOpBegin
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.ComparitionDataOpBegin" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistComparitionDataOpEndTableAdapter" GeneratorDataComponentClassName="CheckDataExistComparitionDataOpEndTableAdapter" Name="CheckDataExistComparitionDataOpEnd" UserDataComponentName="CheckDataExistComparitionDataOpEndTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.ComparitionDataOpEnd" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            ComparitionDataOpEnd
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.ComparitionDataOpEnd" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistHistorical1PTableAdapter" GeneratorDataComponentClassName="CheckDataExistHistorical1PTableAdapter" Name="CheckDataExistHistorical1P" UserDataComponentName="CheckDataExistHistorical1PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Historical1P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            Historical1P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Historical1P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExisEventMeterTableAdapter" GeneratorDataComponentClassName="CheckDataExisEventMeterTableAdapter" Name="CheckDataExisEventMeter" UserDataComponentName="CheckDataExisEventMeterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.EventMeter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            EventMeter
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.EventMeter" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistHistorical3PTableAdapter" GeneratorDataComponentClassName="CheckDataExistHistorical3PTableAdapter" Name="CheckDataExistHistorical3P" UserDataComponentName="CheckDataExistHistorical3PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Historical3P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            Historical3P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Historical3P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistInstantaneous1PTableAdapter" GeneratorDataComponentClassName="CheckDataExistInstantaneous1PTableAdapter" Name="CheckDataExistInstantaneous1P" UserDataComponentName="CheckDataExistInstantaneous1PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Instantaneous1P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            Instantaneous1P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Instantaneous1P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistInstantaneous3PTableAdapter" GeneratorDataComponentClassName="CheckDataExistInstantaneous3PTableAdapter" Name="CheckDataExistInstantaneous3P" UserDataComponentName="CheckDataExistInstantaneous3PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.Instantaneous3P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            Instantaneous3P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.Instantaneous3P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistLoadProfile3PTableAdapter" GeneratorDataComponentClassName="CheckDataExistLoadProfile3PTableAdapter" Name="CheckDataExistLoadProfile3P" UserDataComponentName="CheckDataExistLoadProfile3PTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.LoadProfile3P" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            LoadProfile3P
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.LoadProfile3P" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckDataExistOperationAlertTableAdapter" GeneratorDataComponentClassName="CheckDataExistOperationAlertTableAdapter" Name="CheckDataExistOperationAlert" UserDataComponentName="CheckDataExistOperationAlertTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemConnectionString (Settings)" DbObjectName="AmiSystem.dbo.OperationAlert" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="CheckDataExistByMeterId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="CheckDataExistByMeterId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="CheckDataExistByMeterId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TOP (1) MeterId
FROM            OperationAlert
WHERE        (MeterId = @MeterId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MeterId" ColumnName="MeterId" DataSourceName="AmiSystem.dbo.OperationAlert" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MeterId" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MeterId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeterId" DataSetColumn="MeterId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MeterDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="MeterDataSet" msprop:Generator_UserDSName="MeterDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="MeterInfo" msprop:Generator_TableClassName="MeterInfoDataTable" msprop:Generator_TableVarName="tableMeterInfo" msprop:Generator_RowChangedName="MeterInfoRowChanged" msprop:Generator_TablePropName="MeterInfo" msprop:Generator_RowDeletingName="MeterInfoRowDeleting" msprop:Generator_RowChangingName="MeterInfoRowChanging" msprop:Generator_RowEvHandlerName="MeterInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="MeterInfoRowDeleted" msprop:Generator_RowClassName="MeterInfoRow" msprop:Generator_UserTableName="MeterInfo" msprop:Generator_RowEvArgName="MeterInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterTypeName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnMeterTypeName" msprop:Generator_ColumnPropNameInRow="MeterTypeName" msprop:Generator_ColumnPropNameInTable="MeterTypeNameColumn" msprop:Generator_UserColumnName="MeterTypeName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MeterTypeId" msprop:Generator_ColumnVarNameInTable="columnMeterTypeId" msprop:Generator_ColumnPropNameInRow="MeterTypeId" msprop:Generator_ColumnPropNameInTable="MeterTypeIdColumn" msprop:Generator_UserColumnName="MeterTypeId" type="xs:long" minOccurs="0" />
              <xs:element name="MeasurementPointId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnMeasurementPointId" msprop:Generator_ColumnPropNameInRow="MeasurementPointId" msprop:Generator_ColumnPropNameInTable="MeasurementPointIdColumn" msprop:Generator_UserColumnName="MeasurementPointId" type="xs:long" minOccurs="0" />
              <xs:element name="MeasurementPointMeterId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnMeasurementPointMeterId" msprop:Generator_ColumnPropNameInRow="MeasurementPointMeterId" msprop:Generator_ColumnPropNameInTable="MeasurementPointMeterIdColumn" msprop:Generator_UserColumnName="MeasurementPointMeterId" type="xs:long" minOccurs="0" />
              <xs:element name="MeterId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
              <xs:element name="MeterCode" msprop:Generator_ColumnVarNameInTable="columnMeterCode" msprop:Generator_ColumnPropNameInRow="MeterCode" msprop:Generator_ColumnPropNameInTable="MeterCodeColumn" msprop:Generator_UserColumnName="MeterCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Serial" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSerial" msprop:Generator_ColumnPropNameInRow="Serial" msprop:Generator_ColumnPropNameInTable="SerialColumn" msprop:Generator_UserColumnName="Serial" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Status" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status" type="xs:int" minOccurs="0" />
              <xs:element name="CreatedUserId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnCreatedUserId" msprop:Generator_ColumnPropNameInRow="CreatedUserId" msprop:Generator_ColumnPropNameInTable="CreatedUserIdColumn" msprop:Generator_UserColumnName="CreatedUserId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreateDate" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnCreateDate" msprop:Generator_ColumnPropNameInRow="CreateDate" msprop:Generator_ColumnPropNameInTable="CreateDateColumn" msprop:Generator_UserColumnName="CreateDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EditedUserId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnEditedUserId" msprop:Generator_ColumnPropNameInRow="EditedUserId" msprop:Generator_ColumnPropNameInTable="EditedUserIdColumn" msprop:Generator_UserColumnName="EditedUserId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EditedDate" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnEditedDate" msprop:Generator_ColumnPropNameInRow="EditedDate" msprop:Generator_ColumnPropNameInTable="EditedDateColumn" msprop:Generator_UserColumnName="EditedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="HisType" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnHisType" msprop:Generator_ColumnPropNameInRow="HisType" msprop:Generator_ColumnPropNameInTable="HisTypeColumn" msprop:Generator_UserColumnName="HisType" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Meter" msprop:Generator_TableClassName="MeterDataTable" msprop:Generator_TableVarName="tableMeter" msprop:Generator_RowChangedName="MeterRowChanged" msprop:Generator_TablePropName="Meter" msprop:Generator_RowDeletingName="MeterRowDeleting" msprop:Generator_RowChangingName="MeterRowChanging" msprop:Generator_RowEvHandlerName="MeterRowChangeEventHandler" msprop:Generator_RowDeletedName="MeterRowDeleted" msprop:Generator_RowClassName="MeterRow" msprop:Generator_UserTableName="Meter" msprop:Generator_RowEvArgName="MeterRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:long" />
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MeterTypeId" msprop:Generator_ColumnVarNameInTable="columnMeterTypeId" msprop:Generator_ColumnPropNameInRow="MeterTypeId" msprop:Generator_ColumnPropNameInTable="MeterTypeIdColumn" msprop:Generator_UserColumnName="MeterTypeId" type="xs:long" />
              <xs:element name="Serial" msprop:Generator_ColumnVarNameInTable="columnSerial" msprop:Generator_ColumnPropNameInRow="Serial" msprop:Generator_ColumnPropNameInTable="SerialColumn" msprop:Generator_UserColumnName="Serial">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Imax" msprop:Generator_ColumnVarNameInTable="columnImax" msprop:Generator_ColumnPropNameInRow="Imax" msprop:Generator_ColumnPropNameInTable="ImaxColumn" msprop:Generator_UserColumnName="Imax" type="xs:decimal" minOccurs="0" />
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status" type="xs:int" />
              <xs:element name="CreatedUserId" msprop:Generator_ColumnVarNameInTable="columnCreatedUserId" msprop:Generator_ColumnPropNameInRow="CreatedUserId" msprop:Generator_ColumnPropNameInTable="CreatedUserIdColumn" msprop:Generator_UserColumnName="CreatedUserId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreatedDate" msprop:Generator_ColumnVarNameInTable="columnCreatedDate" msprop:Generator_ColumnPropNameInRow="CreatedDate" msprop:Generator_ColumnPropNameInTable="CreatedDateColumn" msprop:Generator_UserColumnName="CreatedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EditedUserId" msprop:Generator_ColumnVarNameInTable="columnEditedUserId" msprop:Generator_ColumnPropNameInRow="EditedUserId" msprop:Generator_ColumnPropNameInTable="EditedUserIdColumn" msprop:Generator_UserColumnName="EditedUserId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EditedDate" msprop:Generator_ColumnVarNameInTable="columnEditedDate" msprop:Generator_ColumnPropNameInRow="EditedDate" msprop:Generator_ColumnPropNameInTable="EditedDateColumn" msprop:Generator_UserColumnName="EditedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="IsDeleted" msprop:Generator_ColumnVarNameInTable="columnIsDeleted" msprop:Generator_ColumnPropNameInRow="IsDeleted" msprop:Generator_ColumnPropNameInTable="IsDeletedColumn" msprop:Generator_UserColumnName="IsDeleted" type="xs:boolean" />
              <xs:element name="HisType" msprop:Generator_ColumnVarNameInTable="columnHisType" msprop:Generator_ColumnPropNameInRow="HisType" msprop:Generator_ColumnPropNameInTable="HisTypeColumn" msprop:Generator_UserColumnName="HisType" type="xs:int" />
              <xs:element name="Multiplier" msprop:Generator_ColumnVarNameInTable="columnMultiplier" msprop:Generator_ColumnPropNameInRow="Multiplier" msprop:Generator_ColumnPropNameInTable="MultiplierColumn" msprop:Generator_UserColumnName="Multiplier" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistOperation3P" msprop:Generator_TableClassName="CheckDataExistOperation3PDataTable" msprop:Generator_TableVarName="tableCheckDataExistOperation3P" msprop:Generator_RowChangedName="CheckDataExistOperation3PRowChanged" msprop:Generator_TablePropName="CheckDataExistOperation3P" msprop:Generator_RowDeletingName="CheckDataExistOperation3PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistOperation3PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistOperation3PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistOperation3PRowDeleted" msprop:Generator_RowClassName="CheckDataExistOperation3PRow" msprop:Generator_UserTableName="CheckDataExistOperation3P" msprop:Generator_RowEvArgName="CheckDataExistOperation3PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistMeterScale" msprop:Generator_TableClassName="CheckDataExistMeterScaleDataTable" msprop:Generator_TableVarName="tableCheckDataExistMeterScale" msprop:Generator_RowChangedName="CheckDataExistMeterScaleRowChanged" msprop:Generator_TablePropName="CheckDataExistMeterScale" msprop:Generator_RowDeletingName="CheckDataExistMeterScaleRowDeleting" msprop:Generator_RowChangingName="CheckDataExistMeterScaleRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistMeterScaleRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistMeterScaleRowDeleted" msprop:Generator_RowClassName="CheckDataExistMeterScaleRow" msprop:Generator_UserTableName="CheckDataExistMeterScale" msprop:Generator_RowEvArgName="CheckDataExistMeterScaleRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistChangeMeterHistory" msprop:Generator_TableClassName="CheckDataExistChangeMeterHistoryDataTable" msprop:Generator_TableVarName="tableCheckDataExistChangeMeterHistory" msprop:Generator_RowChangedName="CheckDataExistChangeMeterHistoryRowChanged" msprop:Generator_TablePropName="CheckDataExistChangeMeterHistory" msprop:Generator_RowDeletingName="CheckDataExistChangeMeterHistoryRowDeleting" msprop:Generator_RowChangingName="CheckDataExistChangeMeterHistoryRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistChangeMeterHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistChangeMeterHistoryRowDeleted" msprop:Generator_RowClassName="CheckDataExistChangeMeterHistoryRow" msprop:Generator_UserTableName="CheckDataExistChangeMeterHistory" msprop:Generator_RowEvArgName="CheckDataExistChangeMeterHistoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistComparitionDataHistorical" msprop:Generator_TableClassName="CheckDataExistComparitionDataHistoricalDataTable" msprop:Generator_TableVarName="tableCheckDataExistComparitionDataHistorical" msprop:Generator_RowChangedName="CheckDataExistComparitionDataHistoricalRowChanged" msprop:Generator_TablePropName="CheckDataExistComparitionDataHistorical" msprop:Generator_RowDeletingName="CheckDataExistComparitionDataHistoricalRowDeleting" msprop:Generator_RowChangingName="CheckDataExistComparitionDataHistoricalRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistComparitionDataHistoricalRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistComparitionDataHistoricalRowDeleted" msprop:Generator_RowClassName="CheckDataExistComparitionDataHistoricalRow" msprop:Generator_UserTableName="CheckDataExistComparitionDataHistorical" msprop:Generator_RowEvArgName="CheckDataExistComparitionDataHistoricalRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistComparitionDataOpBegin" msprop:Generator_TableClassName="CheckDataExistComparitionDataOpBeginDataTable" msprop:Generator_TableVarName="tableCheckDataExistComparitionDataOpBegin" msprop:Generator_RowChangedName="CheckDataExistComparitionDataOpBeginRowChanged" msprop:Generator_TablePropName="CheckDataExistComparitionDataOpBegin" msprop:Generator_RowDeletingName="CheckDataExistComparitionDataOpBeginRowDeleting" msprop:Generator_RowChangingName="CheckDataExistComparitionDataOpBeginRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistComparitionDataOpBeginRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistComparitionDataOpBeginRowDeleted" msprop:Generator_RowClassName="CheckDataExistComparitionDataOpBeginRow" msprop:Generator_UserTableName="CheckDataExistComparitionDataOpBegin" msprop:Generator_RowEvArgName="CheckDataExistComparitionDataOpBeginRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistComparitionDataOpEnd" msprop:Generator_TableClassName="CheckDataExistComparitionDataOpEndDataTable" msprop:Generator_TableVarName="tableCheckDataExistComparitionDataOpEnd" msprop:Generator_RowChangedName="CheckDataExistComparitionDataOpEndRowChanged" msprop:Generator_TablePropName="CheckDataExistComparitionDataOpEnd" msprop:Generator_RowDeletingName="CheckDataExistComparitionDataOpEndRowDeleting" msprop:Generator_RowChangingName="CheckDataExistComparitionDataOpEndRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistComparitionDataOpEndRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistComparitionDataOpEndRowDeleted" msprop:Generator_RowClassName="CheckDataExistComparitionDataOpEndRow" msprop:Generator_UserTableName="CheckDataExistComparitionDataOpEnd" msprop:Generator_RowEvArgName="CheckDataExistComparitionDataOpEndRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistHistorical1P" msprop:Generator_TableClassName="CheckDataExistHistorical1PDataTable" msprop:Generator_TableVarName="tableCheckDataExistHistorical1P" msprop:Generator_RowChangedName="CheckDataExistHistorical1PRowChanged" msprop:Generator_TablePropName="CheckDataExistHistorical1P" msprop:Generator_RowDeletingName="CheckDataExistHistorical1PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistHistorical1PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistHistorical1PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistHistorical1PRowDeleted" msprop:Generator_RowClassName="CheckDataExistHistorical1PRow" msprop:Generator_UserTableName="CheckDataExistHistorical1P" msprop:Generator_RowEvArgName="CheckDataExistHistorical1PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExisEventMeter" msprop:Generator_TableClassName="CheckDataExisEventMeterDataTable" msprop:Generator_TableVarName="tableCheckDataExisEventMeter" msprop:Generator_RowChangedName="CheckDataExisEventMeterRowChanged" msprop:Generator_TablePropName="CheckDataExisEventMeter" msprop:Generator_RowDeletingName="CheckDataExisEventMeterRowDeleting" msprop:Generator_RowChangingName="CheckDataExisEventMeterRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExisEventMeterRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExisEventMeterRowDeleted" msprop:Generator_RowClassName="CheckDataExisEventMeterRow" msprop:Generator_UserTableName="CheckDataExisEventMeter" msprop:Generator_RowEvArgName="CheckDataExisEventMeterRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistHistorical3P" msprop:Generator_TableClassName="CheckDataExistHistorical3PDataTable" msprop:Generator_TableVarName="tableCheckDataExistHistorical3P" msprop:Generator_RowChangedName="CheckDataExistHistorical3PRowChanged" msprop:Generator_TablePropName="CheckDataExistHistorical3P" msprop:Generator_RowDeletingName="CheckDataExistHistorical3PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistHistorical3PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistHistorical3PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistHistorical3PRowDeleted" msprop:Generator_RowClassName="CheckDataExistHistorical3PRow" msprop:Generator_UserTableName="CheckDataExistHistorical3P" msprop:Generator_RowEvArgName="CheckDataExistHistorical3PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistInstantaneous1P" msprop:Generator_TableClassName="CheckDataExistInstantaneous1PDataTable" msprop:Generator_TableVarName="tableCheckDataExistInstantaneous1P" msprop:Generator_RowChangedName="CheckDataExistInstantaneous1PRowChanged" msprop:Generator_TablePropName="CheckDataExistInstantaneous1P" msprop:Generator_RowDeletingName="CheckDataExistInstantaneous1PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistInstantaneous1PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistInstantaneous1PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistInstantaneous1PRowDeleted" msprop:Generator_RowClassName="CheckDataExistInstantaneous1PRow" msprop:Generator_UserTableName="CheckDataExistInstantaneous1P" msprop:Generator_RowEvArgName="CheckDataExistInstantaneous1PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistInstantaneous3P" msprop:Generator_TableClassName="CheckDataExistInstantaneous3PDataTable" msprop:Generator_TableVarName="tableCheckDataExistInstantaneous3P" msprop:Generator_RowChangedName="CheckDataExistInstantaneous3PRowChanged" msprop:Generator_TablePropName="CheckDataExistInstantaneous3P" msprop:Generator_RowDeletingName="CheckDataExistInstantaneous3PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistInstantaneous3PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistInstantaneous3PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistInstantaneous3PRowDeleted" msprop:Generator_RowClassName="CheckDataExistInstantaneous3PRow" msprop:Generator_UserTableName="CheckDataExistInstantaneous3P" msprop:Generator_RowEvArgName="CheckDataExistInstantaneous3PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistLoadProfile3P" msprop:Generator_TableClassName="CheckDataExistLoadProfile3PDataTable" msprop:Generator_TableVarName="tableCheckDataExistLoadProfile3P" msprop:Generator_RowChangedName="CheckDataExistLoadProfile3PRowChanged" msprop:Generator_TablePropName="CheckDataExistLoadProfile3P" msprop:Generator_RowDeletingName="CheckDataExistLoadProfile3PRowDeleting" msprop:Generator_RowChangingName="CheckDataExistLoadProfile3PRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistLoadProfile3PRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistLoadProfile3PRowDeleted" msprop:Generator_RowClassName="CheckDataExistLoadProfile3PRow" msprop:Generator_UserTableName="CheckDataExistLoadProfile3P" msprop:Generator_RowEvArgName="CheckDataExistLoadProfile3PRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckDataExistOperationAlert" msprop:Generator_TableClassName="CheckDataExistOperationAlertDataTable" msprop:Generator_TableVarName="tableCheckDataExistOperationAlert" msprop:Generator_RowChangedName="CheckDataExistOperationAlertRowChanged" msprop:Generator_TablePropName="CheckDataExistOperationAlert" msprop:Generator_RowDeletingName="CheckDataExistOperationAlertRowDeleting" msprop:Generator_RowChangingName="CheckDataExistOperationAlertRowChanging" msprop:Generator_RowEvHandlerName="CheckDataExistOperationAlertRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckDataExistOperationAlertRowDeleted" msprop:Generator_RowClassName="CheckDataExistOperationAlertRow" msprop:Generator_UserTableName="CheckDataExistOperationAlert" msprop:Generator_RowEvArgName="CheckDataExistOperationAlertRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeterId" msprop:Generator_ColumnVarNameInTable="columnMeterId" msprop:Generator_ColumnPropNameInRow="MeterId" msprop:Generator_ColumnPropNameInTable="MeterIdColumn" msprop:Generator_UserColumnName="MeterId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1">
      <xs:selector xpath=".//mstns:MeterInfo" />
      <xs:field xpath="mstns:MeterId" />
    </xs:unique>
    <xs:unique name="Meter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Meter" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>