//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OperationDTO.AmiSystemDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LoadProfile3PDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LoadProfile3PDataSet : global::System.Data.DataSet {
        
        private LoadProfile3PDataTable tableLoadProfile3P;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LoadProfile3PDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LoadProfile3PDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LoadProfile3P"] != null)) {
                    base.Tables.Add(new LoadProfile3PDataTable(ds.Tables["LoadProfile3P"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LoadProfile3PDataTable LoadProfile3P {
            get {
                return this.tableLoadProfile3P;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LoadProfile3PDataSet cln = ((LoadProfile3PDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LoadProfile3P"] != null)) {
                    base.Tables.Add(new LoadProfile3PDataTable(ds.Tables["LoadProfile3P"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLoadProfile3P = ((LoadProfile3PDataTable)(base.Tables["LoadProfile3P"]));
            if ((initTable == true)) {
                if ((this.tableLoadProfile3P != null)) {
                    this.tableLoadProfile3P.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LoadProfile3PDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LoadProfile3PDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLoadProfile3P = new LoadProfile3PDataTable();
            base.Tables.Add(this.tableLoadProfile3P);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLoadProfile3P() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LoadProfile3PDataSet ds = new LoadProfile3PDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LoadProfile3PRowChangeEventHandler(object sender, LoadProfile3PRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LoadProfile3PDataTable : global::System.Data.TypedTableBase<LoadProfile3PRow> {
            
            private global::System.Data.DataColumn columnLoadProfileId;
            
            private global::System.Data.DataColumn columnMeasurementPointMeterId;
            
            private global::System.Data.DataColumn columnMeterId;
            
            private global::System.Data.DataColumn columnServerTime;
            
            private global::System.Data.DataColumn columnMeterTimeFrom;
            
            private global::System.Data.DataColumn columnMeterTimeTo;
            
            private global::System.Data.DataColumn columnVoltagePhaseA;
            
            private global::System.Data.DataColumn columnVoltagePhaseB;
            
            private global::System.Data.DataColumn columnVoltagePhaseC;
            
            private global::System.Data.DataColumn columnCurrentPhaseA;
            
            private global::System.Data.DataColumn columnCurrentPhaseB;
            
            private global::System.Data.DataColumn columnCurrentPhaseC;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseA;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseB;
            
            private global::System.Data.DataColumn columnPhaseAnglePhaseC;
            
            private global::System.Data.DataColumn columnActivePowerPhaseA;
            
            private global::System.Data.DataColumn columnActivePowerPhaseB;
            
            private global::System.Data.DataColumn columnActivePowerPhaseC;
            
            private global::System.Data.DataColumn columnActivePowerPhaseTotal;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseA;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseB;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseC;
            
            private global::System.Data.DataColumn columnReactivePowerPhaseTotal;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseA;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseB;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseC;
            
            private global::System.Data.DataColumn columnApparentPowerPhaseTotal;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseA;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseB;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseC;
            
            private global::System.Data.DataColumn columnPowerFactorPhaseTotal;
            
            private global::System.Data.DataColumn columnEnergyPlusARate1;
            
            private global::System.Data.DataColumn columnEnergyPlusARate2;
            
            private global::System.Data.DataColumn columnEnergyPlusARate3;
            
            private global::System.Data.DataColumn columnEnergySubARate1;
            
            private global::System.Data.DataColumn columnEnergySubARate2;
            
            private global::System.Data.DataColumn columnEnergySubARate3;
            
            private global::System.Data.DataColumn columnQ1;
            
            private global::System.Data.DataColumn columnQ3;
            
            private global::System.Data.DataColumn columnImportWh;
            
            private global::System.Data.DataColumn columnExportWh;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate1;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate2;
            
            private global::System.Data.DataColumn columnReactiveEnergyPlusARate3;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate1;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate2;
            
            private global::System.Data.DataColumn columnReactiveEnergySubARate3;
            
            private global::System.Data.DataColumn columnPowerAvgPos;
            
            private global::System.Data.DataColumn columnPowerAvgNeg;
            
            private global::System.Data.DataColumn columnReactivePowerAvgPos;
            
            private global::System.Data.DataColumn columnReactivePowerAvgNeg;
            
            private global::System.Data.DataColumn columnLastAvgPowerFactor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PDataTable() {
                this.TableName = "LoadProfile3P";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LoadProfile3PDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LoadProfile3PDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoadProfileIdColumn {
                get {
                    return this.columnLoadProfileId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeasurementPointMeterIdColumn {
                get {
                    return this.columnMeasurementPointMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterIdColumn {
                get {
                    return this.columnMeterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServerTimeColumn {
                get {
                    return this.columnServerTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterTimeFromColumn {
                get {
                    return this.columnMeterTimeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterTimeToColumn {
                get {
                    return this.columnMeterTimeTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseAColumn {
                get {
                    return this.columnVoltagePhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseBColumn {
                get {
                    return this.columnVoltagePhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltagePhaseCColumn {
                get {
                    return this.columnVoltagePhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseAColumn {
                get {
                    return this.columnCurrentPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseBColumn {
                get {
                    return this.columnCurrentPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPhaseCColumn {
                get {
                    return this.columnCurrentPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseAColumn {
                get {
                    return this.columnPhaseAnglePhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseBColumn {
                get {
                    return this.columnPhaseAnglePhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhaseAnglePhaseCColumn {
                get {
                    return this.columnPhaseAnglePhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseAColumn {
                get {
                    return this.columnActivePowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseBColumn {
                get {
                    return this.columnActivePowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseCColumn {
                get {
                    return this.columnActivePowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePowerPhaseTotalColumn {
                get {
                    return this.columnActivePowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseAColumn {
                get {
                    return this.columnReactivePowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseBColumn {
                get {
                    return this.columnReactivePowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseCColumn {
                get {
                    return this.columnReactivePowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerPhaseTotalColumn {
                get {
                    return this.columnReactivePowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseAColumn {
                get {
                    return this.columnApparentPowerPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseBColumn {
                get {
                    return this.columnApparentPowerPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseCColumn {
                get {
                    return this.columnApparentPowerPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApparentPowerPhaseTotalColumn {
                get {
                    return this.columnApparentPowerPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseAColumn {
                get {
                    return this.columnPowerFactorPhaseA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseBColumn {
                get {
                    return this.columnPowerFactorPhaseB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseCColumn {
                get {
                    return this.columnPowerFactorPhaseC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerFactorPhaseTotalColumn {
                get {
                    return this.columnPowerFactorPhaseTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate1Column {
                get {
                    return this.columnEnergyPlusARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate2Column {
                get {
                    return this.columnEnergyPlusARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyPlusARate3Column {
                get {
                    return this.columnEnergyPlusARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate1Column {
                get {
                    return this.columnEnergySubARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate2Column {
                get {
                    return this.columnEnergySubARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergySubARate3Column {
                get {
                    return this.columnEnergySubARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q1Column {
                get {
                    return this.columnQ1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Q3Column {
                get {
                    return this.columnQ3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportWhColumn {
                get {
                    return this.columnImportWh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportWhColumn {
                get {
                    return this.columnExportWh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate1Column {
                get {
                    return this.columnReactiveEnergyPlusARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate2Column {
                get {
                    return this.columnReactiveEnergyPlusARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergyPlusARate3Column {
                get {
                    return this.columnReactiveEnergyPlusARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate1Column {
                get {
                    return this.columnReactiveEnergySubARate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate2Column {
                get {
                    return this.columnReactiveEnergySubARate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactiveEnergySubARate3Column {
                get {
                    return this.columnReactiveEnergySubARate3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerAvgPosColumn {
                get {
                    return this.columnPowerAvgPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerAvgNegColumn {
                get {
                    return this.columnPowerAvgNeg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerAvgPosColumn {
                get {
                    return this.columnReactivePowerAvgPos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReactivePowerAvgNegColumn {
                get {
                    return this.columnReactivePowerAvgNeg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastAvgPowerFactorColumn {
                get {
                    return this.columnLastAvgPowerFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRow this[int index] {
                get {
                    return ((LoadProfile3PRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LoadProfile3PRowChangeEventHandler LoadProfile3PRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LoadProfile3PRowChangeEventHandler LoadProfile3PRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LoadProfile3PRowChangeEventHandler LoadProfile3PRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LoadProfile3PRowChangeEventHandler LoadProfile3PRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLoadProfile3PRow(LoadProfile3PRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRow AddLoadProfile3PRow(
                        string LoadProfileId, 
                        long MeasurementPointMeterId, 
                        long MeterId, 
                        System.DateTime ServerTime, 
                        System.DateTime MeterTimeFrom, 
                        System.DateTime MeterTimeTo, 
                        decimal VoltagePhaseA, 
                        decimal VoltagePhaseB, 
                        decimal VoltagePhaseC, 
                        decimal CurrentPhaseA, 
                        decimal CurrentPhaseB, 
                        decimal CurrentPhaseC, 
                        decimal PhaseAnglePhaseA, 
                        decimal PhaseAnglePhaseB, 
                        decimal PhaseAnglePhaseC, 
                        decimal ActivePowerPhaseA, 
                        decimal ActivePowerPhaseB, 
                        decimal ActivePowerPhaseC, 
                        decimal ActivePowerPhaseTotal, 
                        decimal ReactivePowerPhaseA, 
                        decimal ReactivePowerPhaseB, 
                        decimal ReactivePowerPhaseC, 
                        decimal ReactivePowerPhaseTotal, 
                        decimal ApparentPowerPhaseA, 
                        decimal ApparentPowerPhaseB, 
                        decimal ApparentPowerPhaseC, 
                        decimal ApparentPowerPhaseTotal, 
                        decimal PowerFactorPhaseA, 
                        decimal PowerFactorPhaseB, 
                        decimal PowerFactorPhaseC, 
                        decimal PowerFactorPhaseTotal, 
                        decimal EnergyPlusARate1, 
                        decimal EnergyPlusARate2, 
                        decimal EnergyPlusARate3, 
                        decimal EnergySubARate1, 
                        decimal EnergySubARate2, 
                        decimal EnergySubARate3, 
                        decimal Q1, 
                        decimal Q3, 
                        decimal ImportWh, 
                        decimal ExportWh, 
                        decimal ReactiveEnergyPlusARate1, 
                        decimal ReactiveEnergyPlusARate2, 
                        decimal ReactiveEnergyPlusARate3, 
                        decimal ReactiveEnergySubARate1, 
                        decimal ReactiveEnergySubARate2, 
                        decimal ReactiveEnergySubARate3, 
                        decimal PowerAvgPos, 
                        decimal PowerAvgNeg, 
                        decimal ReactivePowerAvgPos, 
                        decimal ReactivePowerAvgNeg, 
                        decimal LastAvgPowerFactor) {
                LoadProfile3PRow rowLoadProfile3PRow = ((LoadProfile3PRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LoadProfileId,
                        MeasurementPointMeterId,
                        MeterId,
                        ServerTime,
                        MeterTimeFrom,
                        MeterTimeTo,
                        VoltagePhaseA,
                        VoltagePhaseB,
                        VoltagePhaseC,
                        CurrentPhaseA,
                        CurrentPhaseB,
                        CurrentPhaseC,
                        PhaseAnglePhaseA,
                        PhaseAnglePhaseB,
                        PhaseAnglePhaseC,
                        ActivePowerPhaseA,
                        ActivePowerPhaseB,
                        ActivePowerPhaseC,
                        ActivePowerPhaseTotal,
                        ReactivePowerPhaseA,
                        ReactivePowerPhaseB,
                        ReactivePowerPhaseC,
                        ReactivePowerPhaseTotal,
                        ApparentPowerPhaseA,
                        ApparentPowerPhaseB,
                        ApparentPowerPhaseC,
                        ApparentPowerPhaseTotal,
                        PowerFactorPhaseA,
                        PowerFactorPhaseB,
                        PowerFactorPhaseC,
                        PowerFactorPhaseTotal,
                        EnergyPlusARate1,
                        EnergyPlusARate2,
                        EnergyPlusARate3,
                        EnergySubARate1,
                        EnergySubARate2,
                        EnergySubARate3,
                        Q1,
                        Q3,
                        ImportWh,
                        ExportWh,
                        ReactiveEnergyPlusARate1,
                        ReactiveEnergyPlusARate2,
                        ReactiveEnergyPlusARate3,
                        ReactiveEnergySubARate1,
                        ReactiveEnergySubARate2,
                        ReactiveEnergySubARate3,
                        PowerAvgPos,
                        PowerAvgNeg,
                        ReactivePowerAvgPos,
                        ReactivePowerAvgNeg,
                        LastAvgPowerFactor};
                rowLoadProfile3PRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLoadProfile3PRow);
                return rowLoadProfile3PRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRow FindByLoadProfileId(string LoadProfileId) {
                return ((LoadProfile3PRow)(this.Rows.Find(new object[] {
                            LoadProfileId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LoadProfile3PDataTable cln = ((LoadProfile3PDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LoadProfile3PDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLoadProfileId = base.Columns["LoadProfileId"];
                this.columnMeasurementPointMeterId = base.Columns["MeasurementPointMeterId"];
                this.columnMeterId = base.Columns["MeterId"];
                this.columnServerTime = base.Columns["ServerTime"];
                this.columnMeterTimeFrom = base.Columns["MeterTimeFrom"];
                this.columnMeterTimeTo = base.Columns["MeterTimeTo"];
                this.columnVoltagePhaseA = base.Columns["VoltagePhaseA"];
                this.columnVoltagePhaseB = base.Columns["VoltagePhaseB"];
                this.columnVoltagePhaseC = base.Columns["VoltagePhaseC"];
                this.columnCurrentPhaseA = base.Columns["CurrentPhaseA"];
                this.columnCurrentPhaseB = base.Columns["CurrentPhaseB"];
                this.columnCurrentPhaseC = base.Columns["CurrentPhaseC"];
                this.columnPhaseAnglePhaseA = base.Columns["PhaseAnglePhaseA"];
                this.columnPhaseAnglePhaseB = base.Columns["PhaseAnglePhaseB"];
                this.columnPhaseAnglePhaseC = base.Columns["PhaseAnglePhaseC"];
                this.columnActivePowerPhaseA = base.Columns["ActivePowerPhaseA"];
                this.columnActivePowerPhaseB = base.Columns["ActivePowerPhaseB"];
                this.columnActivePowerPhaseC = base.Columns["ActivePowerPhaseC"];
                this.columnActivePowerPhaseTotal = base.Columns["ActivePowerPhaseTotal"];
                this.columnReactivePowerPhaseA = base.Columns["ReactivePowerPhaseA"];
                this.columnReactivePowerPhaseB = base.Columns["ReactivePowerPhaseB"];
                this.columnReactivePowerPhaseC = base.Columns["ReactivePowerPhaseC"];
                this.columnReactivePowerPhaseTotal = base.Columns["ReactivePowerPhaseTotal"];
                this.columnApparentPowerPhaseA = base.Columns["ApparentPowerPhaseA"];
                this.columnApparentPowerPhaseB = base.Columns["ApparentPowerPhaseB"];
                this.columnApparentPowerPhaseC = base.Columns["ApparentPowerPhaseC"];
                this.columnApparentPowerPhaseTotal = base.Columns["ApparentPowerPhaseTotal"];
                this.columnPowerFactorPhaseA = base.Columns["PowerFactorPhaseA"];
                this.columnPowerFactorPhaseB = base.Columns["PowerFactorPhaseB"];
                this.columnPowerFactorPhaseC = base.Columns["PowerFactorPhaseC"];
                this.columnPowerFactorPhaseTotal = base.Columns["PowerFactorPhaseTotal"];
                this.columnEnergyPlusARate1 = base.Columns["EnergyPlusARate1"];
                this.columnEnergyPlusARate2 = base.Columns["EnergyPlusARate2"];
                this.columnEnergyPlusARate3 = base.Columns["EnergyPlusARate3"];
                this.columnEnergySubARate1 = base.Columns["EnergySubARate1"];
                this.columnEnergySubARate2 = base.Columns["EnergySubARate2"];
                this.columnEnergySubARate3 = base.Columns["EnergySubARate3"];
                this.columnQ1 = base.Columns["Q1"];
                this.columnQ3 = base.Columns["Q3"];
                this.columnImportWh = base.Columns["ImportWh"];
                this.columnExportWh = base.Columns["ExportWh"];
                this.columnReactiveEnergyPlusARate1 = base.Columns["ReactiveEnergyPlusARate1"];
                this.columnReactiveEnergyPlusARate2 = base.Columns["ReactiveEnergyPlusARate2"];
                this.columnReactiveEnergyPlusARate3 = base.Columns["ReactiveEnergyPlusARate3"];
                this.columnReactiveEnergySubARate1 = base.Columns["ReactiveEnergySubARate1"];
                this.columnReactiveEnergySubARate2 = base.Columns["ReactiveEnergySubARate2"];
                this.columnReactiveEnergySubARate3 = base.Columns["ReactiveEnergySubARate3"];
                this.columnPowerAvgPos = base.Columns["PowerAvgPos"];
                this.columnPowerAvgNeg = base.Columns["PowerAvgNeg"];
                this.columnReactivePowerAvgPos = base.Columns["ReactivePowerAvgPos"];
                this.columnReactivePowerAvgNeg = base.Columns["ReactivePowerAvgNeg"];
                this.columnLastAvgPowerFactor = base.Columns["LastAvgPowerFactor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLoadProfileId = new global::System.Data.DataColumn("LoadProfileId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadProfileId);
                this.columnMeasurementPointMeterId = new global::System.Data.DataColumn("MeasurementPointMeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementPointMeterId);
                this.columnMeterId = new global::System.Data.DataColumn("MeterId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterId);
                this.columnServerTime = new global::System.Data.DataColumn("ServerTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServerTime);
                this.columnMeterTimeFrom = new global::System.Data.DataColumn("MeterTimeFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterTimeFrom);
                this.columnMeterTimeTo = new global::System.Data.DataColumn("MeterTimeTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterTimeTo);
                this.columnVoltagePhaseA = new global::System.Data.DataColumn("VoltagePhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseA);
                this.columnVoltagePhaseB = new global::System.Data.DataColumn("VoltagePhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseB);
                this.columnVoltagePhaseC = new global::System.Data.DataColumn("VoltagePhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltagePhaseC);
                this.columnCurrentPhaseA = new global::System.Data.DataColumn("CurrentPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseA);
                this.columnCurrentPhaseB = new global::System.Data.DataColumn("CurrentPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseB);
                this.columnCurrentPhaseC = new global::System.Data.DataColumn("CurrentPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPhaseC);
                this.columnPhaseAnglePhaseA = new global::System.Data.DataColumn("PhaseAnglePhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseA);
                this.columnPhaseAnglePhaseB = new global::System.Data.DataColumn("PhaseAnglePhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseB);
                this.columnPhaseAnglePhaseC = new global::System.Data.DataColumn("PhaseAnglePhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseAnglePhaseC);
                this.columnActivePowerPhaseA = new global::System.Data.DataColumn("ActivePowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseA);
                this.columnActivePowerPhaseB = new global::System.Data.DataColumn("ActivePowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseB);
                this.columnActivePowerPhaseC = new global::System.Data.DataColumn("ActivePowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseC);
                this.columnActivePowerPhaseTotal = new global::System.Data.DataColumn("ActivePowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePowerPhaseTotal);
                this.columnReactivePowerPhaseA = new global::System.Data.DataColumn("ReactivePowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseA);
                this.columnReactivePowerPhaseB = new global::System.Data.DataColumn("ReactivePowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseB);
                this.columnReactivePowerPhaseC = new global::System.Data.DataColumn("ReactivePowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseC);
                this.columnReactivePowerPhaseTotal = new global::System.Data.DataColumn("ReactivePowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerPhaseTotal);
                this.columnApparentPowerPhaseA = new global::System.Data.DataColumn("ApparentPowerPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseA);
                this.columnApparentPowerPhaseB = new global::System.Data.DataColumn("ApparentPowerPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseB);
                this.columnApparentPowerPhaseC = new global::System.Data.DataColumn("ApparentPowerPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseC);
                this.columnApparentPowerPhaseTotal = new global::System.Data.DataColumn("ApparentPowerPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApparentPowerPhaseTotal);
                this.columnPowerFactorPhaseA = new global::System.Data.DataColumn("PowerFactorPhaseA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseA);
                this.columnPowerFactorPhaseB = new global::System.Data.DataColumn("PowerFactorPhaseB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseB);
                this.columnPowerFactorPhaseC = new global::System.Data.DataColumn("PowerFactorPhaseC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseC);
                this.columnPowerFactorPhaseTotal = new global::System.Data.DataColumn("PowerFactorPhaseTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerFactorPhaseTotal);
                this.columnEnergyPlusARate1 = new global::System.Data.DataColumn("EnergyPlusARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate1);
                this.columnEnergyPlusARate2 = new global::System.Data.DataColumn("EnergyPlusARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate2);
                this.columnEnergyPlusARate3 = new global::System.Data.DataColumn("EnergyPlusARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyPlusARate3);
                this.columnEnergySubARate1 = new global::System.Data.DataColumn("EnergySubARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate1);
                this.columnEnergySubARate2 = new global::System.Data.DataColumn("EnergySubARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate2);
                this.columnEnergySubARate3 = new global::System.Data.DataColumn("EnergySubARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergySubARate3);
                this.columnQ1 = new global::System.Data.DataColumn("Q1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ1);
                this.columnQ3 = new global::System.Data.DataColumn("Q3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ3);
                this.columnImportWh = new global::System.Data.DataColumn("ImportWh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportWh);
                this.columnExportWh = new global::System.Data.DataColumn("ExportWh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportWh);
                this.columnReactiveEnergyPlusARate1 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate1);
                this.columnReactiveEnergyPlusARate2 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate2);
                this.columnReactiveEnergyPlusARate3 = new global::System.Data.DataColumn("ReactiveEnergyPlusARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergyPlusARate3);
                this.columnReactiveEnergySubARate1 = new global::System.Data.DataColumn("ReactiveEnergySubARate1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate1);
                this.columnReactiveEnergySubARate2 = new global::System.Data.DataColumn("ReactiveEnergySubARate2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate2);
                this.columnReactiveEnergySubARate3 = new global::System.Data.DataColumn("ReactiveEnergySubARate3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactiveEnergySubARate3);
                this.columnPowerAvgPos = new global::System.Data.DataColumn("PowerAvgPos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerAvgPos);
                this.columnPowerAvgNeg = new global::System.Data.DataColumn("PowerAvgNeg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerAvgNeg);
                this.columnReactivePowerAvgPos = new global::System.Data.DataColumn("ReactivePowerAvgPos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerAvgPos);
                this.columnReactivePowerAvgNeg = new global::System.Data.DataColumn("ReactivePowerAvgNeg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReactivePowerAvgNeg);
                this.columnLastAvgPowerFactor = new global::System.Data.DataColumn("LastAvgPowerFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastAvgPowerFactor);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLoadProfileId}, true));
                this.columnLoadProfileId.AllowDBNull = false;
                this.columnLoadProfileId.Unique = true;
                this.columnLoadProfileId.MaxLength = 20;
                this.columnMeasurementPointMeterId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRow NewLoadProfile3PRow() {
                return ((LoadProfile3PRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LoadProfile3PRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LoadProfile3PRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LoadProfile3PRowChanged != null)) {
                    this.LoadProfile3PRowChanged(this, new LoadProfile3PRowChangeEvent(((LoadProfile3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LoadProfile3PRowChanging != null)) {
                    this.LoadProfile3PRowChanging(this, new LoadProfile3PRowChangeEvent(((LoadProfile3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LoadProfile3PRowDeleted != null)) {
                    this.LoadProfile3PRowDeleted(this, new LoadProfile3PRowChangeEvent(((LoadProfile3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LoadProfile3PRowDeleting != null)) {
                    this.LoadProfile3PRowDeleting(this, new LoadProfile3PRowChangeEvent(((LoadProfile3PRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLoadProfile3PRow(LoadProfile3PRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LoadProfile3PDataSet ds = new LoadProfile3PDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LoadProfile3PDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LoadProfile3PRow : global::System.Data.DataRow {
            
            private LoadProfile3PDataTable tableLoadProfile3P;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LoadProfile3PRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLoadProfile3P = ((LoadProfile3PDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoadProfileId {
                get {
                    return ((string)(this[this.tableLoadProfile3P.LoadProfileIdColumn]));
                }
                set {
                    this[this.tableLoadProfile3P.LoadProfileIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeasurementPointMeterId {
                get {
                    return ((long)(this[this.tableLoadProfile3P.MeasurementPointMeterIdColumn]));
                }
                set {
                    this[this.tableLoadProfile3P.MeasurementPointMeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MeterId {
                get {
                    try {
                        return ((long)(this[this.tableLoadProfile3P.MeterIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterId\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.MeterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ServerTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLoadProfile3P.ServerTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServerTime\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ServerTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterTimeFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLoadProfile3P.MeterTimeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterTimeFrom\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.MeterTimeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterTimeTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLoadProfile3P.MeterTimeToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeterTimeTo\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.MeterTimeToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.VoltagePhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.VoltagePhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.VoltagePhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.VoltagePhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VoltagePhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.VoltagePhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltagePhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.VoltagePhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.CurrentPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.CurrentPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.CurrentPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.CurrentPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.CurrentPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.CurrentPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PhaseAnglePhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PhaseAnglePhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PhaseAnglePhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PhaseAnglePhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PhaseAnglePhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PhaseAnglePhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseAnglePhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PhaseAnglePhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ActivePowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ActivePowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ActivePowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ActivePowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ActivePowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ActivePowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActivePowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ActivePowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivePowerPhaseTotal\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ActivePowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerPhaseTotal\' in table \'LoadProfile3P\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ApparentPowerPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ApparentPowerPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ApparentPowerPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ApparentPowerPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ApparentPowerPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ApparentPowerPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApparentPowerPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ApparentPowerPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApparentPowerPhaseTotal\' in table \'LoadProfile3P\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ApparentPowerPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseA {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerFactorPhaseAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseA\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerFactorPhaseAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseB {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerFactorPhaseBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseB\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerFactorPhaseBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseC {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerFactorPhaseCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseC\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerFactorPhaseCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerFactorPhaseTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerFactorPhaseTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerFactorPhaseTotal\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerFactorPhaseTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergyPlusARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate1\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergyPlusARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergyPlusARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate2\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergyPlusARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyPlusARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergyPlusARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyPlusARate3\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergyPlusARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergySubARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate1\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergySubARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergySubARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate2\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergySubARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergySubARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.EnergySubARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergySubARate3\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.EnergySubARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q1 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.Q1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q1\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.Q1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Q3 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.Q3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Q3\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.Q3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ImportWh {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ImportWhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportWh\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ImportWhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExportWh {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ExportWhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportWh\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ExportWhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergyPlusARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate1\' in table \'LoadProfile3P\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergyPlusARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergyPlusARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate2\' in table \'LoadProfile3P\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergyPlusARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergyPlusARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergyPlusARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergyPlusARate3\' in table \'LoadProfile3P\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergyPlusARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergySubARate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate1\' in table \'LoadProfile3P\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergySubARate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergySubARate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate2\' in table \'LoadProfile3P\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergySubARate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactiveEnergySubARate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactiveEnergySubARate3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactiveEnergySubARate3\' in table \'LoadProfile3P\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactiveEnergySubARate3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerAvgPos {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerAvgPosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerAvgPos\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerAvgPosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PowerAvgNeg {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.PowerAvgNegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PowerAvgNeg\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.PowerAvgNegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerAvgPos {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerAvgPosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerAvgPos\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerAvgPosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReactivePowerAvgNeg {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.ReactivePowerAvgNegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReactivePowerAvgNeg\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.ReactivePowerAvgNegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LastAvgPowerFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableLoadProfile3P.LastAvgPowerFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastAvgPowerFactor\' in table \'LoadProfile3P\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLoadProfile3P.LastAvgPowerFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterIdNull() {
                return this.IsNull(this.tableLoadProfile3P.MeterIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterIdNull() {
                this[this.tableLoadProfile3P.MeterIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServerTimeNull() {
                return this.IsNull(this.tableLoadProfile3P.ServerTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServerTimeNull() {
                this[this.tableLoadProfile3P.ServerTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterTimeFromNull() {
                return this.IsNull(this.tableLoadProfile3P.MeterTimeFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterTimeFromNull() {
                this[this.tableLoadProfile3P.MeterTimeFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeterTimeToNull() {
                return this.IsNull(this.tableLoadProfile3P.MeterTimeToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeterTimeToNull() {
                this[this.tableLoadProfile3P.MeterTimeToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.VoltagePhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseANull() {
                this[this.tableLoadProfile3P.VoltagePhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.VoltagePhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseBNull() {
                this[this.tableLoadProfile3P.VoltagePhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltagePhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.VoltagePhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltagePhaseCNull() {
                this[this.tableLoadProfile3P.VoltagePhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.CurrentPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseANull() {
                this[this.tableLoadProfile3P.CurrentPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.CurrentPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseBNull() {
                this[this.tableLoadProfile3P.CurrentPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.CurrentPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPhaseCNull() {
                this[this.tableLoadProfile3P.CurrentPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.PhaseAnglePhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseANull() {
                this[this.tableLoadProfile3P.PhaseAnglePhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.PhaseAnglePhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseBNull() {
                this[this.tableLoadProfile3P.PhaseAnglePhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhaseAnglePhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.PhaseAnglePhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhaseAnglePhaseCNull() {
                this[this.tableLoadProfile3P.PhaseAnglePhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.ActivePowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseANull() {
                this[this.tableLoadProfile3P.ActivePowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.ActivePowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseBNull() {
                this[this.tableLoadProfile3P.ActivePowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.ActivePowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseCNull() {
                this[this.tableLoadProfile3P.ActivePowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePowerPhaseTotalNull() {
                return this.IsNull(this.tableLoadProfile3P.ActivePowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePowerPhaseTotalNull() {
                this[this.tableLoadProfile3P.ActivePowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseANull() {
                this[this.tableLoadProfile3P.ReactivePowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseBNull() {
                this[this.tableLoadProfile3P.ReactivePowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseCNull() {
                this[this.tableLoadProfile3P.ReactivePowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerPhaseTotalNull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerPhaseTotalNull() {
                this[this.tableLoadProfile3P.ReactivePowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.ApparentPowerPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseANull() {
                this[this.tableLoadProfile3P.ApparentPowerPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.ApparentPowerPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseBNull() {
                this[this.tableLoadProfile3P.ApparentPowerPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.ApparentPowerPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseCNull() {
                this[this.tableLoadProfile3P.ApparentPowerPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApparentPowerPhaseTotalNull() {
                return this.IsNull(this.tableLoadProfile3P.ApparentPowerPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApparentPowerPhaseTotalNull() {
                this[this.tableLoadProfile3P.ApparentPowerPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseANull() {
                return this.IsNull(this.tableLoadProfile3P.PowerFactorPhaseAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseANull() {
                this[this.tableLoadProfile3P.PowerFactorPhaseAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseBNull() {
                return this.IsNull(this.tableLoadProfile3P.PowerFactorPhaseBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseBNull() {
                this[this.tableLoadProfile3P.PowerFactorPhaseBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseCNull() {
                return this.IsNull(this.tableLoadProfile3P.PowerFactorPhaseCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseCNull() {
                this[this.tableLoadProfile3P.PowerFactorPhaseCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerFactorPhaseTotalNull() {
                return this.IsNull(this.tableLoadProfile3P.PowerFactorPhaseTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerFactorPhaseTotalNull() {
                this[this.tableLoadProfile3P.PowerFactorPhaseTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate1Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergyPlusARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate1Null() {
                this[this.tableLoadProfile3P.EnergyPlusARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate2Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergyPlusARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate2Null() {
                this[this.tableLoadProfile3P.EnergyPlusARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyPlusARate3Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergyPlusARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyPlusARate3Null() {
                this[this.tableLoadProfile3P.EnergyPlusARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate1Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergySubARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate1Null() {
                this[this.tableLoadProfile3P.EnergySubARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate2Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergySubARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate2Null() {
                this[this.tableLoadProfile3P.EnergySubARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergySubARate3Null() {
                return this.IsNull(this.tableLoadProfile3P.EnergySubARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergySubARate3Null() {
                this[this.tableLoadProfile3P.EnergySubARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ1Null() {
                return this.IsNull(this.tableLoadProfile3P.Q1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ1Null() {
                this[this.tableLoadProfile3P.Q1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQ3Null() {
                return this.IsNull(this.tableLoadProfile3P.Q3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQ3Null() {
                this[this.tableLoadProfile3P.Q3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportWhNull() {
                return this.IsNull(this.tableLoadProfile3P.ImportWhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportWhNull() {
                this[this.tableLoadProfile3P.ImportWhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportWhNull() {
                return this.IsNull(this.tableLoadProfile3P.ExportWhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportWhNull() {
                this[this.tableLoadProfile3P.ExportWhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate1Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergyPlusARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate1Null() {
                this[this.tableLoadProfile3P.ReactiveEnergyPlusARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate2Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergyPlusARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate2Null() {
                this[this.tableLoadProfile3P.ReactiveEnergyPlusARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergyPlusARate3Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergyPlusARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergyPlusARate3Null() {
                this[this.tableLoadProfile3P.ReactiveEnergyPlusARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate1Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergySubARate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate1Null() {
                this[this.tableLoadProfile3P.ReactiveEnergySubARate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate2Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergySubARate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate2Null() {
                this[this.tableLoadProfile3P.ReactiveEnergySubARate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactiveEnergySubARate3Null() {
                return this.IsNull(this.tableLoadProfile3P.ReactiveEnergySubARate3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactiveEnergySubARate3Null() {
                this[this.tableLoadProfile3P.ReactiveEnergySubARate3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerAvgPosNull() {
                return this.IsNull(this.tableLoadProfile3P.PowerAvgPosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerAvgPosNull() {
                this[this.tableLoadProfile3P.PowerAvgPosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerAvgNegNull() {
                return this.IsNull(this.tableLoadProfile3P.PowerAvgNegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerAvgNegNull() {
                this[this.tableLoadProfile3P.PowerAvgNegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerAvgPosNull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerAvgPosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerAvgPosNull() {
                this[this.tableLoadProfile3P.ReactivePowerAvgPosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReactivePowerAvgNegNull() {
                return this.IsNull(this.tableLoadProfile3P.ReactivePowerAvgNegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReactivePowerAvgNegNull() {
                this[this.tableLoadProfile3P.ReactivePowerAvgNegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastAvgPowerFactorNull() {
                return this.IsNull(this.tableLoadProfile3P.LastAvgPowerFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastAvgPowerFactorNull() {
                this[this.tableLoadProfile3P.LastAvgPowerFactorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LoadProfile3PRowChangeEvent : global::System.EventArgs {
            
            private LoadProfile3PRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRowChangeEvent(LoadProfile3PRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LoadProfile3PRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace OperationDTO.AmiSystemDataSet.LoadProfile3PDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LoadProfile3PTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LoadProfile3PTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LoadProfile3P";
            tableMapping.ColumnMappings.Add("LoadProfileId", "LoadProfileId");
            tableMapping.ColumnMappings.Add("MeasurementPointMeterId", "MeasurementPointMeterId");
            tableMapping.ColumnMappings.Add("MeterId", "MeterId");
            tableMapping.ColumnMappings.Add("ServerTime", "ServerTime");
            tableMapping.ColumnMappings.Add("MeterTimeFrom", "MeterTimeFrom");
            tableMapping.ColumnMappings.Add("MeterTimeTo", "MeterTimeTo");
            tableMapping.ColumnMappings.Add("VoltagePhaseA", "VoltagePhaseA");
            tableMapping.ColumnMappings.Add("VoltagePhaseB", "VoltagePhaseB");
            tableMapping.ColumnMappings.Add("VoltagePhaseC", "VoltagePhaseC");
            tableMapping.ColumnMappings.Add("CurrentPhaseA", "CurrentPhaseA");
            tableMapping.ColumnMappings.Add("CurrentPhaseB", "CurrentPhaseB");
            tableMapping.ColumnMappings.Add("CurrentPhaseC", "CurrentPhaseC");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseA", "PhaseAnglePhaseA");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseB", "PhaseAnglePhaseB");
            tableMapping.ColumnMappings.Add("PhaseAnglePhaseC", "PhaseAnglePhaseC");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseA", "ActivePowerPhaseA");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseB", "ActivePowerPhaseB");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseC", "ActivePowerPhaseC");
            tableMapping.ColumnMappings.Add("ActivePowerPhaseTotal", "ActivePowerPhaseTotal");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseA", "ReactivePowerPhaseA");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseB", "ReactivePowerPhaseB");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseC", "ReactivePowerPhaseC");
            tableMapping.ColumnMappings.Add("ReactivePowerPhaseTotal", "ReactivePowerPhaseTotal");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseA", "ApparentPowerPhaseA");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseB", "ApparentPowerPhaseB");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseC", "ApparentPowerPhaseC");
            tableMapping.ColumnMappings.Add("ApparentPowerPhaseTotal", "ApparentPowerPhaseTotal");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseA", "PowerFactorPhaseA");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseB", "PowerFactorPhaseB");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseC", "PowerFactorPhaseC");
            tableMapping.ColumnMappings.Add("PowerFactorPhaseTotal", "PowerFactorPhaseTotal");
            tableMapping.ColumnMappings.Add("EnergyPlusARate1", "EnergyPlusARate1");
            tableMapping.ColumnMappings.Add("EnergyPlusARate2", "EnergyPlusARate2");
            tableMapping.ColumnMappings.Add("EnergyPlusARate3", "EnergyPlusARate3");
            tableMapping.ColumnMappings.Add("EnergySubARate1", "EnergySubARate1");
            tableMapping.ColumnMappings.Add("EnergySubARate2", "EnergySubARate2");
            tableMapping.ColumnMappings.Add("EnergySubARate3", "EnergySubARate3");
            tableMapping.ColumnMappings.Add("Q1", "Q1");
            tableMapping.ColumnMappings.Add("Q3", "Q3");
            tableMapping.ColumnMappings.Add("ImportWh", "ImportWh");
            tableMapping.ColumnMappings.Add("ExportWh", "ExportWh");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate1", "ReactiveEnergyPlusARate1");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate2", "ReactiveEnergyPlusARate2");
            tableMapping.ColumnMappings.Add("ReactiveEnergyPlusARate3", "ReactiveEnergyPlusARate3");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate1", "ReactiveEnergySubARate1");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate2", "ReactiveEnergySubARate2");
            tableMapping.ColumnMappings.Add("ReactiveEnergySubARate3", "ReactiveEnergySubARate3");
            tableMapping.ColumnMappings.Add("PowerAvgPos", "PowerAvgPos");
            tableMapping.ColumnMappings.Add("PowerAvgNeg", "PowerAvgNeg");
            tableMapping.ColumnMappings.Add("ReactivePowerAvgPos", "ReactivePowerAvgPos");
            tableMapping.ColumnMappings.Add("ReactivePowerAvgNeg", "ReactivePowerAvgNeg");
            tableMapping.ColumnMappings.Add("LastAvgPowerFactor", "LastAvgPowerFactor");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LoadProfile3P] WHERE (([LoadProfileId] = @Original_LoadProfile" +
                "Id) AND ([MeasurementPointMeterId] = @Original_MeasurementPointMeterId) AND ((@I" +
                "sNull_MeterId = 1 AND [MeterId] IS NULL) OR ([MeterId] = @Original_MeterId)) AND" +
                " ((@IsNull_ServerTime = 1 AND [ServerTime] IS NULL) OR ([ServerTime] = @Original" +
                "_ServerTime)) AND ((@IsNull_MeterTimeFrom = 1 AND [MeterTimeFrom] IS NULL) OR ([" +
                "MeterTimeFrom] = @Original_MeterTimeFrom)) AND ((@IsNull_MeterTimeTo = 1 AND [Me" +
                "terTimeTo] IS NULL) OR ([MeterTimeTo] = @Original_MeterTimeTo)) AND ((@IsNull_Vo" +
                "ltagePhaseA = 1 AND [VoltagePhaseA] IS NULL) OR ([VoltagePhaseA] = @Original_Vol" +
                "tagePhaseA)) AND ((@IsNull_VoltagePhaseB = 1 AND [VoltagePhaseB] IS NULL) OR ([V" +
                "oltagePhaseB] = @Original_VoltagePhaseB)) AND ((@IsNull_VoltagePhaseC = 1 AND [V" +
                "oltagePhaseC] IS NULL) OR ([VoltagePhaseC] = @Original_VoltagePhaseC)) AND ((@Is" +
                "Null_CurrentPhaseA = 1 AND [CurrentPhaseA] IS NULL) OR ([CurrentPhaseA] = @Origi" +
                "nal_CurrentPhaseA)) AND ((@IsNull_CurrentPhaseB = 1 AND [CurrentPhaseB] IS NULL)" +
                " OR ([CurrentPhaseB] = @Original_CurrentPhaseB)) AND ((@IsNull_CurrentPhaseC = 1" +
                " AND [CurrentPhaseC] IS NULL) OR ([CurrentPhaseC] = @Original_CurrentPhaseC)) AN" +
                "D ((@IsNull_PhaseAnglePhaseA = 1 AND [PhaseAnglePhaseA] IS NULL) OR ([PhaseAngle" +
                "PhaseA] = @Original_PhaseAnglePhaseA)) AND ((@IsNull_PhaseAnglePhaseB = 1 AND [P" +
                "haseAnglePhaseB] IS NULL) OR ([PhaseAnglePhaseB] = @Original_PhaseAnglePhaseB)) " +
                "AND ((@IsNull_PhaseAnglePhaseC = 1 AND [PhaseAnglePhaseC] IS NULL) OR ([PhaseAng" +
                "lePhaseC] = @Original_PhaseAnglePhaseC)) AND ((@IsNull_ActivePowerPhaseA = 1 AND" +
                " [ActivePowerPhaseA] IS NULL) OR ([ActivePowerPhaseA] = @Original_ActivePowerPha" +
                "seA)) AND ((@IsNull_ActivePowerPhaseB = 1 AND [ActivePowerPhaseB] IS NULL) OR ([" +
                "ActivePowerPhaseB] = @Original_ActivePowerPhaseB)) AND ((@IsNull_ActivePowerPhas" +
                "eC = 1 AND [ActivePowerPhaseC] IS NULL) OR ([ActivePowerPhaseC] = @Original_Acti" +
                "vePowerPhaseC)) AND ((@IsNull_ActivePowerPhaseTotal = 1 AND [ActivePowerPhaseTot" +
                "al] IS NULL) OR ([ActivePowerPhaseTotal] = @Original_ActivePowerPhaseTotal)) AND" +
                " ((@IsNull_ReactivePowerPhaseA = 1 AND [ReactivePowerPhaseA] IS NULL) OR ([React" +
                "ivePowerPhaseA] = @Original_ReactivePowerPhaseA)) AND ((@IsNull_ReactivePowerPha" +
                "seB = 1 AND [ReactivePowerPhaseB] IS NULL) OR ([ReactivePowerPhaseB] = @Original" +
                "_ReactivePowerPhaseB)) AND ((@IsNull_ReactivePowerPhaseC = 1 AND [ReactivePowerP" +
                "haseC] IS NULL) OR ([ReactivePowerPhaseC] = @Original_ReactivePowerPhaseC)) AND " +
                "((@IsNull_ReactivePowerPhaseTotal = 1 AND [ReactivePowerPhaseTotal] IS NULL) OR " +
                "([ReactivePowerPhaseTotal] = @Original_ReactivePowerPhaseTotal)) AND ((@IsNull_A" +
                "pparentPowerPhaseA = 1 AND [ApparentPowerPhaseA] IS NULL) OR ([ApparentPowerPhas" +
                "eA] = @Original_ApparentPowerPhaseA)) AND ((@IsNull_ApparentPowerPhaseB = 1 AND " +
                "[ApparentPowerPhaseB] IS NULL) OR ([ApparentPowerPhaseB] = @Original_ApparentPow" +
                "erPhaseB)) AND ((@IsNull_ApparentPowerPhaseC = 1 AND [ApparentPowerPhaseC] IS NU" +
                "LL) OR ([ApparentPowerPhaseC] = @Original_ApparentPowerPhaseC)) AND ((@IsNull_Ap" +
                "parentPowerPhaseTotal = 1 AND [ApparentPowerPhaseTotal] IS NULL) OR ([ApparentPo" +
                "werPhaseTotal] = @Original_ApparentPowerPhaseTotal)) AND ((@IsNull_PowerFactorPh" +
                "aseA = 1 AND [PowerFactorPhaseA] IS NULL) OR ([PowerFactorPhaseA] = @Original_Po" +
                "werFactorPhaseA)) AND ((@IsNull_PowerFactorPhaseB = 1 AND [PowerFactorPhaseB] IS" +
                " NULL) OR ([PowerFactorPhaseB] = @Original_PowerFactorPhaseB)) AND ((@IsNull_Pow" +
                "erFactorPhaseC = 1 AND [PowerFactorPhaseC] IS NULL) OR ([PowerFactorPhaseC] = @O" +
                "riginal_PowerFactorPhaseC)) AND ((@IsNull_PowerFactorPhaseTotal = 1 AND [PowerFa" +
                "ctorPhaseTotal] IS NULL) OR ([PowerFactorPhaseTotal] = @Original_PowerFactorPhas" +
                "eTotal)) AND ((@IsNull_EnergyPlusARate1 = 1 AND [EnergyPlusARate1] IS NULL) OR (" +
                "[EnergyPlusARate1] = @Original_EnergyPlusARate1)) AND ((@IsNull_EnergyPlusARate2" +
                " = 1 AND [EnergyPlusARate2] IS NULL) OR ([EnergyPlusARate2] = @Original_EnergyPl" +
                "usARate2)) AND ((@IsNull_EnergyPlusARate3 = 1 AND [EnergyPlusARate3] IS NULL) OR" +
                " ([EnergyPlusARate3] = @Original_EnergyPlusARate3)) AND ((@IsNull_EnergySubARate" +
                "1 = 1 AND [EnergySubARate1] IS NULL) OR ([EnergySubARate1] = @Original_EnergySub" +
                "ARate1)) AND ((@IsNull_EnergySubARate2 = 1 AND [EnergySubARate2] IS NULL) OR ([E" +
                "nergySubARate2] = @Original_EnergySubARate2)) AND ((@IsNull_EnergySubARate3 = 1 " +
                "AND [EnergySubARate3] IS NULL) OR ([EnergySubARate3] = @Original_EnergySubARate3" +
                ")) AND ((@IsNull_Q1 = 1 AND [Q1] IS NULL) OR ([Q1] = @Original_Q1)) AND ((@IsNul" +
                "l_Q3 = 1 AND [Q3] IS NULL) OR ([Q3] = @Original_Q3)) AND ((@IsNull_ImportWh = 1 " +
                "AND [ImportWh] IS NULL) OR ([ImportWh] = @Original_ImportWh)) AND ((@IsNull_Expo" +
                "rtWh = 1 AND [ExportWh] IS NULL) OR ([ExportWh] = @Original_ExportWh)) AND ((@Is" +
                "Null_ReactiveEnergyPlusARate1 = 1 AND [ReactiveEnergyPlusARate1] IS NULL) OR ([R" +
                "eactiveEnergyPlusARate1] = @Original_ReactiveEnergyPlusARate1)) AND ((@IsNull_Re" +
                "activeEnergyPlusARate2 = 1 AND [ReactiveEnergyPlusARate2] IS NULL) OR ([Reactive" +
                "EnergyPlusARate2] = @Original_ReactiveEnergyPlusARate2)) AND ((@IsNull_ReactiveE" +
                "nergyPlusARate3 = 1 AND [ReactiveEnergyPlusARate3] IS NULL) OR ([ReactiveEnergyP" +
                "lusARate3] = @Original_ReactiveEnergyPlusARate3)) AND ((@IsNull_ReactiveEnergySu" +
                "bARate1 = 1 AND [ReactiveEnergySubARate1] IS NULL) OR ([ReactiveEnergySubARate1]" +
                " = @Original_ReactiveEnergySubARate1)) AND ((@IsNull_ReactiveEnergySubARate2 = 1" +
                " AND [ReactiveEnergySubARate2] IS NULL) OR ([ReactiveEnergySubARate2] = @Origina" +
                "l_ReactiveEnergySubARate2)) AND ((@IsNull_ReactiveEnergySubARate3 = 1 AND [React" +
                "iveEnergySubARate3] IS NULL) OR ([ReactiveEnergySubARate3] = @Original_ReactiveE" +
                "nergySubARate3)) AND ((@IsNull_PowerAvgPos = 1 AND [PowerAvgPos] IS NULL) OR ([P" +
                "owerAvgPos] = @Original_PowerAvgPos)) AND ((@IsNull_PowerAvgNeg = 1 AND [PowerAv" +
                "gNeg] IS NULL) OR ([PowerAvgNeg] = @Original_PowerAvgNeg)) AND ((@IsNull_Reactiv" +
                "ePowerAvgPos = 1 AND [ReactivePowerAvgPos] IS NULL) OR ([ReactivePowerAvgPos] = " +
                "@Original_ReactivePowerAvgPos)) AND ((@IsNull_ReactivePowerAvgNeg = 1 AND [React" +
                "ivePowerAvgNeg] IS NULL) OR ([ReactivePowerAvgNeg] = @Original_ReactivePowerAvgN" +
                "eg)) AND ((@IsNull_LastAvgPowerFactor = 1 AND [LastAvgPowerFactor] IS NULL) OR (" +
                "[LastAvgPowerFactor] = @Original_LastAvgPowerFactor)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoadProfileId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadProfileId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterTimeFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterTimeFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterTimeTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterTimeTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Q1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Q1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Q1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Q3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Q3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Q3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportWh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportWh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportWh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportWh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerAvgPos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerAvgPos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgPos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerAvgNeg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerAvgNeg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgNeg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerAvgPos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerAvgNeg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastAvgPowerFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastAvgPowerFactor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LoadProfile3P] ([LoadProfileId], [MeasurementPointMeterId], [M" +
                "eterId], [ServerTime], [MeterTimeFrom], [MeterTimeTo], [VoltagePhaseA], [Voltage" +
                "PhaseB], [VoltagePhaseC], [CurrentPhaseA], [CurrentPhaseB], [CurrentPhaseC], [Ph" +
                "aseAnglePhaseA], [PhaseAnglePhaseB], [PhaseAnglePhaseC], [ActivePowerPhaseA], [A" +
                "ctivePowerPhaseB], [ActivePowerPhaseC], [ActivePowerPhaseTotal], [ReactivePowerP" +
                "haseA], [ReactivePowerPhaseB], [ReactivePowerPhaseC], [ReactivePowerPhaseTotal]," +
                " [ApparentPowerPhaseA], [ApparentPowerPhaseB], [ApparentPowerPhaseC], [ApparentP" +
                "owerPhaseTotal], [PowerFactorPhaseA], [PowerFactorPhaseB], [PowerFactorPhaseC], " +
                "[PowerFactorPhaseTotal], [EnergyPlusARate1], [EnergyPlusARate2], [EnergyPlusARat" +
                "e3], [EnergySubARate1], [EnergySubARate2], [EnergySubARate3], [Q1], [Q3], [Impor" +
                "tWh], [ExportWh], [ReactiveEnergyPlusARate1], [ReactiveEnergyPlusARate2], [React" +
                "iveEnergyPlusARate3], [ReactiveEnergySubARate1], [ReactiveEnergySubARate2], [Rea" +
                "ctiveEnergySubARate3], [PowerAvgPos], [PowerAvgNeg], [ReactivePowerAvgPos], [Rea" +
                "ctivePowerAvgNeg], [LastAvgPowerFactor]) VALUES (@LoadProfileId, @MeasurementPoi" +
                "ntMeterId, @MeterId, @ServerTime, @MeterTimeFrom, @MeterTimeTo, @VoltagePhaseA, " +
                "@VoltagePhaseB, @VoltagePhaseC, @CurrentPhaseA, @CurrentPhaseB, @CurrentPhaseC, " +
                "@PhaseAnglePhaseA, @PhaseAnglePhaseB, @PhaseAnglePhaseC, @ActivePowerPhaseA, @Ac" +
                "tivePowerPhaseB, @ActivePowerPhaseC, @ActivePowerPhaseTotal, @ReactivePowerPhase" +
                "A, @ReactivePowerPhaseB, @ReactivePowerPhaseC, @ReactivePowerPhaseTotal, @Appare" +
                "ntPowerPhaseA, @ApparentPowerPhaseB, @ApparentPowerPhaseC, @ApparentPowerPhaseTo" +
                "tal, @PowerFactorPhaseA, @PowerFactorPhaseB, @PowerFactorPhaseC, @PowerFactorPha" +
                "seTotal, @EnergyPlusARate1, @EnergyPlusARate2, @EnergyPlusARate3, @EnergySubARat" +
                "e1, @EnergySubARate2, @EnergySubARate3, @Q1, @Q3, @ImportWh, @ExportWh, @Reactiv" +
                "eEnergyPlusARate1, @ReactiveEnergyPlusARate2, @ReactiveEnergyPlusARate3, @Reacti" +
                "veEnergySubARate1, @ReactiveEnergySubARate2, @ReactiveEnergySubARate3, @PowerAvg" +
                "Pos, @PowerAvgNeg, @ReactivePowerAvgPos, @ReactivePowerAvgNeg, @LastAvgPowerFact" +
                "or);\r\nSELECT LoadProfileId, MeasurementPointMeterId, MeterId, ServerTime, MeterT" +
                "imeFrom, MeterTimeTo, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA" +
                ", CurrentPhaseB, CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePh" +
                "aseC, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseT" +
                "otal, ReactivePowerPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePow" +
                "erPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, App" +
                "arentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, P" +
                "owerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, Ener" +
                "gySubARate1, EnergySubARate2, EnergySubARate3, Q1, Q3, ImportWh, ExportWh, React" +
                "iveEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, Reactiv" +
                "eEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PowerAvgPos," +
                " PowerAvgNeg, ReactivePowerAvgPos, ReactivePowerAvgNeg, LastAvgPowerFactor FROM " +
                "LoadProfile3P WHERE (LoadProfileId = @LoadProfileId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadProfileId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadProfileId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTimeFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTimeTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgPos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgNeg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastAvgPowerFactor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[LoadProfile3P] SET [LoadProfileId] = @LoadProfileId, [MeasurementPo" +
                "intMeterId] = @MeasurementPointMeterId, [MeterId] = @MeterId, [ServerTime] = @Se" +
                "rverTime, [MeterTimeFrom] = @MeterTimeFrom, [MeterTimeTo] = @MeterTimeTo, [Volta" +
                "gePhaseA] = @VoltagePhaseA, [VoltagePhaseB] = @VoltagePhaseB, [VoltagePhaseC] = " +
                "@VoltagePhaseC, [CurrentPhaseA] = @CurrentPhaseA, [CurrentPhaseB] = @CurrentPhas" +
                "eB, [CurrentPhaseC] = @CurrentPhaseC, [PhaseAnglePhaseA] = @PhaseAnglePhaseA, [P" +
                "haseAnglePhaseB] = @PhaseAnglePhaseB, [PhaseAnglePhaseC] = @PhaseAnglePhaseC, [A" +
                "ctivePowerPhaseA] = @ActivePowerPhaseA, [ActivePowerPhaseB] = @ActivePowerPhaseB" +
                ", [ActivePowerPhaseC] = @ActivePowerPhaseC, [ActivePowerPhaseTotal] = @ActivePow" +
                "erPhaseTotal, [ReactivePowerPhaseA] = @ReactivePowerPhaseA, [ReactivePowerPhaseB" +
                "] = @ReactivePowerPhaseB, [ReactivePowerPhaseC] = @ReactivePowerPhaseC, [Reactiv" +
                "ePowerPhaseTotal] = @ReactivePowerPhaseTotal, [ApparentPowerPhaseA] = @ApparentP" +
                "owerPhaseA, [ApparentPowerPhaseB] = @ApparentPowerPhaseB, [ApparentPowerPhaseC] " +
                "= @ApparentPowerPhaseC, [ApparentPowerPhaseTotal] = @ApparentPowerPhaseTotal, [P" +
                "owerFactorPhaseA] = @PowerFactorPhaseA, [PowerFactorPhaseB] = @PowerFactorPhaseB" +
                ", [PowerFactorPhaseC] = @PowerFactorPhaseC, [PowerFactorPhaseTotal] = @PowerFact" +
                "orPhaseTotal, [EnergyPlusARate1] = @EnergyPlusARate1, [EnergyPlusARate2] = @Ener" +
                "gyPlusARate2, [EnergyPlusARate3] = @EnergyPlusARate3, [EnergySubARate1] = @Energ" +
                "ySubARate1, [EnergySubARate2] = @EnergySubARate2, [EnergySubARate3] = @EnergySub" +
                "ARate3, [Q1] = @Q1, [Q3] = @Q3, [ImportWh] = @ImportWh, [ExportWh] = @ExportWh, " +
                "[ReactiveEnergyPlusARate1] = @ReactiveEnergyPlusARate1, [ReactiveEnergyPlusARate" +
                "2] = @ReactiveEnergyPlusARate2, [ReactiveEnergyPlusARate3] = @ReactiveEnergyPlus" +
                "ARate3, [ReactiveEnergySubARate1] = @ReactiveEnergySubARate1, [ReactiveEnergySub" +
                "ARate2] = @ReactiveEnergySubARate2, [ReactiveEnergySubARate3] = @ReactiveEnergyS" +
                "ubARate3, [PowerAvgPos] = @PowerAvgPos, [PowerAvgNeg] = @PowerAvgNeg, [ReactiveP" +
                "owerAvgPos] = @ReactivePowerAvgPos, [ReactivePowerAvgNeg] = @ReactivePowerAvgNeg" +
                ", [LastAvgPowerFactor] = @LastAvgPowerFactor WHERE (([LoadProfileId] = @Original" +
                "_LoadProfileId) AND ([MeasurementPointMeterId] = @Original_MeasurementPointMeter" +
                "Id) AND ((@IsNull_MeterId = 1 AND [MeterId] IS NULL) OR ([MeterId] = @Original_M" +
                "eterId)) AND ((@IsNull_ServerTime = 1 AND [ServerTime] IS NULL) OR ([ServerTime]" +
                " = @Original_ServerTime)) AND ((@IsNull_MeterTimeFrom = 1 AND [MeterTimeFrom] IS" +
                " NULL) OR ([MeterTimeFrom] = @Original_MeterTimeFrom)) AND ((@IsNull_MeterTimeTo" +
                " = 1 AND [MeterTimeTo] IS NULL) OR ([MeterTimeTo] = @Original_MeterTimeTo)) AND " +
                "((@IsNull_VoltagePhaseA = 1 AND [VoltagePhaseA] IS NULL) OR ([VoltagePhaseA] = @" +
                "Original_VoltagePhaseA)) AND ((@IsNull_VoltagePhaseB = 1 AND [VoltagePhaseB] IS " +
                "NULL) OR ([VoltagePhaseB] = @Original_VoltagePhaseB)) AND ((@IsNull_VoltagePhase" +
                "C = 1 AND [VoltagePhaseC] IS NULL) OR ([VoltagePhaseC] = @Original_VoltagePhaseC" +
                ")) AND ((@IsNull_CurrentPhaseA = 1 AND [CurrentPhaseA] IS NULL) OR ([CurrentPhas" +
                "eA] = @Original_CurrentPhaseA)) AND ((@IsNull_CurrentPhaseB = 1 AND [CurrentPhas" +
                "eB] IS NULL) OR ([CurrentPhaseB] = @Original_CurrentPhaseB)) AND ((@IsNull_Curre" +
                "ntPhaseC = 1 AND [CurrentPhaseC] IS NULL) OR ([CurrentPhaseC] = @Original_Curren" +
                "tPhaseC)) AND ((@IsNull_PhaseAnglePhaseA = 1 AND [PhaseAnglePhaseA] IS NULL) OR " +
                "([PhaseAnglePhaseA] = @Original_PhaseAnglePhaseA)) AND ((@IsNull_PhaseAnglePhase" +
                "B = 1 AND [PhaseAnglePhaseB] IS NULL) OR ([PhaseAnglePhaseB] = @Original_PhaseAn" +
                "glePhaseB)) AND ((@IsNull_PhaseAnglePhaseC = 1 AND [PhaseAnglePhaseC] IS NULL) O" +
                "R ([PhaseAnglePhaseC] = @Original_PhaseAnglePhaseC)) AND ((@IsNull_ActivePowerPh" +
                "aseA = 1 AND [ActivePowerPhaseA] IS NULL) OR ([ActivePowerPhaseA] = @Original_Ac" +
                "tivePowerPhaseA)) AND ((@IsNull_ActivePowerPhaseB = 1 AND [ActivePowerPhaseB] IS" +
                " NULL) OR ([ActivePowerPhaseB] = @Original_ActivePowerPhaseB)) AND ((@IsNull_Act" +
                "ivePowerPhaseC = 1 AND [ActivePowerPhaseC] IS NULL) OR ([ActivePowerPhaseC] = @O" +
                "riginal_ActivePowerPhaseC)) AND ((@IsNull_ActivePowerPhaseTotal = 1 AND [ActiveP" +
                "owerPhaseTotal] IS NULL) OR ([ActivePowerPhaseTotal] = @Original_ActivePowerPhas" +
                "eTotal)) AND ((@IsNull_ReactivePowerPhaseA = 1 AND [ReactivePowerPhaseA] IS NULL" +
                ") OR ([ReactivePowerPhaseA] = @Original_ReactivePowerPhaseA)) AND ((@IsNull_Reac" +
                "tivePowerPhaseB = 1 AND [ReactivePowerPhaseB] IS NULL) OR ([ReactivePowerPhaseB]" +
                " = @Original_ReactivePowerPhaseB)) AND ((@IsNull_ReactivePowerPhaseC = 1 AND [Re" +
                "activePowerPhaseC] IS NULL) OR ([ReactivePowerPhaseC] = @Original_ReactivePowerP" +
                "haseC)) AND ((@IsNull_ReactivePowerPhaseTotal = 1 AND [ReactivePowerPhaseTotal] " +
                "IS NULL) OR ([ReactivePowerPhaseTotal] = @Original_ReactivePowerPhaseTotal)) AND" +
                " ((@IsNull_ApparentPowerPhaseA = 1 AND [ApparentPowerPhaseA] IS NULL) OR ([Appar" +
                "entPowerPhaseA] = @Original_ApparentPowerPhaseA)) AND ((@IsNull_ApparentPowerPha" +
                "seB = 1 AND [ApparentPowerPhaseB] IS NULL) OR ([ApparentPowerPhaseB] = @Original" +
                "_ApparentPowerPhaseB)) AND ((@IsNull_ApparentPowerPhaseC = 1 AND [ApparentPowerP" +
                "haseC] IS NULL) OR ([ApparentPowerPhaseC] = @Original_ApparentPowerPhaseC)) AND " +
                "((@IsNull_ApparentPowerPhaseTotal = 1 AND [ApparentPowerPhaseTotal] IS NULL) OR " +
                "([ApparentPowerPhaseTotal] = @Original_ApparentPowerPhaseTotal)) AND ((@IsNull_P" +
                "owerFactorPhaseA = 1 AND [PowerFactorPhaseA] IS NULL) OR ([PowerFactorPhaseA] = " +
                "@Original_PowerFactorPhaseA)) AND ((@IsNull_PowerFactorPhaseB = 1 AND [PowerFact" +
                "orPhaseB] IS NULL) OR ([PowerFactorPhaseB] = @Original_PowerFactorPhaseB)) AND (" +
                "(@IsNull_PowerFactorPhaseC = 1 AND [PowerFactorPhaseC] IS NULL) OR ([PowerFactor" +
                "PhaseC] = @Original_PowerFactorPhaseC)) AND ((@IsNull_PowerFactorPhaseTotal = 1 " +
                "AND [PowerFactorPhaseTotal] IS NULL) OR ([PowerFactorPhaseTotal] = @Original_Pow" +
                "erFactorPhaseTotal)) AND ((@IsNull_EnergyPlusARate1 = 1 AND [EnergyPlusARate1] I" +
                "S NULL) OR ([EnergyPlusARate1] = @Original_EnergyPlusARate1)) AND ((@IsNull_Ener" +
                "gyPlusARate2 = 1 AND [EnergyPlusARate2] IS NULL) OR ([EnergyPlusARate2] = @Origi" +
                "nal_EnergyPlusARate2)) AND ((@IsNull_EnergyPlusARate3 = 1 AND [EnergyPlusARate3]" +
                " IS NULL) OR ([EnergyPlusARate3] = @Original_EnergyPlusARate3)) AND ((@IsNull_En" +
                "ergySubARate1 = 1 AND [EnergySubARate1] IS NULL) OR ([EnergySubARate1] = @Origin" +
                "al_EnergySubARate1)) AND ((@IsNull_EnergySubARate2 = 1 AND [EnergySubARate2] IS " +
                "NULL) OR ([EnergySubARate2] = @Original_EnergySubARate2)) AND ((@IsNull_EnergySu" +
                "bARate3 = 1 AND [EnergySubARate3] IS NULL) OR ([EnergySubARate3] = @Original_Ene" +
                "rgySubARate3)) AND ((@IsNull_Q1 = 1 AND [Q1] IS NULL) OR ([Q1] = @Original_Q1)) " +
                "AND ((@IsNull_Q3 = 1 AND [Q3] IS NULL) OR ([Q3] = @Original_Q3)) AND ((@IsNull_I" +
                "mportWh = 1 AND [ImportWh] IS NULL) OR ([ImportWh] = @Original_ImportWh)) AND ((" +
                "@IsNull_ExportWh = 1 AND [ExportWh] IS NULL) OR ([ExportWh] = @Original_ExportWh" +
                ")) AND ((@IsNull_ReactiveEnergyPlusARate1 = 1 AND [ReactiveEnergyPlusARate1] IS " +
                "NULL) OR ([ReactiveEnergyPlusARate1] = @Original_ReactiveEnergyPlusARate1)) AND " +
                "((@IsNull_ReactiveEnergyPlusARate2 = 1 AND [ReactiveEnergyPlusARate2] IS NULL) O" +
                "R ([ReactiveEnergyPlusARate2] = @Original_ReactiveEnergyPlusARate2)) AND ((@IsNu" +
                "ll_ReactiveEnergyPlusARate3 = 1 AND [ReactiveEnergyPlusARate3] IS NULL) OR ([Rea" +
                "ctiveEnergyPlusARate3] = @Original_ReactiveEnergyPlusARate3)) AND ((@IsNull_Reac" +
                "tiveEnergySubARate1 = 1 AND [ReactiveEnergySubARate1] IS NULL) OR ([ReactiveEner" +
                "gySubARate1] = @Original_ReactiveEnergySubARate1)) AND ((@IsNull_ReactiveEnergyS" +
                "ubARate2 = 1 AND [ReactiveEnergySubARate2] IS NULL) OR ([ReactiveEnergySubARate2" +
                "] = @Original_ReactiveEnergySubARate2)) AND ((@IsNull_ReactiveEnergySubARate3 = " +
                "1 AND [ReactiveEnergySubARate3] IS NULL) OR ([ReactiveEnergySubARate3] = @Origin" +
                "al_ReactiveEnergySubARate3)) AND ((@IsNull_PowerAvgPos = 1 AND [PowerAvgPos] IS " +
                "NULL) OR ([PowerAvgPos] = @Original_PowerAvgPos)) AND ((@IsNull_PowerAvgNeg = 1 " +
                "AND [PowerAvgNeg] IS NULL) OR ([PowerAvgNeg] = @Original_PowerAvgNeg)) AND ((@Is" +
                "Null_ReactivePowerAvgPos = 1 AND [ReactivePowerAvgPos] IS NULL) OR ([ReactivePow" +
                "erAvgPos] = @Original_ReactivePowerAvgPos)) AND ((@IsNull_ReactivePowerAvgNeg = " +
                "1 AND [ReactivePowerAvgNeg] IS NULL) OR ([ReactivePowerAvgNeg] = @Original_React" +
                "ivePowerAvgNeg)) AND ((@IsNull_LastAvgPowerFactor = 1 AND [LastAvgPowerFactor] I" +
                "S NULL) OR ([LastAvgPowerFactor] = @Original_LastAvgPowerFactor)));\r\nSELECT Load" +
                "ProfileId, MeasurementPointMeterId, MeterId, ServerTime, MeterTimeFrom, MeterTim" +
                "eTo, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, " +
                "CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, ActivePower" +
                "PhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseTotal, ReactivePow" +
                "erPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePowerPhaseTotal, App" +
                "arentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTo" +
                "tal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTo" +
                "tal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, EnergySubARate1, Ener" +
                "gySubARate2, EnergySubARate3, Q1, Q3, ImportWh, ExportWh, ReactiveEnergyPlusARat" +
                "e1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnergySubARate1," +
                " ReactiveEnergySubARate2, ReactiveEnergySubARate3, PowerAvgPos, PowerAvgNeg, Rea" +
                "ctivePowerAvgPos, ReactivePowerAvgNeg, LastAvgPowerFactor FROM LoadProfile3P WHE" +
                "RE (LoadProfileId = @LoadProfileId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadProfileId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadProfileId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTimeFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeterTimeTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Q3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgPos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgNeg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReactivePowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastAvgPowerFactor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoadProfileId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadProfileId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasurementPointMeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ServerTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServerTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServerTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterTimeFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterTimeFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeterTimeTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeterTimeTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeterTimeTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoltagePhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoltagePhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoltagePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "VoltagePhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "CurrentPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhaseAnglePhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhaseAnglePhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PhaseAnglePhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ActivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApparentPowerPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ApparentPowerPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerFactorPhaseTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerFactorPhaseTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerFactorPhaseTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergyPlusARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergyPlusARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergyPlusARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EnergySubARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnergySubARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "EnergySubARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Q1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Q1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Q1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Q3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Q3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Q3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "Q3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImportWh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportWh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ImportWh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExportWh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExportWh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExportWh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ExportWh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergyPlusARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergyPlusARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactiveEnergySubARate3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactiveEnergySubARate3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ReactiveEnergySubARate3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerAvgPos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerAvgPos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgPos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PowerAvgNeg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PowerAvgNeg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "PowerAvgNeg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerAvgPos", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerAvgPos", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgPos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReactivePowerAvgNeg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReactivePowerAvgNeg", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "ReactivePowerAvgNeg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastAvgPowerFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastAvgPowerFactor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 3, "LastAvgPowerFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::OperationDTO.Properties.Settings.Default.AmiSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT LoadProfileId, MeasurementPointMeterId, MeterId, ServerTime, MeterTimeFrom, MeterTimeTo, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, EnergySubARate1, EnergySubARate2, EnergySubARate3, Q1, Q3, ImportWh, ExportWh, ReactiveEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PowerAvgPos, PowerAvgNeg, ReactivePowerAvgPos, ReactivePowerAvgNeg, LastAvgPowerFactor FROM dbo.LoadProfile3P";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [dbo].[LoadProfile3P] WHERE [MeasurementPointMeterId] = @mpmId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mpmId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MeasurementPointMeterId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LoadProfile3PDataSet.LoadProfile3PDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LoadProfile3PDataSet.LoadProfile3PDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LoadProfile3PDataSet.LoadProfile3PDataTable dataTable = new LoadProfile3PDataSet.LoadProfile3PDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoadProfile3PDataSet.LoadProfile3PDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LoadProfile3PDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LoadProfile3P");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_LoadProfileId, 
                    long Original_MeasurementPointMeterId, 
                    global::System.Nullable<long> Original_MeterId, 
                    global::System.Nullable<global::System.DateTime> Original_ServerTime, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeTo, 
                    global::System.Nullable<decimal> Original_VoltagePhaseA, 
                    global::System.Nullable<decimal> Original_VoltagePhaseB, 
                    global::System.Nullable<decimal> Original_VoltagePhaseC, 
                    global::System.Nullable<decimal> Original_CurrentPhaseA, 
                    global::System.Nullable<decimal> Original_CurrentPhaseB, 
                    global::System.Nullable<decimal> Original_CurrentPhaseC, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseA, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseB, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseC, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_EnergySubARate1, 
                    global::System.Nullable<decimal> Original_EnergySubARate2, 
                    global::System.Nullable<decimal> Original_EnergySubARate3, 
                    global::System.Nullable<decimal> Original_Q1, 
                    global::System.Nullable<decimal> Original_Q3, 
                    global::System.Nullable<decimal> Original_ImportWh, 
                    global::System.Nullable<decimal> Original_ExportWh, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> Original_PowerAvgPos, 
                    global::System.Nullable<decimal> Original_PowerAvgNeg, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> Original_LastAvgPowerFactor) {
            if ((Original_LoadProfileId == null)) {
                throw new global::System.ArgumentNullException("Original_LoadProfileId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LoadProfileId));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_MeasurementPointMeterId));
            if ((Original_MeterId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_MeterId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_ServerTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_ServerTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_MeterTimeFrom.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_MeterTimeFrom.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MeterTimeTo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_MeterTimeTo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_VoltagePhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_VoltagePhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_VoltagePhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_CurrentPhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_CurrentPhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_CurrentPhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((decimal)(Original_ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((decimal)(Original_PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((decimal)(Original_PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((decimal)(Original_EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((decimal)(Original_EnergySubARate1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_EnergySubARate2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((decimal)(Original_EnergySubARate3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Q1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_Q1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Q3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_Q3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ImportWh.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((decimal)(Original_ImportWh.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_ExportWh.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((decimal)(Original_ExportWh.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((decimal)(Original_ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((decimal)(Original_ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((decimal)(Original_ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((decimal)(Original_ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((decimal)(Original_ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((decimal)(Original_ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerAvgPos.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((decimal)(Original_PowerAvgPos.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerAvgNeg.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((decimal)(Original_PowerAvgNeg.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerAvgPos.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((decimal)(Original_ReactivePowerAvgPos.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerAvgNeg.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((decimal)(Original_ReactivePowerAvgNeg.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_LastAvgPowerFactor.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((decimal)(Original_LastAvgPowerFactor.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string LoadProfileId, 
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    global::System.Nullable<global::System.DateTime> ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> MeterTimeTo, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PowerAvgPos, 
                    global::System.Nullable<decimal> PowerAvgNeg, 
                    global::System.Nullable<decimal> ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> LastAvgPowerFactor) {
            if ((LoadProfileId == null)) {
                throw new global::System.ArgumentNullException("LoadProfileId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LoadProfileId));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ServerTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ServerTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MeterTimeFrom.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MeterTimeFrom.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MeterTimeTo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MeterTimeTo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(VoltagePhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(VoltagePhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(VoltagePhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CurrentPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(CurrentPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(CurrentPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(EnergySubARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(EnergySubARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(EnergySubARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Q1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(Q1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Q3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(Q3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ImportWh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(ImportWh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ExportWh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ExportWh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((PowerAvgPos.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(PowerAvgPos.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((PowerAvgNeg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(PowerAvgNeg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerAvgPos.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(ReactivePowerAvgPos.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerAvgNeg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(ReactivePowerAvgNeg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((LastAvgPowerFactor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(LastAvgPowerFactor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LoadProfileId, 
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    global::System.Nullable<global::System.DateTime> ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> MeterTimeTo, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PowerAvgPos, 
                    global::System.Nullable<decimal> PowerAvgNeg, 
                    global::System.Nullable<decimal> ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> LastAvgPowerFactor, 
                    string Original_LoadProfileId, 
                    long Original_MeasurementPointMeterId, 
                    global::System.Nullable<long> Original_MeterId, 
                    global::System.Nullable<global::System.DateTime> Original_ServerTime, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeTo, 
                    global::System.Nullable<decimal> Original_VoltagePhaseA, 
                    global::System.Nullable<decimal> Original_VoltagePhaseB, 
                    global::System.Nullable<decimal> Original_VoltagePhaseC, 
                    global::System.Nullable<decimal> Original_CurrentPhaseA, 
                    global::System.Nullable<decimal> Original_CurrentPhaseB, 
                    global::System.Nullable<decimal> Original_CurrentPhaseC, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseA, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseB, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseC, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_EnergySubARate1, 
                    global::System.Nullable<decimal> Original_EnergySubARate2, 
                    global::System.Nullable<decimal> Original_EnergySubARate3, 
                    global::System.Nullable<decimal> Original_Q1, 
                    global::System.Nullable<decimal> Original_Q3, 
                    global::System.Nullable<decimal> Original_ImportWh, 
                    global::System.Nullable<decimal> Original_ExportWh, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> Original_PowerAvgPos, 
                    global::System.Nullable<decimal> Original_PowerAvgNeg, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> Original_LastAvgPowerFactor) {
            if ((LoadProfileId == null)) {
                throw new global::System.ArgumentNullException("LoadProfileId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LoadProfileId));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(MeasurementPointMeterId));
            if ((MeterId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(MeterId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ServerTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ServerTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MeterTimeFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MeterTimeFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MeterTimeTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MeterTimeTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(VoltagePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(VoltagePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VoltagePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(VoltagePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CurrentPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(CurrentPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CurrentPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(CurrentPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((EnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(EnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(EnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((EnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(EnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Q1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Q1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Q3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Q3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ImportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(ImportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ExportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(ExportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((PowerAvgPos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(PowerAvgPos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((PowerAvgNeg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(PowerAvgNeg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerAvgPos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(ReactivePowerAvgPos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((ReactivePowerAvgNeg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(ReactivePowerAvgNeg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((LastAvgPowerFactor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(LastAvgPowerFactor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_LoadProfileId == null)) {
                throw new global::System.ArgumentNullException("Original_LoadProfileId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_LoadProfileId));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((long)(Original_MeasurementPointMeterId));
            if ((Original_MeterId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((long)(Original_MeterId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_ServerTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_ServerTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_MeterTimeFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_MeterTimeFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_MeterTimeTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_MeterTimeTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_VoltagePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(Original_VoltagePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_VoltagePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(Original_VoltagePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(Original_CurrentPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_CurrentPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrentPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_CurrentPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_PhaseAnglePhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_PhaseAnglePhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_PhaseAnglePhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_PhaseAnglePhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_ActivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_ActivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_ActivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ActivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_ActivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_ReactivePowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_ReactivePowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_ReactivePowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_ReactivePowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_ApparentPowerPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_ApparentPowerPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_ApparentPowerPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_ApparentPowerPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_ApparentPowerPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_PowerFactorPhaseA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_PowerFactorPhaseB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_PowerFactorPhaseC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerFactorPhaseTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_PowerFactorPhaseTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((decimal)(Original_EnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_EnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_EnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_EnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_EnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_EnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((decimal)(Original_EnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_Q1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((decimal)(Original_Q1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_Q3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(Original_Q3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_ImportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(Original_ImportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_ExportWh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((decimal)(Original_ExportWh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_ReactiveEnergyPlusARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((decimal)(Original_ReactiveEnergyPlusARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergyPlusARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((decimal)(Original_ReactiveEnergyPlusARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((decimal)(Original_ReactiveEnergySubARate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((decimal)(Original_ReactiveEnergySubARate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactiveEnergySubARate3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((decimal)(Original_ReactiveEnergySubARate3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerAvgPos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(Original_PowerAvgPos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_PowerAvgNeg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((decimal)(Original_PowerAvgNeg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerAvgPos.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((decimal)(Original_ReactivePowerAvgPos.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_ReactivePowerAvgNeg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((decimal)(Original_ReactivePowerAvgNeg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_LastAvgPowerFactor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((decimal)(Original_LastAvgPowerFactor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long MeasurementPointMeterId, 
                    global::System.Nullable<long> MeterId, 
                    global::System.Nullable<global::System.DateTime> ServerTime, 
                    global::System.Nullable<global::System.DateTime> MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> MeterTimeTo, 
                    global::System.Nullable<decimal> VoltagePhaseA, 
                    global::System.Nullable<decimal> VoltagePhaseB, 
                    global::System.Nullable<decimal> VoltagePhaseC, 
                    global::System.Nullable<decimal> CurrentPhaseA, 
                    global::System.Nullable<decimal> CurrentPhaseB, 
                    global::System.Nullable<decimal> CurrentPhaseC, 
                    global::System.Nullable<decimal> PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseA, 
                    global::System.Nullable<decimal> ActivePowerPhaseB, 
                    global::System.Nullable<decimal> ActivePowerPhaseC, 
                    global::System.Nullable<decimal> ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> PowerFactorPhaseA, 
                    global::System.Nullable<decimal> PowerFactorPhaseB, 
                    global::System.Nullable<decimal> PowerFactorPhaseC, 
                    global::System.Nullable<decimal> PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> EnergyPlusARate1, 
                    global::System.Nullable<decimal> EnergyPlusARate2, 
                    global::System.Nullable<decimal> EnergyPlusARate3, 
                    global::System.Nullable<decimal> EnergySubARate1, 
                    global::System.Nullable<decimal> EnergySubARate2, 
                    global::System.Nullable<decimal> EnergySubARate3, 
                    global::System.Nullable<decimal> Q1, 
                    global::System.Nullable<decimal> Q3, 
                    global::System.Nullable<decimal> ImportWh, 
                    global::System.Nullable<decimal> ExportWh, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> PowerAvgPos, 
                    global::System.Nullable<decimal> PowerAvgNeg, 
                    global::System.Nullable<decimal> ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> LastAvgPowerFactor, 
                    string Original_LoadProfileId, 
                    long Original_MeasurementPointMeterId, 
                    global::System.Nullable<long> Original_MeterId, 
                    global::System.Nullable<global::System.DateTime> Original_ServerTime, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeFrom, 
                    global::System.Nullable<global::System.DateTime> Original_MeterTimeTo, 
                    global::System.Nullable<decimal> Original_VoltagePhaseA, 
                    global::System.Nullable<decimal> Original_VoltagePhaseB, 
                    global::System.Nullable<decimal> Original_VoltagePhaseC, 
                    global::System.Nullable<decimal> Original_CurrentPhaseA, 
                    global::System.Nullable<decimal> Original_CurrentPhaseB, 
                    global::System.Nullable<decimal> Original_CurrentPhaseC, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseA, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseB, 
                    global::System.Nullable<decimal> Original_PhaseAnglePhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ActivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseA, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseB, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseC, 
                    global::System.Nullable<decimal> Original_ReactivePowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseA, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseB, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseC, 
                    global::System.Nullable<decimal> Original_ApparentPowerPhaseTotal, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseA, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseB, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseC, 
                    global::System.Nullable<decimal> Original_PowerFactorPhaseTotal, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_EnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_EnergySubARate1, 
                    global::System.Nullable<decimal> Original_EnergySubARate2, 
                    global::System.Nullable<decimal> Original_EnergySubARate3, 
                    global::System.Nullable<decimal> Original_Q1, 
                    global::System.Nullable<decimal> Original_Q3, 
                    global::System.Nullable<decimal> Original_ImportWh, 
                    global::System.Nullable<decimal> Original_ExportWh, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergyPlusARate3, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate1, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate2, 
                    global::System.Nullable<decimal> Original_ReactiveEnergySubARate3, 
                    global::System.Nullable<decimal> Original_PowerAvgPos, 
                    global::System.Nullable<decimal> Original_PowerAvgNeg, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgPos, 
                    global::System.Nullable<decimal> Original_ReactivePowerAvgNeg, 
                    global::System.Nullable<decimal> Original_LastAvgPowerFactor) {
            return this.Update(Original_LoadProfileId, MeasurementPointMeterId, MeterId, ServerTime, MeterTimeFrom, MeterTimeTo, VoltagePhaseA, VoltagePhaseB, VoltagePhaseC, CurrentPhaseA, CurrentPhaseB, CurrentPhaseC, PhaseAnglePhaseA, PhaseAnglePhaseB, PhaseAnglePhaseC, ActivePowerPhaseA, ActivePowerPhaseB, ActivePowerPhaseC, ActivePowerPhaseTotal, ReactivePowerPhaseA, ReactivePowerPhaseB, ReactivePowerPhaseC, ReactivePowerPhaseTotal, ApparentPowerPhaseA, ApparentPowerPhaseB, ApparentPowerPhaseC, ApparentPowerPhaseTotal, PowerFactorPhaseA, PowerFactorPhaseB, PowerFactorPhaseC, PowerFactorPhaseTotal, EnergyPlusARate1, EnergyPlusARate2, EnergyPlusARate3, EnergySubARate1, EnergySubARate2, EnergySubARate3, Q1, Q3, ImportWh, ExportWh, ReactiveEnergyPlusARate1, ReactiveEnergyPlusARate2, ReactiveEnergyPlusARate3, ReactiveEnergySubARate1, ReactiveEnergySubARate2, ReactiveEnergySubARate3, PowerAvgPos, PowerAvgNeg, ReactivePowerAvgPos, ReactivePowerAvgNeg, LastAvgPowerFactor, Original_LoadProfileId, Original_MeasurementPointMeterId, Original_MeterId, Original_ServerTime, Original_MeterTimeFrom, Original_MeterTimeTo, Original_VoltagePhaseA, Original_VoltagePhaseB, Original_VoltagePhaseC, Original_CurrentPhaseA, Original_CurrentPhaseB, Original_CurrentPhaseC, Original_PhaseAnglePhaseA, Original_PhaseAnglePhaseB, Original_PhaseAnglePhaseC, Original_ActivePowerPhaseA, Original_ActivePowerPhaseB, Original_ActivePowerPhaseC, Original_ActivePowerPhaseTotal, Original_ReactivePowerPhaseA, Original_ReactivePowerPhaseB, Original_ReactivePowerPhaseC, Original_ReactivePowerPhaseTotal, Original_ApparentPowerPhaseA, Original_ApparentPowerPhaseB, Original_ApparentPowerPhaseC, Original_ApparentPowerPhaseTotal, Original_PowerFactorPhaseA, Original_PowerFactorPhaseB, Original_PowerFactorPhaseC, Original_PowerFactorPhaseTotal, Original_EnergyPlusARate1, Original_EnergyPlusARate2, Original_EnergyPlusARate3, Original_EnergySubARate1, Original_EnergySubARate2, Original_EnergySubARate3, Original_Q1, Original_Q3, Original_ImportWh, Original_ExportWh, Original_ReactiveEnergyPlusARate1, Original_ReactiveEnergyPlusARate2, Original_ReactiveEnergyPlusARate3, Original_ReactiveEnergySubARate1, Original_ReactiveEnergySubARate2, Original_ReactiveEnergySubARate3, Original_PowerAvgPos, Original_PowerAvgNeg, Original_ReactivePowerAvgPos, Original_ReactivePowerAvgNeg, Original_LastAvgPowerFactor);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByMpmId(long mpmId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((long)(mpmId));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private LoadProfile3PTableAdapter _loadProfile3PTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LoadProfile3PTableAdapter LoadProfile3PTableAdapter {
            get {
                return this._loadProfile3PTableAdapter;
            }
            set {
                this._loadProfile3PTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._loadProfile3PTableAdapter != null) 
                            && (this._loadProfile3PTableAdapter.Connection != null))) {
                    return this._loadProfile3PTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._loadProfile3PTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LoadProfile3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._loadProfile3PTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LoadProfile3P.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._loadProfile3PTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LoadProfile3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._loadProfile3PTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LoadProfile3P.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._loadProfile3PTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LoadProfile3PDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._loadProfile3PTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LoadProfile3P.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._loadProfile3PTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LoadProfile3PDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._loadProfile3PTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._loadProfile3PTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._loadProfile3PTableAdapter != null)) {
                    revertConnections.Add(this._loadProfile3PTableAdapter, this._loadProfile3PTableAdapter.Connection);
                    this._loadProfile3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._loadProfile3PTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._loadProfile3PTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._loadProfile3PTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._loadProfile3PTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._loadProfile3PTableAdapter != null)) {
                    this._loadProfile3PTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._loadProfile3PTableAdapter]));
                    this._loadProfile3PTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591