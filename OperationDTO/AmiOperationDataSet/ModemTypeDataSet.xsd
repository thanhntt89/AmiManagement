<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ModemTypeDataSet" targetNamespace="http://tempuri.org/ModemTypeDataSet.xsd" xmlns:mstns="http://tempuri.org/ModemTypeDataSet.xsd" xmlns="http://tempuri.org/ModemTypeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AmiSystemOperationConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AmiSystemOperationConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.OperationDTO.Properties.Settings.GlobalReference.Default.AmiSystemOperationConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ModemTypeTableAdapter" GeneratorDataComponentClassName="ModemTypeTableAdapter" Name="ModemType" UserDataComponentName="ModemTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AmiSystemOperationConnectionString (Settings)" DbObjectName="AmiSystemOperationManagement.dbo.ModemType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByIsUsed" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="FillByIsUsed" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="FillByIsUsed">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ModemType] WHERE (([ModemTypeId] = @Original_ModemTypeId) AND ([ModemType] = @Original_ModemType) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)) AND ([IsUsed] = @Original_IsUsed))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModemTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModemTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ModemType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ModemType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsUsed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsUsed" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ModemType] ([ModemType], [Note], [IsUsed]) VALUES (@ModemType, @Note, @IsUsed);
SELECT ModemTypeId, ModemType, Note, IsUsed FROM ModemType WHERE (ModemTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ModemType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ModemType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsUsed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsUsed" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ModemTypeId, ModemType, Note, IsUsed
FROM            ModemType
WHERE        (IsUsed = 1)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ModemType] SET [ModemType] = @ModemType, [Note] = @Note, [IsUsed] = @IsUsed WHERE (([ModemTypeId] = @Original_ModemTypeId) AND ([ModemType] = @Original_ModemType) AND ((@IsNull_Note = 1 AND [Note] IS NULL) OR ([Note] = @Original_Note)) AND ([IsUsed] = @Original_IsUsed));
SELECT ModemTypeId, ModemType, Note, IsUsed FROM ModemType WHERE (ModemTypeId = @ModemTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ModemType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ModemType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsUsed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsUsed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModemTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModemTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ModemType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ModemType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Note" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsUsed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsUsed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ModemTypeId" ColumnName="ModemTypeId" DataSourceName="AmiSystemOperationManagement.dbo.ModemType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ModemTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ModemTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModemTypeId" DataSetColumn="ModemTypeId" />
              <Mapping SourceColumn="ModemType" DataSetColumn="ModemType" />
              <Mapping SourceColumn="Note" DataSetColumn="Note" />
              <Mapping SourceColumn="IsUsed" DataSetColumn="IsUsed" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="AmiSystemOperationConnectionString (Settings)" DbObjectName="AmiSystemOperationManagement.dbo.ModemType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByAll" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByAll" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByAll">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT IsUsed, ModemType, ModemTypeId, Note FROM ModemType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ModemTypeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="ModemTypeDataSet" msprop:Generator_UserDSName="ModemTypeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ModemType" msprop:Generator_TableClassName="ModemTypeDataTable" msprop:Generator_TableVarName="tableModemType" msprop:Generator_RowChangedName="ModemTypeRowChanged" msprop:Generator_TablePropName="ModemType" msprop:Generator_RowDeletingName="ModemTypeRowDeleting" msprop:Generator_RowChangingName="ModemTypeRowChanging" msprop:Generator_RowEvHandlerName="ModemTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="ModemTypeRowDeleted" msprop:Generator_RowClassName="ModemTypeRow" msprop:Generator_UserTableName="ModemType" msprop:Generator_RowEvArgName="ModemTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModemTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnModemTypeId" msprop:Generator_ColumnPropNameInRow="ModemTypeId" msprop:Generator_ColumnPropNameInTable="ModemTypeIdColumn" msprop:Generator_UserColumnName="ModemTypeId" type="xs:int" />
              <xs:element name="ModemType" msprop:Generator_ColumnVarNameInTable="columnModemType" msprop:Generator_ColumnPropNameInRow="ModemType" msprop:Generator_ColumnPropNameInTable="ModemTypeColumn" msprop:Generator_UserColumnName="ModemType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Note" msprop:Generator_ColumnVarNameInTable="columnNote" msprop:Generator_ColumnPropNameInRow="Note" msprop:Generator_ColumnPropNameInTable="NoteColumn" msprop:Generator_UserColumnName="Note" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsUsed" msprop:Generator_ColumnVarNameInTable="columnIsUsed" msprop:Generator_ColumnPropNameInRow="IsUsed" msprop:Generator_ColumnPropNameInTable="IsUsedColumn" msprop:Generator_UserColumnName="IsUsed" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ModemType" />
      <xs:field xpath="mstns:ModemTypeId" />
    </xs:unique>
  </xs:element>
</xs:schema>